<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="8070"><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="0.0000%" y="469" width="0.0124%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="0.0000%" y="453" width="0.0124%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>ucs_async_pipe_drain@plt (1 samples, 0.01%)</title><rect x="0.0000%" y="437" width="0.0124%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>pthread_spin_trylock@plt (1 samples, 0.01%)</title><rect x="0.0124%" y="469" width="0.0124%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2624%" y="479.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="0.0000%" y="485" width="0.0372%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3"/><text x="0.2500%" y="495.50"></text></g><g><title>ucs_async_dispatch_timerq@plt (1 samples, 0.01%)</title><rect x="0.0248%" y="469" width="0.0124%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2748%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.0372%" y="485" width="0.0248%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="2"/><text x="0.2872%" y="495.50"></text></g><g><title>[libucs.so.0.0.0] (2 samples, 0.02%)</title><rect x="0.0372%" y="469" width="0.0248%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="2"/><text x="0.2872%" y="479.50"></text></g><g><title>pthread_rwlock_rdlock@plt (2 samples, 0.02%)</title><rect x="0.0372%" y="453" width="0.0248%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="2"/><text x="0.2872%" y="463.50"></text></g><g><title>sched_yield (1 samples, 0.01%)</title><rect x="0.1735%" y="437" width="0.0124%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="0.4235%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1735%" y="421" width="0.0124%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="0.4235%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1735%" y="405" width="0.0124%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="0.4235%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1735%" y="389" width="0.0124%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="1"/><text x="0.4235%" y="399.50"></text></g><g><title>pthread_spin_lock (2 samples, 0.02%)</title><rect x="0.2726%" y="421" width="0.0248%" height="15" fill="rgb(206,188,39)" fg:x="22" fg:w="2"/><text x="0.5226%" y="431.50"></text></g><g><title>__aarch64_swp4_acq (1 samples, 0.01%)</title><rect x="0.2850%" y="405" width="0.0124%" height="15" fill="rgb(217,207,13)" fg:x="23" fg:w="1"/><text x="0.5350%" y="415.50"></text></g><g><title>[libucs.so.0.0.0] (5 samples, 0.06%)</title><rect x="0.3841%" y="389" width="0.0620%" height="15" fill="rgb(231,73,38)" fg:x="31" fg:w="5"/><text x="0.6341%" y="399.50"></text></g><g><title>[libuct_ib.so.0.0.0] (4 samples, 0.05%)</title><rect x="0.3965%" y="373" width="0.0496%" height="15" fill="rgb(225,20,46)" fg:x="32" fg:w="4"/><text x="0.6465%" y="383.50"></text></g><g><title>[libuct_ib.so.0.0.0] (4 samples, 0.05%)</title><rect x="0.3965%" y="357" width="0.0496%" height="15" fill="rgb(210,31,41)" fg:x="32" fg:w="4"/><text x="0.6465%" y="367.50"></text></g><g><title>ucs_async_dispatch_timerq (22 samples, 0.27%)</title><rect x="0.1859%" y="437" width="0.2726%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="22"/><text x="0.4359%" y="447.50"></text></g><g><title>ucs_async_dispatch_handlers (13 samples, 0.16%)</title><rect x="0.2974%" y="421" width="0.1611%" height="15" fill="rgb(226,26,5)" fg:x="24" fg:w="13"/><text x="0.5474%" y="431.50"></text></g><g><title>[libucs.so.0.0.0] (12 samples, 0.15%)</title><rect x="0.3098%" y="405" width="0.1487%" height="15" fill="rgb(249,33,26)" fg:x="25" fg:w="12"/><text x="0.5598%" y="415.50"></text></g><g><title>__pthread_rwlock_unlock (1 samples, 0.01%)</title><rect x="0.4461%" y="389" width="0.0124%" height="15" fill="rgb(235,183,28)" fg:x="36" fg:w="1"/><text x="0.6961%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="0.7435%" y="373" width="0.0743%" height="15" fill="rgb(221,5,38)" fg:x="60" fg:w="6"/><text x="0.9935%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="0.7435%" y="357" width="0.0743%" height="15" fill="rgb(247,18,42)" fg:x="60" fg:w="6"/><text x="0.9935%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="0.7435%" y="341" width="0.0743%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="6"/><text x="0.9935%" y="351.50"></text></g><g><title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="0.8178%" y="373" width="0.0372%" height="15" fill="rgb(249,31,29)" fg:x="66" fg:w="3"/><text x="1.0678%" y="383.50"></text></g><g><title>[libucs.so.0.0.0] (21 samples, 0.26%)</title><rect x="0.6320%" y="421" width="0.2602%" height="15" fill="rgb(225,111,53)" fg:x="51" fg:w="21"/><text x="0.8820%" y="431.50"></text></g><g><title>ucs_async_pipe_drain (16 samples, 0.20%)</title><rect x="0.6939%" y="405" width="0.1983%" height="15" fill="rgb(238,160,17)" fg:x="56" fg:w="16"/><text x="0.9439%" y="415.50"></text></g><g><title>__read (15 samples, 0.19%)</title><rect x="0.7063%" y="389" width="0.1859%" height="15" fill="rgb(214,148,48)" fg:x="57" fg:w="15"/><text x="0.9563%" y="399.50"></text></g><g><title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="0.8550%" y="373" width="0.0372%" height="15" fill="rgb(232,36,49)" fg:x="69" fg:w="3"/><text x="1.1050%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.9418%" y="405" width="0.0124%" height="15" fill="rgb(209,103,24)" fg:x="76" fg:w="1"/><text x="1.1918%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.9418%" y="389" width="0.0124%" height="15" fill="rgb(229,88,8)" fg:x="76" fg:w="1"/><text x="1.1918%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.9418%" y="373" width="0.0124%" height="15" fill="rgb(213,181,19)" fg:x="76" fg:w="1"/><text x="1.1918%" y="383.50"></text></g><g><title>__libc_disable_asynccancel (6 samples, 0.07%)</title><rect x="0.9542%" y="405" width="0.0743%" height="15" fill="rgb(254,191,54)" fg:x="77" fg:w="6"/><text x="1.2042%" y="415.50"></text></g><g><title>epoll_pwait (12 samples, 0.15%)</title><rect x="0.8922%" y="421" width="0.1487%" height="15" fill="rgb(241,83,37)" fg:x="72" fg:w="12"/><text x="1.1422%" y="431.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="1.0285%" y="405" width="0.0124%" height="15" fill="rgb(233,36,39)" fg:x="83" fg:w="1"/><text x="1.2785%" y="415.50"></text></g><g><title>ucs_event_set_wait (48 samples, 0.59%)</title><rect x="0.4585%" y="437" width="0.5948%" height="15" fill="rgb(226,3,54)" fg:x="37" fg:w="48"/><text x="0.7085%" y="447.50"></text></g><g><title>epoll_wait (1 samples, 0.01%)</title><rect x="1.0409%" y="421" width="0.0124%" height="15" fill="rgb(245,192,40)" fg:x="84" fg:w="1"/><text x="1.2909%" y="431.50"></text></g><g><title>[libucs.so.0.0.0] (80 samples, 0.99%)</title><rect x="0.0867%" y="453" width="0.9913%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="80"/><text x="0.3367%" y="463.50"></text></g><g><title>ucs_get_cpu_clocks_per_sec (2 samples, 0.02%)</title><rect x="1.0533%" y="437" width="0.0248%" height="15" fill="rgb(232,182,51)" fg:x="85" fg:w="2"/><text x="1.3033%" y="447.50"></text></g><g><title>__ctype_init (3 samples, 0.04%)</title><rect x="1.0781%" y="453" width="0.0372%" height="15" fill="rgb(231,60,39)" fg:x="87" fg:w="3"/><text x="1.3281%" y="463.50"></text></g><g><title>pthread_self@plt (1 samples, 0.01%)</title><rect x="1.1152%" y="437" width="0.0124%" height="15" fill="rgb(208,69,12)" fg:x="90" fg:w="1"/><text x="1.3652%" y="447.50"></text></g><g><title>thread_start (87 samples, 1.08%)</title><rect x="0.0620%" y="485" width="1.0781%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="87"/><text x="0.3120%" y="495.50"></text></g><g><title>start_thread (87 samples, 1.08%)</title><rect x="0.0620%" y="469" width="1.0781%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="87"/><text x="0.3120%" y="479.50"></text></g><g><title>ucs_async_dispatch_timerq (2 samples, 0.02%)</title><rect x="1.1152%" y="453" width="0.0248%" height="15" fill="rgb(222,207,29)" fg:x="90" fg:w="2"/><text x="1.3652%" y="463.50"></text></g><g><title>ucs_async_dispatch_handlers@plt (1 samples, 0.01%)</title><rect x="1.1276%" y="437" width="0.0124%" height="15" fill="rgb(206,96,30)" fg:x="91" fg:w="1"/><text x="1.3776%" y="447.50"></text></g><g><title>async (93 samples, 1.15%)</title><rect x="0.0000%" y="501" width="1.1524%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="93"/><text x="0.2500%" y="511.50"></text></g><g><title>ucs_async_pipe_drain (1 samples, 0.01%)</title><rect x="1.1400%" y="485" width="0.0124%" height="15" fill="rgb(250,191,14)" fg:x="92" fg:w="1"/><text x="1.3900%" y="495.50"></text></g><g><title>read@plt (1 samples, 0.01%)</title><rect x="1.1400%" y="469" width="0.0124%" height="15" fill="rgb(239,60,40)" fg:x="92" fg:w="1"/><text x="1.3900%" y="479.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::UnpackMethod&gt;::unpack (37 samples, 0.46%)</title><rect x="1.1524%" y="485" width="0.4585%" height="15" fill="rgb(206,27,48)" fg:x="93" fg:w="37"/><text x="1.4024%" y="495.50"></text></g><g><title>pthread_self@plt (11 samples, 0.14%)</title><rect x="1.6109%" y="469" width="0.1363%" height="15" fill="rgb(225,35,8)" fg:x="130" fg:w="11"/><text x="1.8609%" y="479.50"></text></g><g><title>pthread_spin_lock@plt (19 samples, 0.24%)</title><rect x="1.7472%" y="469" width="0.2354%" height="15" fill="rgb(250,213,24)" fg:x="141" fg:w="19"/><text x="1.9972%" y="479.50"></text></g><g><title>pthread_spin_unlock@plt (8 samples, 0.10%)</title><rect x="1.9827%" y="469" width="0.0991%" height="15" fill="rgb(247,123,22)" fg:x="160" fg:w="8"/><text x="2.2327%" y="479.50"></text></g><g><title>[libuct_ib.so.0.0.0] (47 samples, 0.58%)</title><rect x="1.6109%" y="485" width="0.5824%" height="15" fill="rgb(231,138,38)" fg:x="130" fg:w="47"/><text x="1.8609%" y="495.50"></text></g><g><title>uct_rc_mlx5_iface_srq_post_recv@plt (9 samples, 0.11%)</title><rect x="2.0818%" y="469" width="0.1115%" height="15" fill="rgb(231,145,46)" fg:x="168" fg:w="9"/><text x="2.3318%" y="479.50"></text></g><g><title>ucp_dt_iov_gather (1 samples, 0.01%)</title><rect x="2.1933%" y="469" width="0.0124%" height="15" fill="rgb(251,118,11)" fg:x="177" fg:w="1"/><text x="2.4433%" y="479.50"></text></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="2.1933%" y="453" width="0.0124%" height="15" fill="rgb(217,147,25)" fg:x="177" fg:w="1"/><text x="2.4433%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="2.1933%" y="485" width="0.0496%" height="15" fill="rgb(247,81,37)" fg:x="177" fg:w="4"/><text x="2.4433%" y="495.50"></text></g><g><title>ucp_dt_iov_scatter (3 samples, 0.04%)</title><rect x="2.2057%" y="469" width="0.0372%" height="15" fill="rgb(209,12,38)" fg:x="178" fg:w="3"/><text x="2.4557%" y="479.50"></text></g><g><title>memcpy@plt (3 samples, 0.04%)</title><rect x="2.2057%" y="453" width="0.0372%" height="15" fill="rgb(227,1,9)" fg:x="178" fg:w="3"/><text x="2.4557%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2553%" y="469" width="0.0124%" height="15" fill="rgb(248,47,43)" fg:x="182" fg:w="1"/><text x="2.5053%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2553%" y="453" width="0.0124%" height="15" fill="rgb(221,10,30)" fg:x="182" fg:w="1"/><text x="2.5053%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.2553%" y="437" width="0.0124%" height="15" fill="rgb(210,229,1)" fg:x="182" fg:w="1"/><text x="2.5053%" y="447.50"></text></g><g><title>pthread_spin_lock (2 samples, 0.02%)</title><rect x="2.2677%" y="309" width="0.0248%" height="15" fill="rgb(222,148,37)" fg:x="183" fg:w="2"/><text x="2.5177%" y="319.50"></text></g><g><title>ucp_wireup_select_lanes (1 samples, 0.01%)</title><rect x="2.2924%" y="277" width="0.0124%" height="15" fill="rgb(234,67,33)" fg:x="185" fg:w="1"/><text x="2.5424%" y="287.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.2924%" y="261" width="0.0124%" height="15" fill="rgb(247,98,35)" fg:x="185" fg:w="1"/><text x="2.5424%" y="271.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.2924%" y="245" width="0.0124%" height="15" fill="rgb(247,138,52)" fg:x="185" fg:w="1"/><text x="2.5424%" y="255.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.2924%" y="229" width="0.0124%" height="15" fill="rgb(213,79,30)" fg:x="185" fg:w="1"/><text x="2.5424%" y="239.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.2924%" y="213" width="0.0124%" height="15" fill="rgb(246,177,23)" fg:x="185" fg:w="1"/><text x="2.5424%" y="223.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.2924%" y="197" width="0.0124%" height="15" fill="rgb(230,62,27)" fg:x="185" fg:w="1"/><text x="2.5424%" y="207.50"></text></g><g><title>ucs_snprintf_safe (1 samples, 0.01%)</title><rect x="2.2924%" y="181" width="0.0124%" height="15" fill="rgb(216,154,8)" fg:x="185" fg:w="1"/><text x="2.5424%" y="191.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="2.2924%" y="165" width="0.0124%" height="15" fill="rgb(244,35,45)" fg:x="185" fg:w="1"/><text x="2.5424%" y="175.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="2.2924%" y="149" width="0.0124%" height="15" fill="rgb(251,115,12)" fg:x="185" fg:w="1"/><text x="2.5424%" y="159.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="2.2924%" y="133" width="0.0124%" height="15" fill="rgb(240,54,50)" fg:x="185" fg:w="1"/><text x="2.5424%" y="143.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.01%)</title><rect x="2.2924%" y="117" width="0.0124%" height="15" fill="rgb(233,84,52)" fg:x="185" fg:w="1"/><text x="2.5424%" y="127.50"></text></g><g><title>mpicd::create_endpoint (4 samples, 0.05%)</title><rect x="2.2677%" y="341" width="0.0496%" height="15" fill="rgb(207,117,47)" fg:x="183" fg:w="4"/><text x="2.5177%" y="351.50"></text></g><g><title>ucp_ep_create (4 samples, 0.05%)</title><rect x="2.2677%" y="325" width="0.0496%" height="15" fill="rgb(249,43,39)" fg:x="183" fg:w="4"/><text x="2.5177%" y="335.50"></text></g><g><title>ucp_ep_create_to_worker_addr (2 samples, 0.02%)</title><rect x="2.2924%" y="309" width="0.0248%" height="15" fill="rgb(209,38,44)" fg:x="185" fg:w="2"/><text x="2.5424%" y="319.50"></text></g><g><title>ucp_wireup_init_lanes (2 samples, 0.02%)</title><rect x="2.2924%" y="293" width="0.0248%" height="15" fill="rgb(236,212,23)" fg:x="185" fg:w="2"/><text x="2.5424%" y="303.50"></text></g><g><title>uct_ep_create (1 samples, 0.01%)</title><rect x="2.3048%" y="277" width="0.0124%" height="15" fill="rgb(242,79,21)" fg:x="186" fg:w="1"/><text x="2.5548%" y="287.50"></text></g><g><title>uct_ud_ep_create_connected_common (1 samples, 0.01%)</title><rect x="2.3048%" y="261" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="186" fg:w="1"/><text x="2.5548%" y="271.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.3048%" y="245" width="0.0124%" height="15" fill="rgb(253,215,40)" fg:x="186" fg:w="1"/><text x="2.5548%" y="255.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.3048%" y="229" width="0.0124%" height="15" fill="rgb(211,81,21)" fg:x="186" fg:w="1"/><text x="2.5548%" y="239.50"></text></g><g><title>uct_ud_ep_t_init (1 samples, 0.01%)</title><rect x="2.3048%" y="213" width="0.0124%" height="15" fill="rgb(208,190,38)" fg:x="186" fg:w="1"/><text x="2.5548%" y="223.50"></text></g><g><title>__GI_memset (1 samples, 0.01%)</title><rect x="2.3048%" y="197" width="0.0124%" height="15" fill="rgb(235,213,38)" fg:x="186" fg:w="1"/><text x="2.5548%" y="207.50"></text></g><g><title>pmix_hwloc_setup_topology (1 samples, 0.01%)</title><rect x="2.3172%" y="309" width="0.0124%" height="15" fill="rgb(237,122,38)" fg:x="187" fg:w="1"/><text x="2.5672%" y="319.50"></text></g><g><title>pmix_gds_hash_store (1 samples, 0.01%)</title><rect x="2.3172%" y="293" width="0.0124%" height="15" fill="rgb(244,218,35)" fg:x="187" fg:w="1"/><text x="2.5672%" y="303.50"></text></g><g><title>pmix_hash_store (1 samples, 0.01%)</title><rect x="2.3172%" y="277" width="0.0124%" height="15" fill="rgb(240,68,47)" fg:x="187" fg:w="1"/><text x="2.5672%" y="287.50"></text></g><g><title>pmix_bfrops_base_tma_value_xfer (1 samples, 0.01%)</title><rect x="2.3172%" y="261" width="0.0124%" height="15" fill="rgb(210,16,53)" fg:x="187" fg:w="1"/><text x="2.5672%" y="271.50"></text></g><g><title>pmix_hwloc_copy_topology (1 samples, 0.01%)</title><rect x="2.3172%" y="245" width="0.0124%" height="15" fill="rgb(235,124,12)" fg:x="187" fg:w="1"/><text x="2.5672%" y="255.50"></text></g><g><title>hwloc__topology_dup (1 samples, 0.01%)</title><rect x="2.3172%" y="229" width="0.0124%" height="15" fill="rgb(224,169,11)" fg:x="187" fg:w="1"/><text x="2.5672%" y="239.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.3172%" y="213" width="0.0124%" height="15" fill="rgb(250,166,2)" fg:x="187" fg:w="1"/><text x="2.5672%" y="223.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.3172%" y="197" width="0.0124%" height="15" fill="rgb(242,216,29)" fg:x="187" fg:w="1"/><text x="2.5672%" y="207.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.3172%" y="181" width="0.0124%" height="15" fill="rgb(230,116,27)" fg:x="187" fg:w="1"/><text x="2.5672%" y="191.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.3172%" y="165" width="0.0124%" height="15" fill="rgb(228,99,48)" fg:x="187" fg:w="1"/><text x="2.5672%" y="175.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.3172%" y="149" width="0.0124%" height="15" fill="rgb(253,11,6)" fg:x="187" fg:w="1"/><text x="2.5672%" y="159.50"></text></g><g><title>hwloc_bitmap_tma_dup (1 samples, 0.01%)</title><rect x="2.3172%" y="133" width="0.0124%" height="15" fill="rgb(247,143,39)" fg:x="187" fg:w="1"/><text x="2.5672%" y="143.50"></text></g><g><title>__memcpy_thunderx2 (1 samples, 0.01%)</title><rect x="2.3172%" y="117" width="0.0124%" height="15" fill="rgb(236,97,10)" fg:x="187" fg:w="1"/><text x="2.5672%" y="127.50"></text></g><g><title>pmix_bfrop_base_select (1 samples, 0.01%)</title><rect x="2.3296%" y="293" width="0.0124%" height="15" fill="rgb(233,208,19)" fg:x="188" fg:w="1"/><text x="2.5796%" y="303.50"></text></g><g><title>component_query (1 samples, 0.01%)</title><rect x="2.3296%" y="277" width="0.0124%" height="15" fill="rgb(216,164,2)" fg:x="188" fg:w="1"/><text x="2.5796%" y="287.50"></text></g><g><title>pmix_init_registered_attrs (1 samples, 0.01%)</title><rect x="2.3420%" y="293" width="0.0124%" height="15" fill="rgb(220,129,5)" fg:x="189" fg:w="1"/><text x="2.5920%" y="303.50"></text></g><g><title>__strdup (1 samples, 0.01%)</title><rect x="2.3420%" y="277" width="0.0124%" height="15" fill="rgb(242,17,10)" fg:x="189" fg:w="1"/><text x="2.5920%" y="287.50"></text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="2.3420%" y="261" width="0.0124%" height="15" fill="rgb(242,107,0)" fg:x="189" fg:w="1"/><text x="2.5920%" y="271.50"></text></g><g><title>mpicd::pmi::PMI::init (4 samples, 0.05%)</title><rect x="2.3172%" y="341" width="0.0496%" height="15" fill="rgb(251,28,31)" fg:x="187" fg:w="4"/><text x="2.5672%" y="351.50"></text></g><g><title>PMIx_Init (4 samples, 0.05%)</title><rect x="2.3172%" y="325" width="0.0496%" height="15" fill="rgb(233,223,10)" fg:x="187" fg:w="4"/><text x="2.5672%" y="335.50"></text></g><g><title>pmix_rte_init (3 samples, 0.04%)</title><rect x="2.3296%" y="309" width="0.0372%" height="15" fill="rgb(215,21,27)" fg:x="188" fg:w="3"/><text x="2.5796%" y="319.50"></text></g><g><title>pmix_init_util (1 samples, 0.01%)</title><rect x="2.3544%" y="293" width="0.0124%" height="15" fill="rgb(232,23,21)" fg:x="190" fg:w="1"/><text x="2.6044%" y="303.50"></text></g><g><title>pmix_mca_base_var_init (1 samples, 0.01%)</title><rect x="2.3544%" y="277" width="0.0124%" height="15" fill="rgb(244,5,23)" fg:x="190" fg:w="1"/><text x="2.6044%" y="287.50"></text></g><g><title>pmix_mca_base_var_cache_files (1 samples, 0.01%)</title><rect x="2.3544%" y="261" width="0.0124%" height="15" fill="rgb(226,81,46)" fg:x="190" fg:w="1"/><text x="2.6044%" y="271.50"></text></g><g><title>pmix_mca_base_var_register (1 samples, 0.01%)</title><rect x="2.3544%" y="245" width="0.0124%" height="15" fill="rgb(247,70,30)" fg:x="190" fg:w="1"/><text x="2.6044%" y="255.50"></text></g><g><title>register_variable (1 samples, 0.01%)</title><rect x="2.3544%" y="229" width="0.0124%" height="15" fill="rgb(212,68,19)" fg:x="190" fg:w="1"/><text x="2.6044%" y="239.50"></text></g><g><title>__strdup (1 samples, 0.01%)</title><rect x="2.3544%" y="213" width="0.0124%" height="15" fill="rgb(240,187,13)" fg:x="190" fg:w="1"/><text x="2.6044%" y="223.50"></text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="2.3544%" y="197" width="0.0124%" height="15" fill="rgb(223,113,26)" fg:x="190" fg:w="1"/><text x="2.6044%" y="207.50"></text></g><g><title>[libuct_ib.so.0.0.0] (2 samples, 0.02%)</title><rect x="2.3668%" y="245" width="0.0248%" height="15" fill="rgb(206,192,2)" fg:x="191" fg:w="2"/><text x="2.6168%" y="255.50"></text></g><g><title>uct_ib_mlx5dv_qp_tmp_objs_create (2 samples, 0.02%)</title><rect x="2.3668%" y="229" width="0.0248%" height="15" fill="rgb(241,108,4)" fg:x="191" fg:w="2"/><text x="2.6168%" y="239.50"></text></g><g><title>ibv_create_cq (2 samples, 0.02%)</title><rect x="2.3668%" y="213" width="0.0248%" height="15" fill="rgb(247,173,49)" fg:x="191" fg:w="2"/><text x="2.6168%" y="223.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.3668%" y="197" width="0.0248%" height="15" fill="rgb(224,114,35)" fg:x="191" fg:w="2"/><text x="2.6168%" y="207.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.3668%" y="181" width="0.0248%" height="15" fill="rgb(245,159,27)" fg:x="191" fg:w="2"/><text x="2.6168%" y="191.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="2.3792%" y="165" width="0.0124%" height="15" fill="rgb(245,172,44)" fg:x="192" fg:w="1"/><text x="2.6292%" y="175.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="2.3792%" y="149" width="0.0124%" height="15" fill="rgb(236,23,11)" fg:x="192" fg:w="1"/><text x="2.6292%" y="159.50"></text></g><g><title>posix_memalign (1 samples, 0.01%)</title><rect x="2.3792%" y="133" width="0.0124%" height="15" fill="rgb(205,117,38)" fg:x="192" fg:w="1"/><text x="2.6292%" y="143.50"></text></g><g><title>_mid_memalign (1 samples, 0.01%)</title><rect x="2.3792%" y="117" width="0.0124%" height="15" fill="rgb(237,72,25)" fg:x="192" fg:w="1"/><text x="2.6292%" y="127.50"></text></g><g><title>uct_ib_device_query (1 samples, 0.01%)</title><rect x="2.3916%" y="245" width="0.0124%" height="15" fill="rgb(244,70,9)" fg:x="193" fg:w="1"/><text x="2.6416%" y="255.50"></text></g><g><title>ucs_topo_get_sysfs_dev (1 samples, 0.01%)</title><rect x="2.3916%" y="229" width="0.0124%" height="15" fill="rgb(217,125,39)" fg:x="193" fg:w="1"/><text x="2.6416%" y="239.50"></text></g><g><title>ucs_topo_find_device_by_bdf_name (1 samples, 0.01%)</title><rect x="2.3916%" y="213" width="0.0124%" height="15" fill="rgb(235,36,10)" fg:x="193" fg:w="1"/><text x="2.6416%" y="223.50"></text></g><g><title>sscanf (1 samples, 0.01%)</title><rect x="2.3916%" y="197" width="0.0124%" height="15" fill="rgb(251,123,47)" fg:x="193" fg:w="1"/><text x="2.6416%" y="207.50"></text></g><g><title>__vsscanf (1 samples, 0.01%)</title><rect x="2.3916%" y="181" width="0.0124%" height="15" fill="rgb(221,13,13)" fg:x="193" fg:w="1"/><text x="2.6416%" y="191.50"></text></g><g><title>_IO_vfscanf (1 samples, 0.01%)</title><rect x="2.3916%" y="165" width="0.0124%" height="15" fill="rgb(238,131,9)" fg:x="193" fg:w="1"/><text x="2.6416%" y="175.50"></text></g><g><title>ucm_set_event_handler (1 samples, 0.01%)</title><rect x="2.4040%" y="197" width="0.0124%" height="15" fill="rgb(211,50,8)" fg:x="194" fg:w="1"/><text x="2.6540%" y="207.50"></text></g><g><title>ucm_mmap_install (1 samples, 0.01%)</title><rect x="2.4040%" y="181" width="0.0124%" height="15" fill="rgb(245,182,24)" fg:x="194" fg:w="1"/><text x="2.6540%" y="191.50"></text></g><g><title>[libucm.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.4040%" y="165" width="0.0124%" height="15" fill="rgb(242,14,37)" fg:x="194" fg:w="1"/><text x="2.6540%" y="175.50"></text></g><g><title>[libucm.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.4040%" y="149" width="0.0124%" height="15" fill="rgb(246,228,12)" fg:x="194" fg:w="1"/><text x="2.6540%" y="159.50"></text></g><g><title>ucm_shmat (1 samples, 0.01%)</title><rect x="2.4040%" y="133" width="0.0124%" height="15" fill="rgb(213,55,15)" fg:x="194" fg:w="1"/><text x="2.6540%" y="143.50"></text></g><g><title>__pthread_rwlock_unlock (1 samples, 0.01%)</title><rect x="2.4040%" y="117" width="0.0124%" height="15" fill="rgb(209,9,3)" fg:x="194" fg:w="1"/><text x="2.6540%" y="127.50"></text></g><g><title>ucs_memunits_to_str (1 samples, 0.01%)</title><rect x="2.4164%" y="181" width="0.0124%" height="15" fill="rgb(230,59,30)" fg:x="195" fg:w="1"/><text x="2.6664%" y="191.50"></text></g><g><title>ucs_snprintf_safe (1 samples, 0.01%)</title><rect x="2.4164%" y="165" width="0.0124%" height="15" fill="rgb(209,121,21)" fg:x="195" fg:w="1"/><text x="2.6664%" y="175.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="2.4164%" y="149" width="0.0124%" height="15" fill="rgb(220,109,13)" fg:x="195" fg:w="1"/><text x="2.6664%" y="159.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="2.4164%" y="133" width="0.0124%" height="15" fill="rgb(232,18,1)" fg:x="195" fg:w="1"/><text x="2.6664%" y="143.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="2.4164%" y="117" width="0.0124%" height="15" fill="rgb(215,41,42)" fg:x="195" fg:w="1"/><text x="2.6664%" y="127.50"></text></g><g><title>strchrnul (1 samples, 0.01%)</title><rect x="2.4164%" y="101" width="0.0124%" height="15" fill="rgb(224,123,36)" fg:x="195" fg:w="1"/><text x="2.6664%" y="111.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="2.4411%" y="149" width="0.0372%" height="15" fill="rgb(240,125,3)" fg:x="197" fg:w="3"/><text x="2.6911%" y="159.50"></text></g><g><title>ucs_malloc (1 samples, 0.01%)</title><rect x="2.4659%" y="133" width="0.0124%" height="15" fill="rgb(205,98,50)" fg:x="199" fg:w="1"/><text x="2.7159%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="2.4659%" y="117" width="0.0124%" height="15" fill="rgb(205,185,37)" fg:x="199" fg:w="1"/><text x="2.7159%" y="127.50"></text></g><g><title>_IO_no_init (1 samples, 0.01%)</title><rect x="2.4783%" y="101" width="0.0124%" height="15" fill="rgb(238,207,15)" fg:x="200" fg:w="1"/><text x="2.7283%" y="111.50"></text></g><g><title>ucs_snprintf_safe (4 samples, 0.05%)</title><rect x="2.4783%" y="149" width="0.0496%" height="15" fill="rgb(213,199,42)" fg:x="200" fg:w="4"/><text x="2.7283%" y="159.50"></text></g><g><title>ucs_vsnprintf_safe (4 samples, 0.05%)</title><rect x="2.4783%" y="133" width="0.0496%" height="15" fill="rgb(235,201,11)" fg:x="200" fg:w="4"/><text x="2.7283%" y="143.50"></text></g><g><title>__vsnprintf_chk (4 samples, 0.05%)</title><rect x="2.4783%" y="117" width="0.0496%" height="15" fill="rgb(207,46,11)" fg:x="200" fg:w="4"/><text x="2.7283%" y="127.50"></text></g><g><title>_IO_vfprintf (3 samples, 0.04%)</title><rect x="2.4907%" y="101" width="0.0372%" height="15" fill="rgb(241,35,35)" fg:x="201" fg:w="3"/><text x="2.7407%" y="111.50"></text></g><g><title>strchrnul (1 samples, 0.01%)</title><rect x="2.5155%" y="85" width="0.0124%" height="15" fill="rgb(243,32,47)" fg:x="203" fg:w="1"/><text x="2.7655%" y="95.50"></text></g><g><title>[libucs.so.0.0.0] (10 samples, 0.12%)</title><rect x="2.4411%" y="165" width="0.1239%" height="15" fill="rgb(247,202,23)" fg:x="197" fg:w="10"/><text x="2.6911%" y="175.50"></text></g><g><title>ucs_vsnprintf_safe (3 samples, 0.04%)</title><rect x="2.5279%" y="149" width="0.0372%" height="15" fill="rgb(219,102,11)" fg:x="204" fg:w="3"/><text x="2.7779%" y="159.50"></text></g><g><title>__vsnprintf_chk (3 samples, 0.04%)</title><rect x="2.5279%" y="133" width="0.0372%" height="15" fill="rgb(243,110,44)" fg:x="204" fg:w="3"/><text x="2.7779%" y="143.50"></text></g><g><title>_IO_vfprintf (2 samples, 0.02%)</title><rect x="2.5403%" y="117" width="0.0248%" height="15" fill="rgb(222,74,54)" fg:x="205" fg:w="2"/><text x="2.7903%" y="127.50"></text></g><g><title>strchrnul (2 samples, 0.02%)</title><rect x="2.5403%" y="101" width="0.0248%" height="15" fill="rgb(216,99,12)" fg:x="205" fg:w="2"/><text x="2.7903%" y="111.50"></text></g><g><title>ucs_rcache_create (14 samples, 0.17%)</title><rect x="2.4040%" y="229" width="0.1735%" height="15" fill="rgb(226,22,26)" fg:x="194" fg:w="14"/><text x="2.6540%" y="239.50"></text></g><g><title>[libucs.so.0.0.0] (14 samples, 0.17%)</title><rect x="2.4040%" y="213" width="0.1735%" height="15" fill="rgb(217,163,10)" fg:x="194" fg:w="14"/><text x="2.6540%" y="223.50"></text></g><g><title>ucs_rcache_vfs_init (13 samples, 0.16%)</title><rect x="2.4164%" y="197" width="0.1611%" height="15" fill="rgb(213,25,53)" fg:x="195" fg:w="13"/><text x="2.6664%" y="207.50"></text></g><g><title>ucs_vfs_obj_add_ro_file (12 samples, 0.15%)</title><rect x="2.4287%" y="181" width="0.1487%" height="15" fill="rgb(252,105,26)" fg:x="196" fg:w="12"/><text x="2.6787%" y="191.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="2.5651%" y="165" width="0.0124%" height="15" fill="rgb(220,39,43)" fg:x="207" fg:w="1"/><text x="2.8151%" y="175.50"></text></g><g><title>uct_ib_md_open (18 samples, 0.22%)</title><rect x="2.3668%" y="277" width="0.2230%" height="15" fill="rgb(229,68,48)" fg:x="191" fg:w="18"/><text x="2.6168%" y="287.50"></text></g><g><title>[libuct_ib.so.0.0.0] (18 samples, 0.22%)</title><rect x="2.3668%" y="261" width="0.2230%" height="15" fill="rgb(252,8,32)" fg:x="191" fg:w="18"/><text x="2.6168%" y="271.50"></text></g><g><title>uct_ib_md_open_common (15 samples, 0.19%)</title><rect x="2.4040%" y="245" width="0.1859%" height="15" fill="rgb(223,20,43)" fg:x="194" fg:w="15"/><text x="2.6540%" y="255.50"></text></g><g><title>uct_ib_device_init (1 samples, 0.01%)</title><rect x="2.5774%" y="229" width="0.0124%" height="15" fill="rgb(229,81,49)" fg:x="208" fg:w="1"/><text x="2.8274%" y="239.50"></text></g><g><title>ucs_read_file (1 samples, 0.01%)</title><rect x="2.5774%" y="213" width="0.0124%" height="15" fill="rgb(236,28,36)" fg:x="208" fg:w="1"/><text x="2.8274%" y="223.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.5774%" y="197" width="0.0124%" height="15" fill="rgb(249,185,26)" fg:x="208" fg:w="1"/><text x="2.8274%" y="207.50"></text></g><g><title>__read (1 samples, 0.01%)</title><rect x="2.5774%" y="181" width="0.0124%" height="15" fill="rgb(249,174,33)" fg:x="208" fg:w="1"/><text x="2.8274%" y="191.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="2.5774%" y="165" width="0.0124%" height="15" fill="rgb(233,201,37)" fg:x="208" fg:w="1"/><text x="2.8274%" y="175.50"></text></g><g><title>[libucp.so.0.0.0] (19 samples, 0.24%)</title><rect x="2.3668%" y="309" width="0.2354%" height="15" fill="rgb(221,78,26)" fg:x="191" fg:w="19"/><text x="2.6168%" y="319.50"></text></g><g><title>uct_md_open (19 samples, 0.24%)</title><rect x="2.3668%" y="293" width="0.2354%" height="15" fill="rgb(250,127,30)" fg:x="191" fg:w="19"/><text x="2.6168%" y="303.50"></text></g><g><title>uct_md_vfs_init (1 samples, 0.01%)</title><rect x="2.5898%" y="277" width="0.0124%" height="15" fill="rgb(230,49,44)" fg:x="209" fg:w="1"/><text x="2.8398%" y="287.50"></text></g><g><title>ucs_vfs_obj_add_dir (1 samples, 0.01%)</title><rect x="2.5898%" y="261" width="0.0124%" height="15" fill="rgb(229,67,23)" fg:x="209" fg:w="1"/><text x="2.8398%" y="271.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.5898%" y="245" width="0.0124%" height="15" fill="rgb(249,83,47)" fg:x="209" fg:w="1"/><text x="2.8398%" y="255.50"></text></g><g><title>ucs_snprintf_safe (1 samples, 0.01%)</title><rect x="2.5898%" y="229" width="0.0124%" height="15" fill="rgb(215,43,3)" fg:x="209" fg:w="1"/><text x="2.8398%" y="239.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="2.6022%" y="101" width="0.0124%" height="15" fill="rgb(238,154,13)" fg:x="210" fg:w="1"/><text x="2.8522%" y="111.50"></text></g><g><title>_dl_dst_count (1 samples, 0.01%)</title><rect x="2.6022%" y="85" width="0.0124%" height="15" fill="rgb(219,56,2)" fg:x="210" fg:w="1"/><text x="2.8522%" y="95.50"></text></g><g><title>strchr (1 samples, 0.01%)</title><rect x="2.6022%" y="69" width="0.0124%" height="15" fill="rgb(233,0,4)" fg:x="210" fg:w="1"/><text x="2.8522%" y="79.50"></text></g><g><title>ucp_init_version (21 samples, 0.26%)</title><rect x="2.3668%" y="341" width="0.2602%" height="15" fill="rgb(235,30,7)" fg:x="191" fg:w="21"/><text x="2.6168%" y="351.50"></text></g><g><title>[libucp.so.0.0.0] (21 samples, 0.26%)</title><rect x="2.3668%" y="325" width="0.2602%" height="15" fill="rgb(250,79,13)" fg:x="191" fg:w="21"/><text x="2.6168%" y="335.50"></text></g><g><title>uct_query_components (2 samples, 0.02%)</title><rect x="2.6022%" y="309" width="0.0248%" height="15" fill="rgb(211,146,34)" fg:x="210" fg:w="2"/><text x="2.8522%" y="319.50"></text></g><g><title>ucs_load_modules (2 samples, 0.02%)</title><rect x="2.6022%" y="293" width="0.0248%" height="15" fill="rgb(228,22,38)" fg:x="210" fg:w="2"/><text x="2.8522%" y="303.50"></text></g><g><title>[libucs.so.0.0.0] (2 samples, 0.02%)</title><rect x="2.6022%" y="277" width="0.0248%" height="15" fill="rgb(235,168,5)" fg:x="210" fg:w="2"/><text x="2.8522%" y="287.50"></text></g><g><title>dlopen@@GLIBC_2.17 (2 samples, 0.02%)</title><rect x="2.6022%" y="261" width="0.0248%" height="15" fill="rgb(221,155,16)" fg:x="210" fg:w="2"/><text x="2.8522%" y="271.50"></text></g><g><title>_dlerror_run (2 samples, 0.02%)</title><rect x="2.6022%" y="245" width="0.0248%" height="15" fill="rgb(215,215,53)" fg:x="210" fg:w="2"/><text x="2.8522%" y="255.50"></text></g><g><title>_dl_catch_error (2 samples, 0.02%)</title><rect x="2.6022%" y="229" width="0.0248%" height="15" fill="rgb(223,4,10)" fg:x="210" fg:w="2"/><text x="2.8522%" y="239.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.02%)</title><rect x="2.6022%" y="213" width="0.0248%" height="15" fill="rgb(234,103,6)" fg:x="210" fg:w="2"/><text x="2.8522%" y="223.50"></text></g><g><title>dlopen_doit (2 samples, 0.02%)</title><rect x="2.6022%" y="197" width="0.0248%" height="15" fill="rgb(227,97,0)" fg:x="210" fg:w="2"/><text x="2.8522%" y="207.50"></text></g><g><title>_dl_open (2 samples, 0.02%)</title><rect x="2.6022%" y="181" width="0.0248%" height="15" fill="rgb(234,150,53)" fg:x="210" fg:w="2"/><text x="2.8522%" y="191.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.02%)</title><rect x="2.6022%" y="165" width="0.0248%" height="15" fill="rgb(228,201,54)" fg:x="210" fg:w="2"/><text x="2.8522%" y="175.50"></text></g><g><title>dl_open_worker (2 samples, 0.02%)</title><rect x="2.6022%" y="149" width="0.0248%" height="15" fill="rgb(222,22,37)" fg:x="210" fg:w="2"/><text x="2.8522%" y="159.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.02%)</title><rect x="2.6022%" y="133" width="0.0248%" height="15" fill="rgb(237,53,32)" fg:x="210" fg:w="2"/><text x="2.8522%" y="143.50"></text></g><g><title>dl_open_worker_begin (2 samples, 0.02%)</title><rect x="2.6022%" y="117" width="0.0248%" height="15" fill="rgb(233,25,53)" fg:x="210" fg:w="2"/><text x="2.8522%" y="127.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="2.6146%" y="101" width="0.0124%" height="15" fill="rgb(210,40,34)" fg:x="211" fg:w="1"/><text x="2.8646%" y="111.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="2.6146%" y="85" width="0.0124%" height="15" fill="rgb(241,220,44)" fg:x="211" fg:w="1"/><text x="2.8646%" y="95.50"></text></g><g><title>elf_machine_rela (1 samples, 0.01%)</title><rect x="2.6146%" y="69" width="0.0124%" height="15" fill="rgb(235,28,35)" fg:x="211" fg:w="1"/><text x="2.8646%" y="79.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="2.6146%" y="53" width="0.0124%" height="15" fill="rgb(210,56,17)" fg:x="211" fg:w="1"/><text x="2.8646%" y="63.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="2.6146%" y="37" width="0.0124%" height="15" fill="rgb(224,130,29)" fg:x="211" fg:w="1"/><text x="2.8646%" y="47.50"></text></g><g><title>ucp_worker_iface_init (1 samples, 0.01%)</title><rect x="2.6270%" y="309" width="0.0124%" height="15" fill="rgb(235,212,8)" fg:x="212" fg:w="1"/><text x="2.8770%" y="319.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6270%" y="293" width="0.0124%" height="15" fill="rgb(223,33,50)" fg:x="212" fg:w="1"/><text x="2.8770%" y="303.50"></text></g><g><title>ucs_async_modify_handler (1 samples, 0.01%)</title><rect x="2.6270%" y="277" width="0.0124%" height="15" fill="rgb(219,149,13)" fg:x="212" fg:w="1"/><text x="2.8770%" y="287.50"></text></g><g><title>uct_dc_mlx5_iface_create_dct (1 samples, 0.01%)</title><rect x="2.6394%" y="245" width="0.0124%" height="15" fill="rgb(250,156,29)" fg:x="213" fg:w="1"/><text x="2.8894%" y="255.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="2.6394%" y="229" width="0.0124%" height="15" fill="rgb(216,193,19)" fg:x="213" fg:w="1"/><text x="2.8894%" y="239.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.6518%" y="149" width="0.0248%" height="15" fill="rgb(216,135,14)" fg:x="214" fg:w="2"/><text x="2.9018%" y="159.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (7 samples, 0.09%)</title><rect x="2.6518%" y="181" width="0.0867%" height="15" fill="rgb(241,47,5)" fg:x="214" fg:w="7"/><text x="2.9018%" y="191.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (7 samples, 0.09%)</title><rect x="2.6518%" y="165" width="0.0867%" height="15" fill="rgb(233,42,35)" fg:x="214" fg:w="7"/><text x="2.9018%" y="175.50"></text></g><g><title>ibv_cmd_create_cq_ex (5 samples, 0.06%)</title><rect x="2.6766%" y="149" width="0.0620%" height="15" fill="rgb(231,13,6)" fg:x="216" fg:w="5"/><text x="2.9266%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (5 samples, 0.06%)</title><rect x="2.6766%" y="133" width="0.0620%" height="15" fill="rgb(207,181,40)" fg:x="216" fg:w="5"/><text x="2.9266%" y="143.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (5 samples, 0.06%)</title><rect x="2.6766%" y="117" width="0.0620%" height="15" fill="rgb(254,173,49)" fg:x="216" fg:w="5"/><text x="2.9266%" y="127.50"></text></g><g><title>execute_ioctl (5 samples, 0.06%)</title><rect x="2.6766%" y="101" width="0.0620%" height="15" fill="rgb(221,1,38)" fg:x="216" fg:w="5"/><text x="2.9266%" y="111.50"></text></g><g><title>ioctl (1 samples, 0.01%)</title><rect x="2.7261%" y="85" width="0.0124%" height="15" fill="rgb(206,124,46)" fg:x="220" fg:w="1"/><text x="2.9761%" y="95.50"></text></g><g><title>uct_rc_mlx5_iface_common_t_init (8 samples, 0.10%)</title><rect x="2.6518%" y="245" width="0.0991%" height="15" fill="rgb(249,21,11)" fg:x="214" fg:w="8"/><text x="2.9018%" y="255.50"></text></g><g><title>uct_rc_iface_t_init (8 samples, 0.10%)</title><rect x="2.6518%" y="229" width="0.0991%" height="15" fill="rgb(222,201,40)" fg:x="214" fg:w="8"/><text x="2.9018%" y="239.50"></text></g><g><title>uct_ib_iface_t_init (8 samples, 0.10%)</title><rect x="2.6518%" y="213" width="0.0991%" height="15" fill="rgb(235,61,29)" fg:x="214" fg:w="8"/><text x="2.9018%" y="223.50"></text></g><g><title>uct_ib_mlx5_create_cq (8 samples, 0.10%)</title><rect x="2.6518%" y="197" width="0.0991%" height="15" fill="rgb(219,207,3)" fg:x="214" fg:w="8"/><text x="2.9018%" y="207.50"></text></g><g><title>uct_ib_mlx5_fill_cq (1 samples, 0.01%)</title><rect x="2.7385%" y="181" width="0.0124%" height="15" fill="rgb(222,56,46)" fg:x="221" fg:w="1"/><text x="2.9885%" y="191.50"></text></g><g><title>uct_ib_mlx5_fill_cq_common (1 samples, 0.01%)</title><rect x="2.7385%" y="165" width="0.0124%" height="15" fill="rgb(239,76,54)" fg:x="221" fg:w="1"/><text x="2.9885%" y="175.50"></text></g><g><title>uct_ud_iface_complete_init (1 samples, 0.01%)</title><rect x="2.7509%" y="245" width="0.0124%" height="15" fill="rgb(231,124,27)" fg:x="222" fg:w="1"/><text x="3.0009%" y="255.50"></text></g><g><title>ucs_twheel_init (1 samples, 0.01%)</title><rect x="2.7509%" y="229" width="0.0124%" height="15" fill="rgb(249,195,6)" fg:x="222" fg:w="1"/><text x="3.0009%" y="239.50"></text></g><g><title>ucs_malloc (1 samples, 0.01%)</title><rect x="2.7509%" y="213" width="0.0124%" height="15" fill="rgb(237,174,47)" fg:x="222" fg:w="1"/><text x="3.0009%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="2.7509%" y="197" width="0.0124%" height="15" fill="rgb(206,201,31)" fg:x="222" fg:w="1"/><text x="3.0009%" y="207.50"></text></g><g><title>open (1 samples, 0.01%)</title><rect x="2.7633%" y="181" width="0.0124%" height="15" fill="rgb(231,57,52)" fg:x="223" fg:w="1"/><text x="3.0133%" y="191.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="2.7633%" y="165" width="0.0124%" height="15" fill="rgb(248,177,22)" fg:x="223" fg:w="1"/><text x="3.0133%" y="175.50"></text></g><g><title>uct_ib_device_query_gid_info (3 samples, 0.04%)</title><rect x="2.7633%" y="229" width="0.0372%" height="15" fill="rgb(215,211,37)" fg:x="223" fg:w="3"/><text x="3.0133%" y="239.50"></text></g><g><title>ucs_read_file (3 samples, 0.04%)</title><rect x="2.7633%" y="213" width="0.0372%" height="15" fill="rgb(241,128,51)" fg:x="223" fg:w="3"/><text x="3.0133%" y="223.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="2.7633%" y="197" width="0.0372%" height="15" fill="rgb(227,165,31)" fg:x="223" fg:w="3"/><text x="3.0133%" y="207.50"></text></g><g><title>ucs_vsnprintf_safe (2 samples, 0.02%)</title><rect x="2.7757%" y="181" width="0.0248%" height="15" fill="rgb(228,167,24)" fg:x="224" fg:w="2"/><text x="3.0257%" y="191.50"></text></g><g><title>__vsnprintf_chk (2 samples, 0.02%)</title><rect x="2.7757%" y="165" width="0.0248%" height="15" fill="rgb(228,143,12)" fg:x="224" fg:w="2"/><text x="3.0257%" y="175.50"></text></g><g><title>_IO_vfprintf (2 samples, 0.02%)</title><rect x="2.7757%" y="149" width="0.0248%" height="15" fill="rgb(249,149,8)" fg:x="224" fg:w="2"/><text x="3.0257%" y="159.50"></text></g><g><title>[libuct_ib.so.0.0.0] (14 samples, 0.17%)</title><rect x="2.6394%" y="261" width="0.1735%" height="15" fill="rgb(243,35,44)" fg:x="213" fg:w="14"/><text x="2.8894%" y="271.50"></text></g><g><title>uct_ud_iface_t_init (4 samples, 0.05%)</title><rect x="2.7633%" y="245" width="0.0496%" height="15" fill="rgb(246,89,9)" fg:x="223" fg:w="4"/><text x="3.0133%" y="255.50"></text></g><g><title>uct_ib_iface_t_init (1 samples, 0.01%)</title><rect x="2.8005%" y="229" width="0.0124%" height="15" fill="rgb(233,213,13)" fg:x="226" fg:w="1"/><text x="3.0505%" y="239.50"></text></g><g><title>uct_ib_iface_is_roce (1 samples, 0.01%)</title><rect x="2.8005%" y="213" width="0.0124%" height="15" fill="rgb(233,141,41)" fg:x="226" fg:w="1"/><text x="3.0505%" y="223.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="2.8129%" y="149" width="0.0124%" height="15" fill="rgb(239,167,4)" fg:x="227" fg:w="1"/><text x="3.0629%" y="159.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="2.8129%" y="133" width="0.0124%" height="15" fill="rgb(209,217,16)" fg:x="227" fg:w="1"/><text x="3.0629%" y="143.50"></text></g><g><title>getenv (1 samples, 0.01%)</title><rect x="2.8129%" y="117" width="0.0124%" height="15" fill="rgb(219,88,35)" fg:x="227" fg:w="1"/><text x="3.0629%" y="127.50"></text></g><g><title>[libuct_ib.so.0.0.0] (16 samples, 0.20%)</title><rect x="2.6394%" y="277" width="0.1983%" height="15" fill="rgb(220,193,23)" fg:x="213" fg:w="16"/><text x="2.8894%" y="287.50"></text></g><g><title>uct_rc_mlx5_iface_t_init (2 samples, 0.02%)</title><rect x="2.8129%" y="261" width="0.0248%" height="15" fill="rgb(230,90,52)" fg:x="227" fg:w="2"/><text x="3.0629%" y="271.50"></text></g><g><title>uct_rc_mlx5_iface_common_t_init (2 samples, 0.02%)</title><rect x="2.8129%" y="245" width="0.0248%" height="15" fill="rgb(252,106,19)" fg:x="227" fg:w="2"/><text x="3.0629%" y="255.50"></text></g><g><title>uct_rc_iface_t_init (2 samples, 0.02%)</title><rect x="2.8129%" y="229" width="0.0248%" height="15" fill="rgb(206,74,20)" fg:x="227" fg:w="2"/><text x="3.0629%" y="239.50"></text></g><g><title>uct_ib_iface_t_init (2 samples, 0.02%)</title><rect x="2.8129%" y="213" width="0.0248%" height="15" fill="rgb(230,138,44)" fg:x="227" fg:w="2"/><text x="3.0629%" y="223.50"></text></g><g><title>uct_ib_mlx5_create_cq (2 samples, 0.02%)</title><rect x="2.8129%" y="197" width="0.0248%" height="15" fill="rgb(235,182,43)" fg:x="227" fg:w="2"/><text x="3.0629%" y="207.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.8129%" y="181" width="0.0248%" height="15" fill="rgb(242,16,51)" fg:x="227" fg:w="2"/><text x="3.0629%" y="191.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.8129%" y="165" width="0.0248%" height="15" fill="rgb(248,9,4)" fg:x="227" fg:w="2"/><text x="3.0629%" y="175.50"></text></g><g><title>calloc (1 samples, 0.01%)</title><rect x="2.8253%" y="149" width="0.0124%" height="15" fill="rgb(210,31,22)" fg:x="228" fg:w="1"/><text x="3.0753%" y="159.50"></text></g><g><title>__GI_memset (1 samples, 0.01%)</title><rect x="2.8253%" y="133" width="0.0124%" height="15" fill="rgb(239,54,39)" fg:x="228" fg:w="1"/><text x="3.0753%" y="143.50"></text></g><g><title>uct_iface_open (17 samples, 0.21%)</title><rect x="2.6394%" y="293" width="0.2107%" height="15" fill="rgb(230,99,41)" fg:x="213" fg:w="17"/><text x="2.8894%" y="303.50"></text></g><g><title>uct_mm_iface_t_new (1 samples, 0.01%)</title><rect x="2.8377%" y="277" width="0.0124%" height="15" fill="rgb(253,106,12)" fg:x="229" fg:w="1"/><text x="3.0877%" y="287.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8377%" y="261" width="0.0124%" height="15" fill="rgb(213,46,41)" fg:x="229" fg:w="1"/><text x="3.0877%" y="271.50"></text></g><g><title>ucs_mpool_get_grow (1 samples, 0.01%)</title><rect x="2.8377%" y="245" width="0.0124%" height="15" fill="rgb(215,133,35)" fg:x="229" fg:w="1"/><text x="3.0877%" y="255.50"></text></g><g><title>ucs_mpool_grow (1 samples, 0.01%)</title><rect x="2.8377%" y="229" width="0.0124%" height="15" fill="rgb(213,28,5)" fg:x="229" fg:w="1"/><text x="3.0877%" y="239.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8377%" y="213" width="0.0124%" height="15" fill="rgb(215,77,49)" fg:x="229" fg:w="1"/><text x="3.0877%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.8377%" y="197" width="0.0124%" height="15" fill="rgb(248,100,22)" fg:x="229" fg:w="1"/><text x="3.0877%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.8377%" y="181" width="0.0124%" height="15" fill="rgb(208,67,9)" fg:x="229" fg:w="1"/><text x="3.0877%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.8377%" y="165" width="0.0124%" height="15" fill="rgb(219,133,21)" fg:x="229" fg:w="1"/><text x="3.0877%" y="175.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8501%" y="245" width="0.0124%" height="15" fill="rgb(246,46,29)" fg:x="230" fg:w="1"/><text x="3.1001%" y="255.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8501%" y="229" width="0.0124%" height="15" fill="rgb(246,185,52)" fg:x="230" fg:w="1"/><text x="3.1001%" y="239.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8501%" y="213" width="0.0124%" height="15" fill="rgb(252,136,11)" fg:x="230" fg:w="1"/><text x="3.1001%" y="223.50"></text></g><g><title>getenv (1 samples, 0.01%)</title><rect x="2.8501%" y="197" width="0.0124%" height="15" fill="rgb(219,138,53)" fg:x="230" fg:w="1"/><text x="3.1001%" y="207.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8625%" y="213" width="0.0124%" height="15" fill="rgb(211,51,23)" fg:x="231" fg:w="1"/><text x="3.1125%" y="223.50"></text></g><g><title>ucs_config_sscanf_array (1 samples, 0.01%)</title><rect x="2.8625%" y="197" width="0.0124%" height="15" fill="rgb(247,221,28)" fg:x="231" fg:w="1"/><text x="3.1125%" y="207.50"></text></g><g><title>ucs_config_sscanf_enum (1 samples, 0.01%)</title><rect x="2.8625%" y="181" width="0.0124%" height="15" fill="rgb(251,222,45)" fg:x="231" fg:w="1"/><text x="3.1125%" y="191.50"></text></g><g><title>ucs_string_find_in_list (1 samples, 0.01%)</title><rect x="2.8625%" y="165" width="0.0124%" height="15" fill="rgb(217,162,53)" fg:x="231" fg:w="1"/><text x="3.1125%" y="175.50"></text></g><g><title>strcasecmp (1 samples, 0.01%)</title><rect x="2.8625%" y="149" width="0.0124%" height="15" fill="rgb(229,93,14)" fg:x="231" fg:w="1"/><text x="3.1125%" y="159.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8748%" y="197" width="0.0124%" height="15" fill="rgb(209,67,49)" fg:x="232" fg:w="1"/><text x="3.1248%" y="207.50"></text></g><g><title>ucs_config_sscanf_table (1 samples, 0.01%)</title><rect x="2.8748%" y="181" width="0.0124%" height="15" fill="rgb(213,87,29)" fg:x="232" fg:w="1"/><text x="3.1248%" y="191.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8748%" y="165" width="0.0124%" height="15" fill="rgb(205,151,52)" fg:x="232" fg:w="1"/><text x="3.1248%" y="175.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="2.8748%" y="149" width="0.0124%" height="15" fill="rgb(253,215,39)" fg:x="232" fg:w="1"/><text x="3.1248%" y="159.50"></text></g><g><title>mpicd::init (51 samples, 0.63%)</title><rect x="2.2677%" y="357" width="0.6320%" height="15" fill="rgb(221,220,41)" fg:x="183" fg:w="51"/><text x="2.5177%" y="367.50"></text></g><g><title>ucp_worker_create (22 samples, 0.27%)</title><rect x="2.6270%" y="341" width="0.2726%" height="15" fill="rgb(218,133,21)" fg:x="212" fg:w="22"/><text x="2.8770%" y="351.50"></text></g><g><title>[libucp.so.0.0.0] (22 samples, 0.27%)</title><rect x="2.6270%" y="325" width="0.2726%" height="15" fill="rgb(221,193,43)" fg:x="212" fg:w="22"/><text x="2.8770%" y="335.50"></text></g><g><title>ucp_worker_iface_open (21 samples, 0.26%)</title><rect x="2.6394%" y="309" width="0.2602%" height="15" fill="rgb(240,128,52)" fg:x="213" fg:w="21"/><text x="2.8894%" y="319.50"></text></g><g><title>uct_md_iface_config_read (4 samples, 0.05%)</title><rect x="2.8501%" y="293" width="0.0496%" height="15" fill="rgb(253,114,12)" fg:x="230" fg:w="4"/><text x="3.1001%" y="303.50"></text></g><g><title>uct_config_read (4 samples, 0.05%)</title><rect x="2.8501%" y="277" width="0.0496%" height="15" fill="rgb(215,223,47)" fg:x="230" fg:w="4"/><text x="3.1001%" y="287.50"></text></g><g><title>ucs_config_parser_fill_opts (4 samples, 0.05%)</title><rect x="2.8501%" y="261" width="0.0496%" height="15" fill="rgb(248,225,23)" fg:x="230" fg:w="4"/><text x="3.1001%" y="271.50"></text></g><g><title>ucs_config_parser_set_default_values (3 samples, 0.04%)</title><rect x="2.8625%" y="245" width="0.0372%" height="15" fill="rgb(250,108,0)" fg:x="231" fg:w="3"/><text x="3.1125%" y="255.50"></text></g><g><title>ucs_config_parser_set_default_values (3 samples, 0.04%)</title><rect x="2.8625%" y="229" width="0.0372%" height="15" fill="rgb(228,208,7)" fg:x="231" fg:w="3"/><text x="3.1125%" y="239.50"></text></g><g><title>ucs_config_parser_set_default_values (2 samples, 0.02%)</title><rect x="2.8748%" y="213" width="0.0248%" height="15" fill="rgb(244,45,10)" fg:x="232" fg:w="2"/><text x="3.1248%" y="223.50"></text></g><g><title>ucs_config_parser_set_default_values (1 samples, 0.01%)</title><rect x="2.8872%" y="197" width="0.0124%" height="15" fill="rgb(207,125,25)" fg:x="233" fg:w="1"/><text x="3.1372%" y="207.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.8872%" y="181" width="0.0124%" height="15" fill="rgb(210,195,18)" fg:x="233" fg:w="1"/><text x="3.1372%" y="191.50"></text></g><g><title>ucs_config_sscanf_array (1 samples, 0.01%)</title><rect x="2.8872%" y="165" width="0.0124%" height="15" fill="rgb(249,80,12)" fg:x="233" fg:w="1"/><text x="3.1372%" y="175.50"></text></g><g><title>strtok_r (1 samples, 0.01%)</title><rect x="2.8872%" y="149" width="0.0124%" height="15" fill="rgb(221,65,9)" fg:x="233" fg:w="1"/><text x="3.1372%" y="159.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.9120%" y="245" width="0.0124%" height="15" fill="rgb(235,49,36)" fg:x="235" fg:w="1"/><text x="3.1620%" y="255.50"></text></g><g><title>ucs_class_call_cleanup_chain (1 samples, 0.01%)</title><rect x="2.9120%" y="229" width="0.0124%" height="15" fill="rgb(225,32,20)" fg:x="235" fg:w="1"/><text x="3.1620%" y="239.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.9120%" y="213" width="0.0124%" height="15" fill="rgb(215,141,46)" fg:x="235" fg:w="1"/><text x="3.1620%" y="223.50"></text></g><g><title>ucs_mpool_cleanup (1 samples, 0.01%)</title><rect x="2.9120%" y="197" width="0.0124%" height="15" fill="rgb(250,160,47)" fg:x="235" fg:w="1"/><text x="3.1620%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.9120%" y="181" width="0.0124%" height="15" fill="rgb(216,222,40)" fg:x="235" fg:w="1"/><text x="3.1620%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.9120%" y="165" width="0.0124%" height="15" fill="rgb(234,217,39)" fg:x="235" fg:w="1"/><text x="3.1620%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.9120%" y="149" width="0.0124%" height="15" fill="rgb(207,178,40)" fg:x="235" fg:w="1"/><text x="3.1620%" y="159.50"></text></g><g><title>[libucp.so.0.0.0] (2 samples, 0.02%)</title><rect x="2.9120%" y="277" width="0.0248%" height="15" fill="rgb(221,136,13)" fg:x="235" fg:w="2"/><text x="3.1620%" y="287.50"></text></g><g><title>ucp_worker_iface_cleanup (2 samples, 0.02%)</title><rect x="2.9120%" y="261" width="0.0248%" height="15" fill="rgb(249,199,10)" fg:x="235" fg:w="2"/><text x="3.1620%" y="271.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.9244%" y="245" width="0.0124%" height="15" fill="rgb(249,222,13)" fg:x="236" fg:w="1"/><text x="3.1744%" y="255.50"></text></g><g><title>ucs_class_call_cleanup_chain (1 samples, 0.01%)</title><rect x="2.9244%" y="229" width="0.0124%" height="15" fill="rgb(244,185,38)" fg:x="236" fg:w="1"/><text x="3.1744%" y="239.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.9244%" y="213" width="0.0124%" height="15" fill="rgb(236,202,9)" fg:x="236" fg:w="1"/><text x="3.1744%" y="223.50"></text></g><g><title>ucs_mpool_cleanup (1 samples, 0.01%)</title><rect x="2.9244%" y="197" width="0.0124%" height="15" fill="rgb(250,229,37)" fg:x="236" fg:w="1"/><text x="3.1744%" y="207.50"></text></g><g><title>&lt;mpicd::System as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="2.9120%" y="309" width="0.0372%" height="15" fill="rgb(206,174,23)" fg:x="235" fg:w="3"/><text x="3.1620%" y="319.50"></text></g><g><title>ucp_worker_destroy (3 samples, 0.04%)</title><rect x="2.9120%" y="293" width="0.0372%" height="15" fill="rgb(211,33,43)" fg:x="235" fg:w="3"/><text x="3.1620%" y="303.50"></text></g><g><title>uct_iface_set_am_handler (1 samples, 0.01%)</title><rect x="2.9368%" y="277" width="0.0124%" height="15" fill="rgb(245,58,50)" fg:x="237" fg:w="1"/><text x="3.1868%" y="287.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.9368%" y="261" width="0.0124%" height="15" fill="rgb(244,68,36)" fg:x="237" fg:w="1"/><text x="3.1868%" y="271.50"></text></g><g><title>uct_rc_iface_query (1 samples, 0.01%)</title><rect x="2.9368%" y="245" width="0.0124%" height="15" fill="rgb(232,229,15)" fg:x="237" fg:w="1"/><text x="3.1868%" y="255.50"></text></g><g><title>uct_ib_iface_query (1 samples, 0.01%)</title><rect x="2.9368%" y="229" width="0.0124%" height="15" fill="rgb(254,30,23)" fg:x="237" fg:w="1"/><text x="3.1868%" y="239.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.9368%" y="213" width="0.0124%" height="15" fill="rgb(235,160,14)" fg:x="237" fg:w="1"/><text x="3.1868%" y="223.50"></text></g><g><title>numa_distance (1 samples, 0.01%)</title><rect x="2.9368%" y="197" width="0.0124%" height="15" fill="rgb(212,155,44)" fg:x="237" fg:w="1"/><text x="3.1868%" y="207.50"></text></g><g><title>pmix_mca_base_var_finalize (1 samples, 0.01%)</title><rect x="2.9492%" y="261" width="0.0124%" height="15" fill="rgb(226,2,50)" fg:x="238" fg:w="1"/><text x="3.1992%" y="271.50"></text></g><g><title>pmix_mca_base_var_group_finalize (1 samples, 0.01%)</title><rect x="2.9492%" y="245" width="0.0124%" height="15" fill="rgb(234,177,6)" fg:x="238" fg:w="1"/><text x="3.1992%" y="255.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.01%)</title><rect x="2.9492%" y="229" width="0.0124%" height="15" fill="rgb(217,24,9)" fg:x="238" fg:w="1"/><text x="3.1992%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="2.9120%" y="341" width="0.0620%" height="15" fill="rgb(220,13,46)" fg:x="235" fg:w="5"/><text x="3.1620%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::System&gt; (5 samples, 0.06%)</title><rect x="2.9120%" y="325" width="0.0620%" height="15" fill="rgb(239,221,27)" fg:x="235" fg:w="5"/><text x="3.1620%" y="335.50"></text></g><g><title>&lt;mpicd::pmi::PMI as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="2.9492%" y="309" width="0.0248%" height="15" fill="rgb(222,198,25)" fg:x="238" fg:w="2"/><text x="3.1992%" y="319.50"></text></g><g><title>PMIx_Finalize (2 samples, 0.02%)</title><rect x="2.9492%" y="293" width="0.0248%" height="15" fill="rgb(211,99,13)" fg:x="238" fg:w="2"/><text x="3.1992%" y="303.50"></text></g><g><title>pmix_rte_finalize (2 samples, 0.02%)</title><rect x="2.9492%" y="277" width="0.0248%" height="15" fill="rgb(232,111,31)" fg:x="238" fg:w="2"/><text x="3.1992%" y="287.50"></text></g><g><title>pmix_release_registered_attrs (1 samples, 0.01%)</title><rect x="2.9616%" y="261" width="0.0124%" height="15" fill="rgb(245,82,37)" fg:x="239" fg:w="1"/><text x="3.2116%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="2.9616%" y="245" width="0.0124%" height="15" fill="rgb(227,149,46)" fg:x="239" fg:w="1"/><text x="3.2116%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2 samples, 0.02%)</title><rect x="3.0731%" y="325" width="0.0248%" height="15" fill="rgb(218,36,50)" fg:x="248" fg:w="2"/><text x="3.3231%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="3.0855%" y="309" width="0.0124%" height="15" fill="rgb(226,80,48)" fg:x="249" fg:w="1"/><text x="3.3355%" y="319.50"></text></g><g><title>__libc_malloc (43 samples, 0.53%)</title><rect x="3.2838%" y="293" width="0.5328%" height="15" fill="rgb(238,224,15)" fg:x="265" fg:w="43"/><text x="3.5338%" y="303.50"></text></g><g><title>_int_malloc (31 samples, 0.38%)</title><rect x="3.4325%" y="277" width="0.3841%" height="15" fill="rgb(241,136,10)" fg:x="277" fg:w="31"/><text x="3.6825%" y="287.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecArray as mpicd::datatype::MessageBuffer&gt;::unpack (49 samples, 0.61%)</title><rect x="3.2342%" y="309" width="0.6072%" height="15" fill="rgb(208,32,45)" fg:x="261" fg:w="49"/><text x="3.4842%" y="319.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="3.8166%" y="293" width="0.0248%" height="15" fill="rgb(207,135,9)" fg:x="308" fg:w="2"/><text x="4.0666%" y="303.50"></text></g><g><title>__libc_malloc (42 samples, 0.52%)</title><rect x="4.0273%" y="293" width="0.5204%" height="15" fill="rgb(206,86,44)" fg:x="325" fg:w="42"/><text x="4.2773%" y="303.50"></text></g><g><title>_int_malloc (29 samples, 0.36%)</title><rect x="4.1884%" y="277" width="0.3594%" height="15" fill="rgb(245,177,15)" fg:x="338" fg:w="29"/><text x="4.4384%" y="287.50"></text></g><g><title>mpicd::Handle::add_message (58 samples, 0.72%)</title><rect x="3.8414%" y="309" width="0.7187%" height="15" fill="rgb(206,64,50)" fg:x="310" fg:w="58"/><text x="4.0914%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="4.5477%" y="293" width="0.0124%" height="15" fill="rgb(234,36,40)" fg:x="367" fg:w="1"/><text x="4.7977%" y="303.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::PackedSize&gt;::packed_size (3 samples, 0.04%)</title><rect x="4.6716%" y="293" width="0.0372%" height="15" fill="rgb(213,64,8)" fg:x="377" fg:w="3"/><text x="4.9216%" y="303.50"></text></g><g><title>__GI_memset (3 samples, 0.04%)</title><rect x="5.2664%" y="277" width="0.0372%" height="15" fill="rgb(210,75,36)" fg:x="425" fg:w="3"/><text x="5.5164%" y="287.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::irecv (217 samples, 2.69%)</title><rect x="3.0979%" y="325" width="2.6890%" height="15" fill="rgb(229,88,21)" fg:x="250" fg:w="217"/><text x="3.3479%" y="335.50">&lt;m..</text></g><g><title>mpicd::message::PackRecvMessage::new (99 samples, 1.23%)</title><rect x="4.5601%" y="309" width="1.2268%" height="15" fill="rgb(252,204,47)" fg:x="368" fg:w="99"/><text x="4.8101%" y="319.50"></text></g><g><title>calloc (87 samples, 1.08%)</title><rect x="4.7088%" y="293" width="1.0781%" height="15" fill="rgb(208,77,27)" fg:x="380" fg:w="87"/><text x="4.9588%" y="303.50"></text></g><g><title>_int_malloc (39 samples, 0.48%)</title><rect x="5.3036%" y="277" width="0.4833%" height="15" fill="rgb(221,76,26)" fg:x="428" fg:w="39"/><text x="5.5536%" y="287.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::ComplexVec as mpicd::datatype::MessageBuffer&gt;::pack (1 samples, 0.01%)</title><rect x="5.7869%" y="309" width="0.0124%" height="15" fill="rgb(225,139,18)" fg:x="467" fg:w="1"/><text x="6.0369%" y="319.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::isend (2 samples, 0.02%)</title><rect x="5.7869%" y="325" width="0.0248%" height="15" fill="rgb(230,137,11)" fg:x="467" fg:w="2"/><text x="6.0369%" y="335.50"></text></g><g><title>mpicd::message::PackSendMessage::new (1 samples, 0.01%)</title><rect x="5.7993%" y="309" width="0.0124%" height="15" fill="rgb(212,28,1)" fg:x="468" fg:w="1"/><text x="6.0493%" y="319.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::State as mpicd::datatype::PackedSize&gt;::packed_size (1 samples, 0.01%)</title><rect x="5.7993%" y="293" width="0.0124%" height="15" fill="rgb(248,164,17)" fg:x="468" fg:w="1"/><text x="6.0493%" y="303.50"></text></g><g><title>__aarch64_swp8_acq (2 samples, 0.02%)</title><rect x="7.5836%" y="245" width="0.0248%" height="15" fill="rgb(222,171,42)" fg:x="612" fg:w="2"/><text x="7.8336%" y="255.50"></text></g><g><title>malloc_consolidate (22 samples, 0.27%)</title><rect x="7.4102%" y="261" width="0.2726%" height="15" fill="rgb(243,84,45)" fg:x="598" fg:w="22"/><text x="7.6602%" y="271.50"></text></g><g><title>unlink_chunk.isra.2 (6 samples, 0.07%)</title><rect x="7.6084%" y="245" width="0.0743%" height="15" fill="rgb(252,49,23)" fg:x="614" fg:w="6"/><text x="7.8584%" y="255.50"></text></g><g><title>__libc_malloc (33 samples, 0.41%)</title><rect x="7.2862%" y="293" width="0.4089%" height="15" fill="rgb(215,19,7)" fg:x="588" fg:w="33"/><text x="7.5362%" y="303.50"></text></g><g><title>_int_malloc (32 samples, 0.40%)</title><rect x="7.2986%" y="277" width="0.3965%" height="15" fill="rgb(238,81,41)" fg:x="589" fg:w="32"/><text x="7.5486%" y="287.50"></text></g><g><title>unlink_chunk.isra.2 (1 samples, 0.01%)</title><rect x="7.6828%" y="261" width="0.0124%" height="15" fill="rgb(210,199,37)" fg:x="620" fg:w="1"/><text x="7.9328%" y="271.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (35 samples, 0.43%)</title><rect x="7.2739%" y="309" width="0.4337%" height="15" fill="rgb(244,192,49)" fg:x="587" fg:w="35"/><text x="7.5239%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="7.6952%" y="293" width="0.0124%" height="15" fill="rgb(226,211,11)" fg:x="621" fg:w="1"/><text x="7.9452%" y="303.50"></text></g><g><title>__libc_malloc (14 samples, 0.17%)</title><rect x="11.9331%" y="277" width="0.1735%" height="15" fill="rgb(236,162,54)" fg:x="963" fg:w="14"/><text x="12.1831%" y="287.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::UnpackMethod&gt;::memory_regions (30 samples, 0.37%)</title><rect x="11.7596%" y="293" width="0.3717%" height="15" fill="rgb(220,229,9)" fg:x="949" fg:w="30"/><text x="12.0096%" y="303.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="12.1066%" y="277" width="0.0248%" height="15" fill="rgb(250,87,22)" fg:x="977" fg:w="2"/><text x="12.3566%" y="287.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::UnpackMethod&gt;::unpack (13 samples, 0.16%)</title><rect x="12.1314%" y="293" width="0.1611%" height="15" fill="rgb(239,43,17)" fg:x="979" fg:w="13"/><text x="12.3814%" y="303.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.01%)</title><rect x="12.5527%" y="277" width="0.0124%" height="15" fill="rgb(231,177,25)" fg:x="1013" fg:w="1"/><text x="12.8027%" y="287.50"></text></g><g><title>__libc_malloc (33 samples, 0.41%)</title><rect x="12.2924%" y="293" width="0.4089%" height="15" fill="rgb(219,179,1)" fg:x="992" fg:w="33"/><text x="12.5424%" y="303.50"></text></g><g><title>_int_malloc (11 samples, 0.14%)</title><rect x="12.5651%" y="277" width="0.1363%" height="15" fill="rgb(238,219,53)" fg:x="1014" fg:w="11"/><text x="12.8151%" y="287.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="12.7014%" y="293" width="0.0248%" height="15" fill="rgb(232,167,36)" fg:x="1025" fg:w="2"/><text x="12.9514%" y="303.50"></text></g><g><title>_int_free (16 samples, 0.20%)</title><rect x="12.7261%" y="293" width="0.1983%" height="15" fill="rgb(244,19,51)" fg:x="1027" fg:w="16"/><text x="12.9761%" y="303.50"></text></g><g><title>__libc_malloc (8 samples, 0.10%)</title><rect x="13.1475%" y="261" width="0.0991%" height="15" fill="rgb(224,6,22)" fg:x="1061" fg:w="8"/><text x="13.3975%" y="271.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.01%)</title><rect x="13.8786%" y="245" width="0.0124%" height="15" fill="rgb(224,145,5)" fg:x="1120" fg:w="1"/><text x="14.1286%" y="255.50"></text></g><g><title>__memcpy_generic (2 samples, 0.02%)</title><rect x="14.0397%" y="229" width="0.0248%" height="15" fill="rgb(234,130,49)" fg:x="1133" fg:w="2"/><text x="14.2897%" y="239.50"></text></g><g><title>_int_free (13 samples, 0.16%)</title><rect x="14.0644%" y="229" width="0.1611%" height="15" fill="rgb(254,6,2)" fg:x="1135" fg:w="13"/><text x="14.3144%" y="239.50"></text></g><g><title>__libc_realloc (120 samples, 1.49%)</title><rect x="13.2466%" y="261" width="1.4870%" height="15" fill="rgb(208,96,46)" fg:x="1069" fg:w="120"/><text x="13.4966%" y="271.50"></text></g><g><title>_int_realloc (68 samples, 0.84%)</title><rect x="13.8910%" y="245" width="0.8426%" height="15" fill="rgb(239,3,39)" fg:x="1121" fg:w="68"/><text x="14.1410%" y="255.50"></text></g><g><title>_int_malloc (41 samples, 0.51%)</title><rect x="14.2255%" y="229" width="0.5081%" height="15" fill="rgb(233,210,1)" fg:x="1148" fg:w="41"/><text x="14.4755%" y="239.50"></text></g><g><title>unlink_chunk.isra.2 (2 samples, 0.02%)</title><rect x="14.7088%" y="213" width="0.0248%" height="15" fill="rgb(244,137,37)" fg:x="1187" fg:w="2"/><text x="14.9588%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (147 samples, 1.82%)</title><rect x="12.9244%" y="293" width="1.8216%" height="15" fill="rgb(240,136,2)" fg:x="1043" fg:w="147"/><text x="13.1744%" y="303.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (133 samples, 1.65%)</title><rect x="13.0979%" y="277" width="1.6481%" height="15" fill="rgb(239,18,37)" fg:x="1057" fg:w="133"/><text x="13.3479%" y="287.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="14.7336%" y="261" width="0.0124%" height="15" fill="rgb(218,185,22)" fg:x="1189" fg:w="1"/><text x="14.9836%" y="271.50"></text></g><g><title>free (2 samples, 0.02%)</title><rect x="14.7460%" y="293" width="0.0248%" height="15" fill="rgb(225,218,4)" fg:x="1190" fg:w="2"/><text x="14.9960%" y="303.50"></text></g><g><title>rust_ucs_ptr_is_err (4 samples, 0.05%)</title><rect x="15.3036%" y="277" width="0.0496%" height="15" fill="rgb(230,182,32)" fg:x="1235" fg:w="4"/><text x="15.5536%" y="287.50"></text></g><g><title>rust_ucs_ptr_is_ptr (2 samples, 0.02%)</title><rect x="15.3532%" y="277" width="0.0248%" height="15" fill="rgb(242,56,43)" fg:x="1239" fg:w="2"/><text x="15.6032%" y="287.50"></text></g><g><title>mpicd::request::Request::status (52 samples, 0.64%)</title><rect x="14.7708%" y="293" width="0.6444%" height="15" fill="rgb(233,99,24)" fg:x="1192" fg:w="52"/><text x="15.0208%" y="303.50"></text></g><g><title>rust_ucs_ptr_status (3 samples, 0.04%)</title><rect x="15.3779%" y="277" width="0.0372%" height="15" fill="rgb(234,209,42)" fg:x="1241" fg:w="3"/><text x="15.6279%" y="287.50"></text></g><g><title>ucp_tag_recv_nbx (29 samples, 0.36%)</title><rect x="15.4151%" y="293" width="0.3594%" height="15" fill="rgb(227,7,12)" fg:x="1244" fg:w="29"/><text x="15.6651%" y="303.50"></text></g><g><title>[libucp.so.0.0.0] (14 samples, 0.17%)</title><rect x="16.4312%" y="277" width="0.1735%" height="15" fill="rgb(245,203,43)" fg:x="1326" fg:w="14"/><text x="16.6812%" y="287.50"></text></g><g><title>pthread_self@GLIBC_2.17 (3 samples, 0.04%)</title><rect x="25.3160%" y="261" width="0.0372%" height="15" fill="rgb(238,205,33)" fg:x="2043" fg:w="3"/><text x="25.5660%" y="271.50"></text></g><g><title>pthread_spin_lock (89 samples, 1.10%)</title><rect x="25.3532%" y="261" width="1.1029%" height="15" fill="rgb(231,56,7)" fg:x="2046" fg:w="89"/><text x="25.6032%" y="271.50"></text></g><g><title>__aarch64_swp4_acq (3 samples, 0.04%)</title><rect x="26.4188%" y="245" width="0.0372%" height="15" fill="rgb(244,186,29)" fg:x="2132" fg:w="3"/><text x="26.6688%" y="255.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="27.0136%" y="229" width="0.0124%" height="15" fill="rgb(234,111,31)" fg:x="2180" fg:w="1"/><text x="27.2636%" y="239.50"></text></g><g><title>ucp_dt_iov_scatter (512 samples, 6.34%)</title><rect x="26.8525%" y="245" width="6.3445%" height="15" fill="rgb(241,149,10)" fg:x="2167" fg:w="512"/><text x="27.1025%" y="255.50">ucp_dt_i..</text></g><g><title>__memcpy_thunderx2 (498 samples, 6.17%)</title><rect x="27.0260%" y="229" width="6.1710%" height="15" fill="rgb(249,206,44)" fg:x="2181" fg:w="498"/><text x="27.2760%" y="239.50">__memcpy..</text></g><g><title>ucp_eager_first_handler (550 samples, 6.82%)</title><rect x="26.4560%" y="261" width="6.8154%" height="15" fill="rgb(251,153,30)" fg:x="2135" fg:w="550"/><text x="26.7060%" y="271.50">ucp_eager..</text></g><g><title>ucp_tag_frag_list_process_queue (6 samples, 0.07%)</title><rect x="33.1970%" y="245" width="0.0743%" height="15" fill="rgb(239,152,38)" fg:x="2679" fg:w="6"/><text x="33.4470%" y="255.50"></text></g><g><title>__libc_malloc (9 samples, 0.11%)</title><rect x="33.9653%" y="245" width="0.1115%" height="15" fill="rgb(249,139,47)" fg:x="2741" fg:w="9"/><text x="34.2153%" y="255.50"></text></g><g><title>_int_free (5 samples, 0.06%)</title><rect x="34.0768%" y="245" width="0.0620%" height="15" fill="rgb(244,64,35)" fg:x="2750" fg:w="5"/><text x="34.3268%" y="255.50"></text></g><g><title>free (1 samples, 0.01%)</title><rect x="34.1388%" y="245" width="0.0124%" height="15" fill="rgb(216,46,15)" fg:x="2755" fg:w="1"/><text x="34.3888%" y="255.50"></text></g><g><title>ucp_eager_middle_handler (1,594 samples, 19.75%)</title><rect x="33.2714%" y="261" width="19.7522%" height="15" fill="rgb(250,74,19)" fg:x="2685" fg:w="1594"/><text x="33.5214%" y="271.50">ucp_eager_middle_handler</text></g><g><title>ucp_dt_iov_scatter (1,523 samples, 18.87%)</title><rect x="34.1512%" y="245" width="18.8724%" height="15" fill="rgb(249,42,33)" fg:x="2756" fg:w="1523"/><text x="34.4012%" y="255.50">ucp_dt_iov_scatter</text></g><g><title>__memcpy_thunderx2 (1,481 samples, 18.35%)</title><rect x="34.6716%" y="229" width="18.3519%" height="15" fill="rgb(242,149,17)" fg:x="2798" fg:w="1481"/><text x="34.9216%" y="239.50">__memcpy_thunderx2</text></g><g><title>uct_rc_iface_fc_handler (1 samples, 0.01%)</title><rect x="53.0235%" y="261" width="0.0124%" height="15" fill="rgb(244,29,21)" fg:x="4279" fg:w="1"/><text x="53.2735%" y="271.50"></text></g><g><title>uct_rc_ep_fc_grant (1 samples, 0.01%)</title><rect x="53.0235%" y="245" width="0.0124%" height="15" fill="rgb(220,130,37)" fg:x="4279" fg:w="1"/><text x="53.2735%" y="255.50"></text></g><g><title>uct_rc_mlx5_ep_fc_ctrl (1 samples, 0.01%)</title><rect x="53.0235%" y="229" width="0.0124%" height="15" fill="rgb(211,67,2)" fg:x="4279" fg:w="1"/><text x="53.2735%" y="239.50"></text></g><g><title>&lt;mpicd::message::PackRecvMessage as mpicd::message::Message&gt;::progress (3,675 samples, 45.54%)</title><rect x="7.7076%" y="309" width="45.5390%" height="15" fill="rgb(235,68,52)" fg:x="622" fg:w="3675"/><text x="7.9576%" y="319.50">&lt;mpicd::message::PackRecvMessage as mpicd::message::Message&gt;::progress</text></g><g><title>ucp_worker_progress (3,024 samples, 37.47%)</title><rect x="15.7745%" y="293" width="37.4721%" height="15" fill="rgb(246,142,3)" fg:x="1273" fg:w="3024"/><text x="16.0245%" y="303.50">ucp_worker_progress</text></g><g><title>[libuct_ib.so.0.0.0] (2,957 samples, 36.64%)</title><rect x="16.6047%" y="277" width="36.6419%" height="15" fill="rgb(241,25,7)" fg:x="1340" fg:w="2957"/><text x="16.8547%" y="287.50">[libuct_ib.so.0.0.0]</text></g><g><title>uct_rc_mlx5_iface_srq_post_recv (17 samples, 0.21%)</title><rect x="53.0359%" y="261" width="0.2107%" height="15" fill="rgb(242,119,39)" fg:x="4280" fg:w="17"/><text x="53.2859%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="53.2838%" y="293" width="0.0124%" height="15" fill="rgb(241,98,45)" fg:x="4300" fg:w="1"/><text x="53.5338%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="53.2962%" y="293" width="0.0124%" height="15" fill="rgb(254,28,30)" fg:x="4301" fg:w="1"/><text x="53.5462%" y="303.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="53.5440%" y="245" width="0.0124%" height="15" fill="rgb(241,142,54)" fg:x="4321" fg:w="1"/><text x="53.7940%" y="255.50"></text></g><g><title>ucp_dt_pack (1 samples, 0.01%)</title><rect x="53.5440%" y="229" width="0.0124%" height="15" fill="rgb(222,85,15)" fg:x="4321" fg:w="1"/><text x="53.7940%" y="239.50"></text></g><g><title>ucp_dt_iov_gather (1 samples, 0.01%)</title><rect x="53.5440%" y="213" width="0.0124%" height="15" fill="rgb(210,85,47)" fg:x="4321" fg:w="1"/><text x="53.7940%" y="223.50"></text></g><g><title>[libucp.so.0.0.0] (19 samples, 0.24%)</title><rect x="53.3333%" y="277" width="0.2354%" height="15" fill="rgb(224,206,25)" fg:x="4304" fg:w="19"/><text x="53.5833%" y="287.50"></text></g><g><title>uct_rc_mlx5_ep_am_bcopy (14 samples, 0.17%)</title><rect x="53.3953%" y="261" width="0.1735%" height="15" fill="rgb(243,201,19)" fg:x="4309" fg:w="14"/><text x="53.6453%" y="271.50"></text></g><g><title>pthread_spin_lock (1 samples, 0.01%)</title><rect x="53.5564%" y="245" width="0.0124%" height="15" fill="rgb(236,59,4)" fg:x="4322" fg:w="1"/><text x="53.8064%" y="255.50"></text></g><g><title>&lt;mpicd::message::PackSendMessage as mpicd::message::Message&gt;::progress (27 samples, 0.33%)</title><rect x="53.2466%" y="309" width="0.3346%" height="15" fill="rgb(254,179,45)" fg:x="4297" fg:w="27"/><text x="53.4966%" y="319.50"></text></g><g><title>ucp_tag_send_nbx (22 samples, 0.27%)</title><rect x="53.3086%" y="293" width="0.2726%" height="15" fill="rgb(226,14,10)" fg:x="4302" fg:w="22"/><text x="53.5586%" y="303.50"></text></g><g><title>ucp_request_send_start (1 samples, 0.01%)</title><rect x="53.5688%" y="277" width="0.0124%" height="15" fill="rgb(244,27,41)" fg:x="4323" fg:w="1"/><text x="53.8188%" y="287.50"></text></g><g><title>&lt;mpicd::request::Request as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="53.7546%" y="293" width="0.1239%" height="15" fill="rgb(235,35,32)" fg:x="4338" fg:w="10"/><text x="54.0046%" y="303.50"></text></g><g><title>ucp_request_free (10 samples, 0.12%)</title><rect x="53.7546%" y="277" width="0.1239%" height="15" fill="rgb(218,68,31)" fg:x="4338" fg:w="10"/><text x="54.0046%" y="287.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="53.8786%" y="293" width="0.0124%" height="15" fill="rgb(207,120,37)" fg:x="4348" fg:w="1"/><text x="54.1286%" y="303.50"></text></g><g><title>_int_free (69 samples, 0.86%)</title><rect x="53.8910%" y="293" width="0.8550%" height="15" fill="rgb(227,98,0)" fg:x="4349" fg:w="69"/><text x="54.1410%" y="303.50"></text></g><g><title>__aarch64_cas8_rel (1 samples, 0.01%)</title><rect x="54.7336%" y="277" width="0.0124%" height="15" fill="rgb(207,7,3)" fg:x="4417" fg:w="1"/><text x="54.9836%" y="287.50"></text></g><g><title>__aarch64_cas8_rel (3 samples, 0.04%)</title><rect x="57.5589%" y="261" width="0.0372%" height="15" fill="rgb(206,98,19)" fg:x="4645" fg:w="3"/><text x="57.8089%" y="271.50"></text></g><g><title>_int_free (223 samples, 2.76%)</title><rect x="54.8823%" y="277" width="2.7633%" height="15" fill="rgb(217,5,26)" fg:x="4429" fg:w="223"/><text x="55.1323%" y="287.50">_i..</text></g><g><title>unlink_chunk.isra.2 (4 samples, 0.05%)</title><rect x="57.5960%" y="261" width="0.0496%" height="15" fill="rgb(235,190,38)" fg:x="4648" fg:w="4"/><text x="57.8460%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::message::PackRecvMessage&gt; (252 samples, 3.12%)</title><rect x="54.7460%" y="293" width="3.1227%" height="15" fill="rgb(247,86,24)" fg:x="4418" fg:w="252"/><text x="54.9960%" y="303.50">cor..</text></g><g><title>free (18 samples, 0.22%)</title><rect x="57.6456%" y="277" width="0.2230%" height="15" fill="rgb(205,101,16)" fg:x="4652" fg:w="18"/><text x="57.8956%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::message::PackSendMessage&gt; (1 samples, 0.01%)</title><rect x="57.8686%" y="293" width="0.0124%" height="15" fill="rgb(246,168,33)" fg:x="4670" fg:w="1"/><text x="58.1186%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="57.8686%" y="277" width="0.0124%" height="15" fill="rgb(231,114,1)" fg:x="4670" fg:w="1"/><text x="58.1186%" y="287.50"></text></g><g><title>mpicd::Handle::remove_message (354 samples, 4.39%)</title><rect x="53.5812%" y="309" width="4.3866%" height="15" fill="rgb(207,184,53)" fg:x="4324" fg:w="354"/><text x="53.8312%" y="319.50">mpicd..</text></g><g><title>free (7 samples, 0.09%)</title><rect x="57.8810%" y="293" width="0.0867%" height="15" fill="rgb(224,95,51)" fg:x="4671" fg:w="7"/><text x="58.1310%" y="303.50"></text></g><g><title>[libucp.so.0.0.0] (26 samples, 0.32%)</title><rect x="58.7361%" y="293" width="0.3222%" height="15" fill="rgb(212,188,45)" fg:x="4740" fg:w="26"/><text x="58.9861%" y="303.50"></text></g><g><title>pthread_self@GLIBC_2.17 (4 samples, 0.05%)</title><rect x="67.7571%" y="277" width="0.0496%" height="15" fill="rgb(223,154,38)" fg:x="5468" fg:w="4"/><text x="68.0071%" y="287.50"></text></g><g><title>pthread_spin_lock (97 samples, 1.20%)</title><rect x="67.8067%" y="277" width="1.2020%" height="15" fill="rgb(251,22,52)" fg:x="5472" fg:w="97"/><text x="68.0567%" y="287.50"></text></g><g><title>__aarch64_swp4_acq (7 samples, 0.09%)</title><rect x="68.9219%" y="261" width="0.0867%" height="15" fill="rgb(229,209,22)" fg:x="5562" fg:w="7"/><text x="69.1719%" y="271.50"></text></g><g><title>pthread_spin_unlock (2 samples, 0.02%)</title><rect x="69.0087%" y="277" width="0.0248%" height="15" fill="rgb(234,138,34)" fg:x="5569" fg:w="2"/><text x="69.2587%" y="287.50"></text></g><g><title>ucp_dt_iov_scatter (666 samples, 8.25%)</title><rect x="69.5291%" y="261" width="8.2528%" height="15" fill="rgb(212,95,11)" fg:x="5611" fg:w="666"/><text x="69.7791%" y="271.50">ucp_dt_iov_..</text></g><g><title>__memcpy_thunderx2 (652 samples, 8.08%)</title><rect x="69.7026%" y="245" width="8.0793%" height="15" fill="rgb(240,179,47)" fg:x="5625" fg:w="652"/><text x="69.9526%" y="255.50">__memcpy_th..</text></g><g><title>ucp_eager_first_handler (714 samples, 8.85%)</title><rect x="69.0335%" y="277" width="8.8476%" height="15" fill="rgb(240,163,11)" fg:x="5571" fg:w="714"/><text x="69.2835%" y="287.50">ucp_eager_fi..</text></g><g><title>ucp_tag_frag_list_process_queue (8 samples, 0.10%)</title><rect x="77.7819%" y="261" width="0.0991%" height="15" fill="rgb(236,37,12)" fg:x="6277" fg:w="8"/><text x="78.0319%" y="271.50"></text></g><g><title>__GI_memset (2 samples, 0.02%)</title><rect x="78.5502%" y="261" width="0.0248%" height="15" fill="rgb(232,164,16)" fg:x="6339" fg:w="2"/><text x="78.8002%" y="271.50"></text></g><g><title>__libc_malloc (6 samples, 0.07%)</title><rect x="78.5750%" y="261" width="0.0743%" height="15" fill="rgb(244,205,15)" fg:x="6341" fg:w="6"/><text x="78.8250%" y="271.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.01%)</title><rect x="78.6369%" y="245" width="0.0124%" height="15" fill="rgb(223,117,47)" fg:x="6346" fg:w="1"/><text x="78.8869%" y="255.50"></text></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="78.6493%" y="261" width="0.0496%" height="15" fill="rgb(244,107,35)" fg:x="6347" fg:w="4"/><text x="78.8993%" y="271.50"></text></g><g><title>free (1 samples, 0.01%)</title><rect x="78.6989%" y="261" width="0.0124%" height="15" fill="rgb(205,140,8)" fg:x="6351" fg:w="1"/><text x="78.9489%" y="271.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="79.1326%" y="245" width="0.0124%" height="15" fill="rgb(228,84,46)" fg:x="6386" fg:w="1"/><text x="79.3826%" y="255.50"></text></g><g><title>ucp_eager_middle_handler (1,632 samples, 20.22%)</title><rect x="77.8810%" y="277" width="20.2230%" height="15" fill="rgb(254,188,9)" fg:x="6285" fg:w="1632"/><text x="78.1310%" y="287.50">ucp_eager_middle_handler</text></g><g><title>ucp_dt_iov_scatter (1,565 samples, 19.39%)</title><rect x="78.7113%" y="261" width="19.3928%" height="15" fill="rgb(206,112,54)" fg:x="6352" fg:w="1565"/><text x="78.9613%" y="271.50">ucp_dt_iov_scatter</text></g><g><title>__memcpy_thunderx2 (1,530 samples, 18.96%)</title><rect x="79.1450%" y="245" width="18.9591%" height="15" fill="rgb(216,84,49)" fg:x="6387" fg:w="1530"/><text x="79.3950%" y="255.50">__memcpy_thunderx2</text></g><g><title>uct_rc_iface_fc_handler (7 samples, 0.09%)</title><rect x="98.1041%" y="277" width="0.0867%" height="15" fill="rgb(214,194,35)" fg:x="7917" fg:w="7"/><text x="98.3541%" y="287.50"></text></g><g><title>uct_rc_ep_fc_grant (2 samples, 0.02%)</title><rect x="98.1660%" y="261" width="0.0248%" height="15" fill="rgb(249,28,3)" fg:x="7922" fg:w="2"/><text x="98.4160%" y="271.50"></text></g><g><title>uct_rc_mlx5_ep_fc_ctrl (2 samples, 0.02%)</title><rect x="98.1660%" y="245" width="0.0248%" height="15" fill="rgb(222,56,52)" fg:x="7922" fg:w="2"/><text x="98.4160%" y="255.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::waitall (7,480 samples, 92.69%)</title><rect x="5.8116%" y="325" width="92.6890%" height="15" fill="rgb(245,217,50)" fg:x="469" fg:w="7480"/><text x="6.0616%" y="335.50">&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::waitall</text></g><g><title>ucp_worker_progress (3,271 samples, 40.53%)</title><rect x="57.9678%" y="309" width="40.5328%" height="15" fill="rgb(213,201,24)" fg:x="4678" fg:w="3271"/><text x="58.2178%" y="319.50">ucp_worker_progress</text></g><g><title>[libuct_ib.so.0.0.0] (3,183 samples, 39.44%)</title><rect x="59.0582%" y="293" width="39.4424%" height="15" fill="rgb(248,116,28)" fg:x="4766" fg:w="3183"/><text x="59.3082%" y="303.50">[libuct_ib.so.0.0.0]</text></g><g><title>uct_rc_mlx5_iface_srq_post_recv (25 samples, 0.31%)</title><rect x="98.1908%" y="277" width="0.3098%" height="15" fill="rgb(219,72,43)" fg:x="7924" fg:w="25"/><text x="98.4408%" y="287.50"></text></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="98.5006%" y="325" width="0.0496%" height="15" fill="rgb(209,138,14)" fg:x="7949" fg:w="4"/><text x="98.7506%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="98.5750%" y="293" width="0.0124%" height="15" fill="rgb(222,18,33)" fg:x="7955" fg:w="1"/><text x="98.8250%" y="303.50"></text></g><g><title>__memcpy_generic (1 samples, 0.01%)</title><rect x="98.7113%" y="261" width="0.0124%" height="15" fill="rgb(213,199,7)" fg:x="7966" fg:w="1"/><text x="98.9613%" y="271.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="98.7237%" y="261" width="0.0248%" height="15" fill="rgb(250,110,10)" fg:x="7967" fg:w="2"/><text x="98.9737%" y="271.50"></text></g><g><title>&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::body (7,758 samples, 96.13%)</title><rect x="2.9740%" y="341" width="96.1338%" height="15" fill="rgb(248,123,6)" fg:x="240" fg:w="7758"/><text x="3.2240%" y="351.50">&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::body</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (45 samples, 0.56%)</title><rect x="98.5502%" y="325" width="0.5576%" height="15" fill="rgb(206,91,31)" fg:x="7953" fg:w="45"/><text x="98.8002%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.53%)</title><rect x="98.5750%" y="309" width="0.5328%" height="15" fill="rgb(211,154,13)" fg:x="7955" fg:w="43"/><text x="98.8250%" y="319.50"></text></g><g><title>__libc_realloc (42 samples, 0.52%)</title><rect x="98.5874%" y="293" width="0.5204%" height="15" fill="rgb(225,148,7)" fg:x="7956" fg:w="42"/><text x="98.8374%" y="303.50"></text></g><g><title>_int_realloc (37 samples, 0.46%)</title><rect x="98.6493%" y="277" width="0.4585%" height="15" fill="rgb(220,160,43)" fg:x="7961" fg:w="37"/><text x="98.8993%" y="287.50"></text></g><g><title>_int_malloc (29 samples, 0.36%)</title><rect x="98.7485%" y="261" width="0.3594%" height="15" fill="rgb(213,52,39)" fg:x="7969" fg:w="29"/><text x="98.9985%" y="271.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7 samples, 0.09%)</title><rect x="99.1078%" y="341" width="0.0867%" height="15" fill="rgb(243,137,7)" fg:x="7998" fg:w="7"/><text x="99.3578%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (5 samples, 0.06%)</title><rect x="99.1326%" y="325" width="0.0620%" height="15" fill="rgb(230,79,13)" fg:x="8000" fg:w="5"/><text x="99.3826%" y="335.50"></text></g><g><title>__kernel_clock_gettime (4 samples, 0.05%)</title><rect x="99.1450%" y="309" width="0.0496%" height="15" fill="rgb(247,105,23)" fg:x="8001" fg:w="4"/><text x="99.3950%" y="319.50"></text></g><g><title>__libc_start_main (7,823 samples, 96.94%)</title><rect x="2.2677%" y="453" width="96.9393%" height="15" fill="rgb(223,179,41)" fg:x="183" fg:w="7823"/><text x="2.5177%" y="463.50">__libc_start_main</text></g><g><title>main (7,823 samples, 96.94%)</title><rect x="2.2677%" y="437" width="96.9393%" height="15" fill="rgb(218,9,34)" fg:x="183" fg:w="7823"/><text x="2.5177%" y="447.50">main</text></g><g><title>std::rt::lang_start_internal (7,823 samples, 96.94%)</title><rect x="2.2677%" y="421" width="96.9393%" height="15" fill="rgb(222,106,8)" fg:x="183" fg:w="7823"/><text x="2.5177%" y="431.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (7,823 samples, 96.94%)</title><rect x="2.2677%" y="405" width="96.9393%" height="15" fill="rgb(211,220,0)" fg:x="183" fg:w="7823"/><text x="2.5177%" y="415.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,823 samples, 96.94%)</title><rect x="2.2677%" y="389" width="96.9393%" height="15" fill="rgb(229,52,16)" fg:x="183" fg:w="7823"/><text x="2.5177%" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mpicd_bw::main (7,823 samples, 96.94%)</title><rect x="2.2677%" y="373" width="96.9393%" height="15" fill="rgb(212,155,18)" fg:x="183" fg:w="7823"/><text x="2.5177%" y="383.50">mpicd_bw::main</text></g><g><title>mpicd_rust_benchmarks::bw::bw (7,772 samples, 96.31%)</title><rect x="2.8996%" y="357" width="96.3073%" height="15" fill="rgb(242,21,14)" fg:x="234" fg:w="7772"/><text x="3.1496%" y="367.50">mpicd_rust_benchmarks::bw::bw</text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="99.1945%" y="341" width="0.0124%" height="15" fill="rgb(222,19,48)" fg:x="8005" fg:w="1"/><text x="99.4445%" y="351.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.01%)</title><rect x="99.2317%" y="405" width="0.0124%" height="15" fill="rgb(232,45,27)" fg:x="8008" fg:w="1"/><text x="99.4817%" y="415.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="99.2441%" y="389" width="0.0124%" height="15" fill="rgb(249,103,42)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="399.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="99.2441%" y="373" width="0.0124%" height="15" fill="rgb(246,81,33)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="383.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="99.2441%" y="357" width="0.0124%" height="15" fill="rgb(252,33,42)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="367.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="99.2441%" y="341" width="0.0124%" height="15" fill="rgb(209,212,41)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="351.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.01%)</title><rect x="99.2441%" y="325" width="0.0124%" height="15" fill="rgb(207,154,6)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="335.50"></text></g><g><title>search_cache (1 samples, 0.01%)</title><rect x="99.2441%" y="309" width="0.0124%" height="15" fill="rgb(223,64,47)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="319.50"></text></g><g><title>_dl_cache_libcmp (1 samples, 0.01%)</title><rect x="99.2441%" y="293" width="0.0124%" height="15" fill="rgb(211,161,38)" fg:x="8009" fg:w="1"/><text x="99.4941%" y="303.50"></text></g><g><title>_dl_start_final (3 samples, 0.04%)</title><rect x="99.2317%" y="437" width="0.0372%" height="15" fill="rgb(219,138,40)" fg:x="8008" fg:w="3"/><text x="99.4817%" y="447.50"></text></g><g><title>_dl_sysdep_start (3 samples, 0.04%)</title><rect x="99.2317%" y="421" width="0.0372%" height="15" fill="rgb(241,228,46)" fg:x="8008" fg:w="3"/><text x="99.4817%" y="431.50"></text></g><g><title>dl_main (2 samples, 0.02%)</title><rect x="99.2441%" y="405" width="0.0248%" height="15" fill="rgb(223,209,38)" fg:x="8009" fg:w="2"/><text x="99.4941%" y="415.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="99.2565%" y="389" width="0.0124%" height="15" fill="rgb(236,164,45)" fg:x="8010" fg:w="1"/><text x="99.5065%" y="399.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="99.2565%" y="373" width="0.0124%" height="15" fill="rgb(231,15,5)" fg:x="8010" fg:w="1"/><text x="99.5065%" y="383.50"></text></g><g><title>elf_machine_rela (1 samples, 0.01%)</title><rect x="99.2565%" y="357" width="0.0124%" height="15" fill="rgb(252,35,15)" fg:x="8010" fg:w="1"/><text x="99.5065%" y="367.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="99.2565%" y="341" width="0.0124%" height="15" fill="rgb(248,181,18)" fg:x="8010" fg:w="1"/><text x="99.5065%" y="351.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="99.2565%" y="325" width="0.0124%" height="15" fill="rgb(233,39,42)" fg:x="8010" fg:w="1"/><text x="99.5065%" y="335.50"></text></g><g><title>_start (7,831 samples, 97.04%)</title><rect x="2.2429%" y="485" width="97.0384%" height="15" fill="rgb(238,110,33)" fg:x="181" fg:w="7831"/><text x="2.4929%" y="495.50">_start</text></g><g><title>_start (7,829 samples, 97.01%)</title><rect x="2.2677%" y="469" width="97.0136%" height="15" fill="rgb(233,195,10)" fg:x="183" fg:w="7829"/><text x="2.5177%" y="479.50">_start</text></g><g><title>_dl_start (6 samples, 0.07%)</title><rect x="99.2069%" y="453" width="0.0743%" height="15" fill="rgb(254,105,3)" fg:x="8006" fg:w="6"/><text x="99.4569%" y="463.50"></text></g><g><title>elf_machine_load_address (1 samples, 0.01%)</title><rect x="99.2689%" y="437" width="0.0124%" height="15" fill="rgb(221,225,9)" fg:x="8011" fg:w="1"/><text x="99.5189%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2689%" y="421" width="0.0124%" height="15" fill="rgb(224,227,45)" fg:x="8011" fg:w="1"/><text x="99.5189%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2689%" y="405" width="0.0124%" height="15" fill="rgb(229,198,43)" fg:x="8011" fg:w="1"/><text x="99.5189%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.2689%" y="389" width="0.0124%" height="15" fill="rgb(206,209,35)" fg:x="8011" fg:w="1"/><text x="99.5189%" y="399.50"></text></g><g><title>calloc@plt (1 samples, 0.01%)</title><rect x="99.2813%" y="485" width="0.0124%" height="15" fill="rgb(245,195,53)" fg:x="8012" fg:w="1"/><text x="99.5313%" y="495.50"></text></g><g><title>create_thread (4 samples, 0.05%)</title><rect x="99.2937%" y="485" width="0.0496%" height="15" fill="rgb(240,92,26)" fg:x="8013" fg:w="4"/><text x="99.5437%" y="495.50"></text></g><g><title>clone (4 samples, 0.05%)</title><rect x="99.2937%" y="469" width="0.0496%" height="15" fill="rgb(207,40,23)" fg:x="8013" fg:w="4"/><text x="99.5437%" y="479.50"></text></g><g><title>free@plt (9 samples, 0.11%)</title><rect x="99.3432%" y="485" width="0.1115%" height="15" fill="rgb(223,111,35)" fg:x="8017" fg:w="9"/><text x="99.5932%" y="495.50"></text></g><g><title>malloc@plt (1 samples, 0.01%)</title><rect x="99.4548%" y="485" width="0.0124%" height="15" fill="rgb(229,147,28)" fg:x="8026" fg:w="1"/><text x="99.7048%" y="495.50"></text></g><g><title>pmix_hash_store (1 samples, 0.01%)</title><rect x="99.4672%" y="485" width="0.0124%" height="15" fill="rgb(211,29,28)" fg:x="8027" fg:w="1"/><text x="99.7172%" y="495.50"></text></g><g><title>pmix_dstor_new_tma@plt (1 samples, 0.01%)</title><rect x="99.4672%" y="469" width="0.0124%" height="15" fill="rgb(228,72,33)" fg:x="8027" fg:w="1"/><text x="99.7172%" y="479.50"></text></g><g><title>realloc@plt (5 samples, 0.06%)</title><rect x="99.4796%" y="485" width="0.0620%" height="15" fill="rgb(205,214,31)" fg:x="8028" fg:w="5"/><text x="99.7296%" y="495.50"></text></g><g><title>__ctype_init (1 samples, 0.01%)</title><rect x="99.5787%" y="453" width="0.0124%" height="15" fill="rgb(224,111,15)" fg:x="8036" fg:w="1"/><text x="99.8287%" y="463.50"></text></g><g><title>thread_start (5 samples, 0.06%)</title><rect x="99.5415%" y="485" width="0.0620%" height="15" fill="rgb(253,21,26)" fg:x="8033" fg:w="5"/><text x="99.7915%" y="495.50"></text></g><g><title>start_thread (5 samples, 0.06%)</title><rect x="99.5415%" y="469" width="0.0620%" height="15" fill="rgb(245,139,43)" fg:x="8033" fg:w="5"/><text x="99.7915%" y="479.50"></text></g><g><title>progress_engine (1 samples, 0.01%)</title><rect x="99.5911%" y="453" width="0.0124%" height="15" fill="rgb(252,170,7)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="463.50"></text></g><g><title>event_base_loop (1 samples, 0.01%)</title><rect x="99.5911%" y="437" width="0.0124%" height="15" fill="rgb(231,118,14)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="447.50"></text></g><g><title>timeout_next (1 samples, 0.01%)</title><rect x="99.5911%" y="421" width="0.0124%" height="15" fill="rgb(238,83,0)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="431.50"></text></g><g><title>gettime (1 samples, 0.01%)</title><rect x="99.5911%" y="405" width="0.0124%" height="15" fill="rgb(221,39,39)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="415.50"></text></g><g><title>evutil_gettime_monotonic_ (1 samples, 0.01%)</title><rect x="99.5911%" y="389" width="0.0124%" height="15" fill="rgb(222,119,46)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="399.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (1 samples, 0.01%)</title><rect x="99.5911%" y="373" width="0.0124%" height="15" fill="rgb(222,165,49)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="383.50"></text></g><g><title>__kernel_clock_gettime (1 samples, 0.01%)</title><rect x="99.5911%" y="357" width="0.0124%" height="15" fill="rgb(219,113,52)" fg:x="8037" fg:w="1"/><text x="99.8411%" y="367.50"></text></g><g><title>ucp_dt_iov_scatter (2 samples, 0.02%)</title><rect x="99.6035%" y="485" width="0.0248%" height="15" fill="rgb(214,7,15)" fg:x="8038" fg:w="2"/><text x="99.8535%" y="495.50"></text></g><g><title>memcpy@plt (2 samples, 0.02%)</title><rect x="99.6035%" y="469" width="0.0248%" height="15" fill="rgb(235,32,4)" fg:x="8038" fg:w="2"/><text x="99.8535%" y="479.50"></text></g><g><title>ucp_dt_pack (1 samples, 0.01%)</title><rect x="99.6283%" y="485" width="0.0124%" height="15" fill="rgb(238,90,54)" fg:x="8040" fg:w="1"/><text x="99.8783%" y="495.50"></text></g><g><title>ucp_dt_iov_gather@plt (1 samples, 0.01%)</title><rect x="99.6283%" y="469" width="0.0124%" height="15" fill="rgb(213,208,19)" fg:x="8040" fg:w="1"/><text x="99.8783%" y="479.50"></text></g><g><title>ucp_dt_iov_scatter@plt (3 samples, 0.04%)</title><rect x="99.6406%" y="469" width="0.0372%" height="15" fill="rgb(233,156,4)" fg:x="8041" fg:w="3"/><text x="99.8906%" y="479.50"></text></g><g><title>ucp_eager_first_handler (4 samples, 0.05%)</title><rect x="99.6406%" y="485" width="0.0496%" height="15" fill="rgb(207,194,5)" fg:x="8041" fg:w="4"/><text x="99.8906%" y="495.50"></text></g><g><title>ucp_tag_frag_list_process_queue@plt (1 samples, 0.01%)</title><rect x="99.6778%" y="469" width="0.0124%" height="15" fill="rgb(206,111,30)" fg:x="8044" fg:w="1"/><text x="99.9278%" y="479.50"></text></g><g><title>free@plt (3 samples, 0.04%)</title><rect x="99.6902%" y="469" width="0.0372%" height="15" fill="rgb(243,70,54)" fg:x="8045" fg:w="3"/><text x="99.9402%" y="479.50"></text></g><g><title>memset@plt (2 samples, 0.02%)</title><rect x="99.7274%" y="469" width="0.0248%" height="15" fill="rgb(242,28,8)" fg:x="8048" fg:w="2"/><text x="99.9774%" y="479.50"></text></g><g><title>ucp_eager_middle_handler (10 samples, 0.12%)</title><rect x="99.6902%" y="485" width="0.1239%" height="15" fill="rgb(219,106,18)" fg:x="8045" fg:w="10"/><text x="99.9402%" y="495.50"></text></g><g><title>ucp_dt_iov_scatter@plt (5 samples, 0.06%)</title><rect x="99.7522%" y="469" width="0.0620%" height="15" fill="rgb(244,222,10)" fg:x="8050" fg:w="5"/><text x="100.0022%" y="479.50"></text></g><g><title>ucp_request_free@plt (2 samples, 0.02%)</title><rect x="99.8141%" y="485" width="0.0248%" height="15" fill="rgb(236,179,52)" fg:x="8055" fg:w="2"/><text x="100.0641%" y="495.50"></text></g><g><title>ucp_tag_recv_nbx@plt (4 samples, 0.05%)</title><rect x="99.8389%" y="485" width="0.0496%" height="15" fill="rgb(213,23,39)" fg:x="8057" fg:w="4"/><text x="100.0889%" y="495.50"></text></g><g><title>ucp_tag_send_nbx (3 samples, 0.04%)</title><rect x="99.8885%" y="485" width="0.0372%" height="15" fill="rgb(238,48,10)" fg:x="8061" fg:w="3"/><text x="100.1385%" y="495.50"></text></g><g><title>ucp_request_send_start@plt (3 samples, 0.04%)</title><rect x="99.8885%" y="469" width="0.0372%" height="15" fill="rgb(251,196,23)" fg:x="8061" fg:w="3"/><text x="100.1385%" y="479.50"></text></g><g><title>ucp_worker_iface_open (1 samples, 0.01%)</title><rect x="99.9257%" y="485" width="0.0124%" height="15" fill="rgb(250,152,24)" fg:x="8064" fg:w="1"/><text x="100.1757%" y="495.50"></text></g><g><title>ucs_calloc@plt (1 samples, 0.01%)</title><rect x="99.9257%" y="469" width="0.0124%" height="15" fill="rgb(209,150,17)" fg:x="8064" fg:w="1"/><text x="100.1757%" y="479.50"></text></g><g><title>ucp_worker_progress@plt (4 samples, 0.05%)</title><rect x="99.9380%" y="485" width="0.0496%" height="15" fill="rgb(234,202,34)" fg:x="8065" fg:w="4"/><text x="100.1880%" y="495.50"></text></g><g><title>all (8,070 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(253,148,53)" fg:x="0" fg:w="8070"/><text x="0.2500%" y="527.50"></text></g><g><title>mpicd_bw (7,977 samples, 98.85%)</title><rect x="1.1524%" y="501" width="98.8476%" height="15" fill="rgb(218,129,16)" fg:x="93" fg:w="7977"/><text x="1.4024%" y="511.50">mpicd_bw</text></g><g><title>uct_iface_config_table (1 samples, 0.01%)</title><rect x="99.9876%" y="485" width="0.0124%" height="15" fill="rgb(216,85,19)" fg:x="8069" fg:w="1"/><text x="100.2376%" y="495.50"></text></g><g><title>ucs_string_find_in_list (1 samples, 0.01%)</title><rect x="99.9876%" y="469" width="0.0124%" height="15" fill="rgb(235,228,7)" fg:x="8069" fg:w="1"/><text x="100.2376%" y="479.50"></text></g><g><title>strcasecmp@plt (1 samples, 0.01%)</title><rect x="99.9876%" y="453" width="0.0124%" height="15" fill="rgb(245,175,0)" fg:x="8069" fg:w="1"/><text x="100.2376%" y="463.50"></text></g></svg></svg>