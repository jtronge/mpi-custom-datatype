<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="152515"><g><title>[libucs.so.0.0.0] (26 samples, 0.02%)</title><rect x="0.0295%" y="549" width="0.0170%" height="15" fill="rgb(227,0,7)" fg:x="45" fg:w="26"/><text x="0.2795%" y="559.50"></text></g><g><title>epoll_pwait (17 samples, 0.01%)</title><rect x="0.0466%" y="549" width="0.0111%" height="15" fill="rgb(217,0,24)" fg:x="71" fg:w="17"/><text x="0.2966%" y="559.50"></text></g><g><title>ucs_event_set_wait (59 samples, 0.04%)</title><rect x="0.0203%" y="565" width="0.0387%" height="15" fill="rgb(221,193,54)" fg:x="31" fg:w="59"/><text x="0.2703%" y="575.50"></text></g><g><title>[libucs.so.0.0.0] (96 samples, 0.06%)</title><rect x="0.0039%" y="581" width="0.0629%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="96"/><text x="0.2539%" y="591.50"></text></g><g><title>thread_start (105 samples, 0.07%)</title><rect x="0.0033%" y="613" width="0.0688%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="105"/><text x="0.2533%" y="623.50"></text></g><g><title>start_thread (105 samples, 0.07%)</title><rect x="0.0033%" y="597" width="0.0688%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="105"/><text x="0.2533%" y="607.50"></text></g><g><title>async (111 samples, 0.07%)</title><rect x="0.0000%" y="629" width="0.0728%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="111"/><text x="0.2500%" y="639.50"></text></g><g><title>execute_ioctl (83 samples, 0.05%)</title><rect x="0.0754%" y="597" width="0.0544%" height="15" fill="rgb(228,23,34)" fg:x="115" fg:w="83"/><text x="0.3254%" y="607.50"></text></g><g><title>ioctl@plt (83 samples, 0.05%)</title><rect x="0.0754%" y="581" width="0.0544%" height="15" fill="rgb(218,30,26)" fg:x="115" fg:w="83"/><text x="0.3254%" y="591.50"></text></g><g><title>free@plt (65 samples, 0.04%)</title><rect x="0.1331%" y="597" width="0.0426%" height="15" fill="rgb(220,122,19)" fg:x="203" fg:w="65"/><text x="0.3831%" y="607.50"></text></g><g><title>madvise@plt (151 samples, 0.10%)</title><rect x="0.1757%" y="597" width="0.0990%" height="15" fill="rgb(250,228,42)" fg:x="268" fg:w="151"/><text x="0.4257%" y="607.50"></text></g><g><title>malloc@plt (240 samples, 0.16%)</title><rect x="0.2747%" y="597" width="0.1574%" height="15" fill="rgb(240,193,28)" fg:x="419" fg:w="240"/><text x="0.5247%" y="607.50"></text></g><g><title>pthread_mutex_lock@plt (275 samples, 0.18%)</title><rect x="0.4321%" y="597" width="0.1803%" height="15" fill="rgb(216,20,37)" fg:x="659" fg:w="275"/><text x="0.6821%" y="607.50"></text></g><g><title>pthread_mutex_unlock@plt (115 samples, 0.08%)</title><rect x="0.6124%" y="597" width="0.0754%" height="15" fill="rgb(206,188,39)" fg:x="934" fg:w="115"/><text x="0.8624%" y="607.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (954 samples, 0.63%)</title><rect x="0.0754%" y="613" width="0.6255%" height="15" fill="rgb(217,207,13)" fg:x="115" fg:w="954"/><text x="0.3254%" y="623.50"></text></g><g><title>ucm_madvise@plt (20 samples, 0.01%)</title><rect x="0.6878%" y="597" width="0.0131%" height="15" fill="rgb(231,73,38)" fg:x="1049" fg:w="20"/><text x="0.9378%" y="607.50"></text></g><g><title>ucp_mem_rereg_mds (60 samples, 0.04%)</title><rect x="0.7107%" y="597" width="0.0393%" height="15" fill="rgb(225,20,46)" fg:x="1084" fg:w="60"/><text x="0.9607%" y="607.50"></text></g><g><title>uct_md_mem_reg@plt (60 samples, 0.04%)</title><rect x="0.7107%" y="581" width="0.0393%" height="15" fill="rgb(210,31,41)" fg:x="1084" fg:w="60"/><text x="0.9607%" y="591.50"></text></g><g><title>ucp_request_memory_reg@plt (129 samples, 0.08%)</title><rect x="0.7514%" y="597" width="0.0846%" height="15" fill="rgb(221,200,47)" fg:x="1146" fg:w="129"/><text x="1.0014%" y="607.50"></text></g><g><title>[libucp.so.0.0.0] (281 samples, 0.18%)</title><rect x="0.7088%" y="613" width="0.1842%" height="15" fill="rgb(226,26,5)" fg:x="1081" fg:w="281"/><text x="0.9588%" y="623.50"></text></g><g><title>uct_rc_mlx5_ep_get_zcopy (78 samples, 0.05%)</title><rect x="0.8419%" y="597" width="0.0511%" height="15" fill="rgb(249,33,26)" fg:x="1284" fg:w="78"/><text x="1.0919%" y="607.50"></text></g><g><title>pthread_spin_unlock@plt (66 samples, 0.04%)</title><rect x="0.8498%" y="581" width="0.0433%" height="15" fill="rgb(235,183,28)" fg:x="1296" fg:w="66"/><text x="1.0998%" y="591.50"></text></g><g><title>free@plt (99 samples, 0.06%)</title><rect x="0.8937%" y="597" width="0.0649%" height="15" fill="rgb(221,5,38)" fg:x="1363" fg:w="99"/><text x="1.1437%" y="607.50"></text></g><g><title>pthread_spin_lock@plt (63 samples, 0.04%)</title><rect x="0.9586%" y="597" width="0.0413%" height="15" fill="rgb(247,18,42)" fg:x="1462" fg:w="63"/><text x="1.2086%" y="607.50"></text></g><g><title>pthread_spin_unlock@plt (24 samples, 0.02%)</title><rect x="0.9999%" y="597" width="0.0157%" height="15" fill="rgb(241,131,45)" fg:x="1525" fg:w="24"/><text x="1.2499%" y="607.50"></text></g><g><title>ucs_free@plt (21 samples, 0.01%)</title><rect x="1.0156%" y="597" width="0.0138%" height="15" fill="rgb(249,31,29)" fg:x="1549" fg:w="21"/><text x="1.2656%" y="607.50"></text></g><g><title>ucs_mem_region_destroy_internal@plt (53 samples, 0.03%)</title><rect x="1.0294%" y="597" width="0.0348%" height="15" fill="rgb(225,111,53)" fg:x="1570" fg:w="53"/><text x="1.2794%" y="607.50"></text></g><g><title>ucs_rcache_create_region (62 samples, 0.04%)</title><rect x="1.0805%" y="597" width="0.0407%" height="15" fill="rgb(238,160,17)" fg:x="1648" fg:w="62"/><text x="1.3305%" y="607.50"></text></g><g><title>[libuct_ib.so.0.0.0] (62 samples, 0.04%)</title><rect x="1.0805%" y="581" width="0.0407%" height="15" fill="rgb(214,148,48)" fg:x="1648" fg:w="62"/><text x="1.3305%" y="591.50"></text></g><g><title>uct_ib_reg_key_impl@plt (62 samples, 0.04%)</title><rect x="1.0805%" y="565" width="0.0407%" height="15" fill="rgb(232,36,49)" fg:x="1648" fg:w="62"/><text x="1.3305%" y="575.50"></text></g><g><title>[libucs.so.0.0.0] (654 samples, 0.43%)</title><rect x="0.8930%" y="613" width="0.4288%" height="15" fill="rgb(209,103,24)" fg:x="1362" fg:w="654"/><text x="1.1430%" y="623.50"></text></g><g><title>uct_ib_dereg_mr (306 samples, 0.20%)</title><rect x="1.1212%" y="597" width="0.2006%" height="15" fill="rgb(229,88,8)" fg:x="1710" fg:w="306"/><text x="1.3712%" y="607.50"></text></g><g><title>ibv_dereg_mr@plt (306 samples, 0.20%)</title><rect x="1.1212%" y="581" width="0.2006%" height="15" fill="rgb(213,181,19)" fg:x="1710" fg:w="306"/><text x="1.3712%" y="591.50"></text></g><g><title>[libucs.so.0.0.0] (16 samples, 0.01%)</title><rect x="1.3231%" y="597" width="0.0105%" height="15" fill="rgb(254,191,54)" fg:x="2018" fg:w="16"/><text x="1.5731%" y="607.50"></text></g><g><title>pthread_self@plt (20 samples, 0.01%)</title><rect x="1.3336%" y="597" width="0.0131%" height="15" fill="rgb(241,83,37)" fg:x="2034" fg:w="20"/><text x="1.5836%" y="607.50"></text></g><g><title>ucp_tag_rndv_process_rts@plt (97 samples, 0.06%)</title><rect x="1.3527%" y="597" width="0.0636%" height="15" fill="rgb(233,36,39)" fg:x="2063" fg:w="97"/><text x="1.6027%" y="607.50"></text></g><g><title>uct_ib_dereg_mr@plt (33 samples, 0.02%)</title><rect x="1.4195%" y="597" width="0.0216%" height="15" fill="rgb(226,3,54)" fg:x="2165" fg:w="33"/><text x="1.6695%" y="607.50"></text></g><g><title>uct_ib_reg_key_impl (259 samples, 0.17%)</title><rect x="1.4412%" y="597" width="0.1698%" height="15" fill="rgb(245,192,40)" fg:x="2198" fg:w="259"/><text x="1.6912%" y="607.50"></text></g><g><title>uct_ib_reg_mr@plt (259 samples, 0.17%)</title><rect x="1.4412%" y="581" width="0.1698%" height="15" fill="rgb(238,167,29)" fg:x="2198" fg:w="259"/><text x="1.6912%" y="591.50"></text></g><g><title>[libuct_ib.so.0.0.0] (467 samples, 0.31%)</title><rect x="1.3218%" y="613" width="0.3062%" height="15" fill="rgb(232,182,51)" fg:x="2016" fg:w="467"/><text x="1.5718%" y="623.50"></text></g><g><title>execute_ioctl@plt (24 samples, 0.02%)</title><rect x="1.6280%" y="581" width="0.0157%" height="15" fill="rgb(231,60,39)" fg:x="2483" fg:w="24"/><text x="1.8780%" y="591.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (34 samples, 0.02%)</title><rect x="1.6280%" y="597" width="0.0223%" height="15" fill="rgb(208,69,12)" fg:x="2483" fg:w="34"/><text x="1.8780%" y="607.50"></text></g><g><title>calloc@plt (205 samples, 0.13%)</title><rect x="1.6503%" y="581" width="0.1344%" height="15" fill="rgb(235,93,37)" fg:x="2517" fg:w="205"/><text x="1.9003%" y="591.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (420 samples, 0.28%)</title><rect x="1.6503%" y="597" width="0.2754%" height="15" fill="rgb(213,116,39)" fg:x="2517" fg:w="420"/><text x="1.9003%" y="607.50"></text></g><g><title>ibv_cmd_reg_mr@plt (215 samples, 0.14%)</title><rect x="1.7847%" y="581" width="0.1410%" height="15" fill="rgb(222,207,29)" fg:x="2722" fg:w="215"/><text x="2.0347%" y="591.50"></text></g><g><title>pthread_self@plt (49 samples, 0.03%)</title><rect x="1.9290%" y="581" width="0.0321%" height="15" fill="rgb(206,96,30)" fg:x="2942" fg:w="49"/><text x="2.1790%" y="591.50"></text></g><g><title>[libuct_ib.so.0.0.0] (68 samples, 0.04%)</title><rect x="1.9290%" y="597" width="0.0446%" height="15" fill="rgb(218,138,4)" fg:x="2942" fg:w="68"/><text x="2.1790%" y="607.50"></text></g><g><title>free@plt (157 samples, 0.10%)</title><rect x="1.9742%" y="565" width="0.1029%" height="15" fill="rgb(250,191,14)" fg:x="3011" fg:w="157"/><text x="2.2242%" y="575.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (176 samples, 0.12%)</title><rect x="1.9742%" y="581" width="0.1154%" height="15" fill="rgb(239,60,40)" fg:x="3011" fg:w="176"/><text x="2.2242%" y="591.50"></text></g><g><title>ibv_cmd_dereg_mr@plt (19 samples, 0.01%)</title><rect x="2.0772%" y="565" width="0.0125%" height="15" fill="rgb(206,27,48)" fg:x="3168" fg:w="19"/><text x="2.3272%" y="575.50"></text></g><g><title>[unknown] (197 samples, 0.13%)</title><rect x="1.9736%" y="597" width="0.1292%" height="15" fill="rgb(225,35,8)" fg:x="3010" fg:w="197"/><text x="2.2236%" y="607.50"></text></g><g><title>ucm_orig_sbrk (20 samples, 0.01%)</title><rect x="2.0896%" y="581" width="0.0131%" height="15" fill="rgb(250,213,24)" fg:x="3187" fg:w="20"/><text x="2.3396%" y="591.50"></text></g><g><title>ucm_orig_brk@plt (17 samples, 0.01%)</title><rect x="2.0916%" y="565" width="0.0111%" height="15" fill="rgb(247,123,22)" fg:x="3190" fg:w="17"/><text x="2.3416%" y="575.50"></text></g><g><title>ucm_orig_madvise@plt (116 samples, 0.08%)</title><rect x="2.1034%" y="565" width="0.0761%" height="15" fill="rgb(231,138,38)" fg:x="3208" fg:w="116"/><text x="2.3534%" y="575.50"></text></g><g><title>ibv_cmd_reg_mr (166 samples, 0.11%)</title><rect x="2.1034%" y="597" width="0.1088%" height="15" fill="rgb(231,145,46)" fg:x="3208" fg:w="166"/><text x="2.3534%" y="607.50"></text></g><g><title>[libucm.so.0.0.0] (166 samples, 0.11%)</title><rect x="2.1034%" y="581" width="0.1088%" height="15" fill="rgb(251,118,11)" fg:x="3208" fg:w="166"/><text x="2.3534%" y="591.50"></text></g><g><title>ucm_orig_madvise_syscall@plt (50 samples, 0.03%)</title><rect x="2.1795%" y="565" width="0.0328%" height="15" fill="rgb(217,147,25)" fg:x="3324" fg:w="50"/><text x="2.4295%" y="575.50"></text></g><g><title>sysmalloc (21 samples, 0.01%)</title><rect x="2.2122%" y="597" width="0.0138%" height="15" fill="rgb(247,81,37)" fg:x="3374" fg:w="21"/><text x="2.4622%" y="607.50"></text></g><g><title>__sbrk (21 samples, 0.01%)</title><rect x="2.2122%" y="581" width="0.0138%" height="15" fill="rgb(209,12,38)" fg:x="3374" fg:w="21"/><text x="2.4622%" y="591.50"></text></g><g><title>ucm_event_enter (24 samples, 0.02%)</title><rect x="2.2332%" y="597" width="0.0157%" height="15" fill="rgb(227,1,9)" fg:x="3406" fg:w="24"/><text x="2.4832%" y="607.50"></text></g><g><title>pthread_rwlock_rdlock@plt (24 samples, 0.02%)</title><rect x="2.2332%" y="581" width="0.0157%" height="15" fill="rgb(248,47,43)" fg:x="3406" fg:w="24"/><text x="2.4832%" y="591.50"></text></g><g><title>[libucm.so.0.0.0] (33 samples, 0.02%)</title><rect x="2.2490%" y="581" width="0.0216%" height="15" fill="rgb(221,10,30)" fg:x="3430" fg:w="33"/><text x="2.4990%" y="591.50"></text></g><g><title>ucm_orig_madvise_syscall@plt (27 samples, 0.02%)</title><rect x="2.2529%" y="565" width="0.0177%" height="15" fill="rgb(210,229,1)" fg:x="3436" fg:w="27"/><text x="2.5029%" y="575.50"></text></g><g><title>ucm_event_enter@plt (57 samples, 0.04%)</title><rect x="2.2824%" y="581" width="0.0374%" height="15" fill="rgb(222,148,37)" fg:x="3481" fg:w="57"/><text x="2.5324%" y="591.50"></text></g><g><title>ucm_madvise (117 samples, 0.08%)</title><rect x="2.2490%" y="597" width="0.0767%" height="15" fill="rgb(234,67,33)" fg:x="3430" fg:w="117"/><text x="2.4990%" y="607.50"></text></g><g><title>ucm_override_madvise (147 samples, 0.10%)</title><rect x="2.3257%" y="597" width="0.0964%" height="15" fill="rgb(247,98,35)" fg:x="3547" fg:w="147"/><text x="2.5757%" y="607.50"></text></g><g><title>pthread_self@plt (147 samples, 0.10%)</title><rect x="2.3257%" y="581" width="0.0964%" height="15" fill="rgb(247,138,52)" fg:x="3547" fg:w="147"/><text x="2.5757%" y="591.50"></text></g><g><title>ucm_override_sbrk (38 samples, 0.02%)</title><rect x="2.4221%" y="597" width="0.0249%" height="15" fill="rgb(213,79,30)" fg:x="3694" fg:w="38"/><text x="2.6721%" y="607.50"></text></g><g><title>pthread_self@plt (38 samples, 0.02%)</title><rect x="2.4221%" y="581" width="0.0249%" height="15" fill="rgb(246,177,23)" fg:x="3694" fg:w="38"/><text x="2.6721%" y="591.50"></text></g><g><title>[libucm.so.0.0.0] (49 samples, 0.03%)</title><rect x="2.4470%" y="581" width="0.0321%" height="15" fill="rgb(230,62,27)" fg:x="3732" fg:w="49"/><text x="2.6970%" y="591.50"></text></g><g><title>ucm_orig_sbrk@plt (49 samples, 0.03%)</title><rect x="2.4470%" y="565" width="0.0321%" height="15" fill="rgb(216,154,8)" fg:x="3732" fg:w="49"/><text x="2.6970%" y="575.50"></text></g><g><title>ucm_sbrk (71 samples, 0.05%)</title><rect x="2.4470%" y="597" width="0.0466%" height="15" fill="rgb(244,35,45)" fg:x="3732" fg:w="71"/><text x="2.6970%" y="607.50"></text></g><g><title>ucp_ep_rkey_unpack (85 samples, 0.06%)</title><rect x="2.4948%" y="597" width="0.0557%" height="15" fill="rgb(251,115,12)" fg:x="3805" fg:w="85"/><text x="2.7448%" y="607.50"></text></g><g><title>ucp_ep_rkey_unpack_internal@plt (85 samples, 0.06%)</title><rect x="2.4948%" y="581" width="0.0557%" height="15" fill="rgb(240,54,50)" fg:x="3805" fg:w="85"/><text x="2.7448%" y="591.50"></text></g><g><title>ucs_free (97 samples, 0.06%)</title><rect x="2.5525%" y="597" width="0.0636%" height="15" fill="rgb(233,84,52)" fg:x="3893" fg:w="97"/><text x="2.8025%" y="607.50"></text></g><g><title>ucs_memtrack_is_enabled@plt (97 samples, 0.06%)</title><rect x="2.5525%" y="581" width="0.0636%" height="15" fill="rgb(207,117,47)" fg:x="3893" fg:w="97"/><text x="2.8025%" y="591.50"></text></g><g><title>memset@plt (76 samples, 0.05%)</title><rect x="2.6161%" y="581" width="0.0498%" height="15" fill="rgb(249,43,39)" fg:x="3990" fg:w="76"/><text x="2.8661%" y="591.50"></text></g><g><title>pthread_rwlock_unlock@plt (25 samples, 0.02%)</title><rect x="2.6660%" y="581" width="0.0164%" height="15" fill="rgb(209,38,44)" fg:x="4066" fg:w="25"/><text x="2.9160%" y="591.50"></text></g><g><title>pthread_spin_lock@plt (45 samples, 0.03%)</title><rect x="2.6843%" y="581" width="0.0295%" height="15" fill="rgb(236,212,23)" fg:x="4094" fg:w="45"/><text x="2.9343%" y="591.50"></text></g><g><title>pthread_spin_unlock@plt (49 samples, 0.03%)</title><rect x="2.7138%" y="581" width="0.0321%" height="15" fill="rgb(242,79,21)" fg:x="4139" fg:w="49"/><text x="2.9638%" y="591.50"></text></g><g><title>ucs_pgtable_insert@plt (76 samples, 0.05%)</title><rect x="2.7460%" y="581" width="0.0498%" height="15" fill="rgb(211,96,35)" fg:x="4188" fg:w="76"/><text x="2.9960%" y="591.50"></text></g><g><title>ucs_pgtable_search_range@plt (63 samples, 0.04%)</title><rect x="2.7958%" y="581" width="0.0413%" height="15" fill="rgb(253,215,40)" fg:x="4264" fg:w="63"/><text x="3.0458%" y="591.50"></text></g><g><title>ucs_rcache_create_region (452 samples, 0.30%)</title><rect x="2.6161%" y="597" width="0.2964%" height="15" fill="rgb(211,81,21)" fg:x="3990" fg:w="452"/><text x="2.8661%" y="607.50"></text></g><g><title>ucs_posix_memalign@plt (115 samples, 0.08%)</title><rect x="2.8371%" y="581" width="0.0754%" height="15" fill="rgb(208,190,38)" fg:x="4327" fg:w="115"/><text x="3.0871%" y="591.50"></text></g><g><title>[unknown] (1,961 samples, 1.29%)</title><rect x="1.6280%" y="613" width="1.2858%" height="15" fill="rgb(235,213,38)" fg:x="2483" fg:w="1961"/><text x="1.8780%" y="623.50"></text></g><g><title>[libucs.so.0.0.0] (18 samples, 0.01%)</title><rect x="2.9295%" y="341" width="0.0118%" height="15" fill="rgb(237,122,38)" fg:x="4468" fg:w="18"/><text x="3.1795%" y="351.50"></text></g><g><title>uct_ib_md_open_common (19 samples, 0.01%)</title><rect x="2.9295%" y="373" width="0.0125%" height="15" fill="rgb(244,218,35)" fg:x="4468" fg:w="19"/><text x="3.1795%" y="383.50"></text></g><g><title>ucs_rcache_create (19 samples, 0.01%)</title><rect x="2.9295%" y="357" width="0.0125%" height="15" fill="rgb(240,68,47)" fg:x="4468" fg:w="19"/><text x="3.1795%" y="367.50"></text></g><g><title>uct_md_open (23 samples, 0.02%)</title><rect x="2.9289%" y="421" width="0.0151%" height="15" fill="rgb(210,16,53)" fg:x="4467" fg:w="23"/><text x="3.1789%" y="431.50"></text></g><g><title>uct_ib_md_open (23 samples, 0.02%)</title><rect x="2.9289%" y="405" width="0.0151%" height="15" fill="rgb(235,124,12)" fg:x="4467" fg:w="23"/><text x="3.1789%" y="415.50"></text></g><g><title>[libuct_ib.so.0.0.0] (23 samples, 0.02%)</title><rect x="2.9289%" y="389" width="0.0151%" height="15" fill="rgb(224,169,11)" fg:x="4467" fg:w="23"/><text x="3.1789%" y="399.50"></text></g><g><title>[libucp.so.0.0.0] (24 samples, 0.02%)</title><rect x="2.9289%" y="437" width="0.0157%" height="15" fill="rgb(250,166,2)" fg:x="4467" fg:w="24"/><text x="3.1789%" y="447.50"></text></g><g><title>[libucp.so.0.0.0] (26 samples, 0.02%)</title><rect x="2.9289%" y="453" width="0.0170%" height="15" fill="rgb(242,216,29)" fg:x="4467" fg:w="26"/><text x="3.1789%" y="463.50"></text></g><g><title>ucp_init_version (27 samples, 0.02%)</title><rect x="2.9289%" y="469" width="0.0177%" height="15" fill="rgb(230,116,27)" fg:x="4467" fg:w="27"/><text x="3.1789%" y="479.50"></text></g><g><title>[libuct_ib.so.0.0.0] (17 samples, 0.01%)</title><rect x="2.9518%" y="389" width="0.0111%" height="15" fill="rgb(228,99,48)" fg:x="4502" fg:w="17"/><text x="3.2018%" y="399.50"></text></g><g><title>[libuct_ib.so.0.0.0] (19 samples, 0.01%)</title><rect x="2.9518%" y="405" width="0.0125%" height="15" fill="rgb(253,11,6)" fg:x="4502" fg:w="19"/><text x="3.2018%" y="415.50"></text></g><g><title>uct_iface_open (20 samples, 0.01%)</title><rect x="2.9518%" y="421" width="0.0131%" height="15" fill="rgb(247,143,39)" fg:x="4502" fg:w="20"/><text x="3.2018%" y="431.50"></text></g><g><title>[libucp.so.0.0.0] (30 samples, 0.02%)</title><rect x="2.9466%" y="453" width="0.0197%" height="15" fill="rgb(236,97,10)" fg:x="4494" fg:w="30"/><text x="3.1966%" y="463.50"></text></g><g><title>ucp_worker_iface_open (25 samples, 0.02%)</title><rect x="2.9499%" y="437" width="0.0164%" height="15" fill="rgb(233,208,19)" fg:x="4499" fg:w="25"/><text x="3.1999%" y="447.50"></text></g><g><title>mpicd::init (72 samples, 0.05%)</title><rect x="2.9204%" y="485" width="0.0472%" height="15" fill="rgb(216,164,2)" fg:x="4454" fg:w="72"/><text x="3.1704%" y="495.50"></text></g><g><title>ucp_worker_create (32 samples, 0.02%)</title><rect x="2.9466%" y="469" width="0.0210%" height="15" fill="rgb(220,129,5)" fg:x="4494" fg:w="32"/><text x="3.1966%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.01%)</title><rect x="2.9676%" y="469" width="0.0138%" height="15" fill="rgb(242,17,10)" fg:x="4526" fg:w="21"/><text x="3.2176%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::System&gt; (21 samples, 0.01%)</title><rect x="2.9676%" y="453" width="0.0138%" height="15" fill="rgb(242,107,0)" fg:x="4526" fg:w="21"/><text x="3.2176%" y="463.50"></text></g><g><title>__memcpy_thunderx2 (16,660 samples, 10.92%)</title><rect x="3.2757%" y="421" width="10.9235%" height="15" fill="rgb(251,28,31)" fg:x="4996" fg:w="16660"/><text x="3.5257%" y="431.50">__memcpy_thunder..</text></g><g><title>__rdl_alloc_zeroed (60 samples, 0.04%)</title><rect x="14.1993%" y="421" width="0.0393%" height="15" fill="rgb(233,223,10)" fg:x="21656" fg:w="60"/><text x="14.4493%" y="431.50"></text></g><g><title>__rust_alloc_zeroed (20 samples, 0.01%)</title><rect x="14.2386%" y="421" width="0.0131%" height="15" fill="rgb(215,21,27)" fg:x="21716" fg:w="20"/><text x="14.4886%" y="431.50"></text></g><g><title>__GI_memset (5,623 samples, 3.69%)</title><rect x="14.5225%" y="405" width="3.6869%" height="15" fill="rgb(232,23,21)" fg:x="22149" fg:w="5623"/><text x="14.7725%" y="415.50">__GI..</text></g><g><title>__aarch64_cas4_acq (19 samples, 0.01%)</title><rect x="18.2094%" y="405" width="0.0125%" height="15" fill="rgb(244,5,23)" fg:x="27772" fg:w="19"/><text x="18.4594%" y="415.50"></text></g><g><title>__aarch64_swp4_rel (30 samples, 0.02%)</title><rect x="18.2218%" y="405" width="0.0197%" height="15" fill="rgb(226,81,46)" fg:x="27791" fg:w="30"/><text x="18.4718%" y="415.50"></text></g><g><title>[unknown] (201 samples, 0.13%)</title><rect x="18.4002%" y="389" width="0.1318%" height="15" fill="rgb(247,70,30)" fg:x="28063" fg:w="201"/><text x="18.6502%" y="399.50"></text></g><g><title>[unknown] (201 samples, 0.13%)</title><rect x="18.4002%" y="373" width="0.1318%" height="15" fill="rgb(212,68,19)" fg:x="28063" fg:w="201"/><text x="18.6502%" y="383.50"></text></g><g><title>[unknown] (201 samples, 0.13%)</title><rect x="18.4002%" y="357" width="0.1318%" height="15" fill="rgb(240,187,13)" fg:x="28063" fg:w="201"/><text x="18.6502%" y="367.50"></text></g><g><title>[unknown] (133 samples, 0.09%)</title><rect x="18.6460%" y="373" width="0.0872%" height="15" fill="rgb(223,113,26)" fg:x="28438" fg:w="133"/><text x="18.8960%" y="383.50"></text></g><g><title>[unknown] (133 samples, 0.09%)</title><rect x="18.6460%" y="357" width="0.0872%" height="15" fill="rgb(206,192,2)" fg:x="28438" fg:w="133"/><text x="18.8960%" y="367.50"></text></g><g><title>[unknown] (133 samples, 0.09%)</title><rect x="18.6460%" y="341" width="0.0872%" height="15" fill="rgb(241,108,4)" fg:x="28438" fg:w="133"/><text x="18.8960%" y="351.50"></text></g><g><title>__sbrk (18 samples, 0.01%)</title><rect x="18.7536%" y="357" width="0.0118%" height="15" fill="rgb(247,173,49)" fg:x="28602" fg:w="18"/><text x="19.0036%" y="367.50"></text></g><g><title>ucm_override_sbrk (57 samples, 0.04%)</title><rect x="18.7654%" y="357" width="0.0374%" height="15" fill="rgb(224,114,35)" fg:x="28620" fg:w="57"/><text x="19.0154%" y="367.50"></text></g><g><title>__pthread_rwlock_unlock (68 samples, 0.04%)</title><rect x="18.8263%" y="341" width="0.0446%" height="15" fill="rgb(245,159,27)" fg:x="28713" fg:w="68"/><text x="19.0763%" y="351.50"></text></g><g><title>__aarch64_cas4_rel (25 samples, 0.02%)</title><rect x="18.8545%" y="325" width="0.0164%" height="15" fill="rgb(245,172,44)" fg:x="28756" fg:w="25"/><text x="19.1045%" y="335.50"></text></g><g><title>syscall (68 samples, 0.04%)</title><rect x="19.0158%" y="277" width="0.0446%" height="15" fill="rgb(236,23,11)" fg:x="29002" fg:w="68"/><text x="19.2658%" y="287.50"></text></g><g><title>[unknown] (59 samples, 0.04%)</title><rect x="19.0217%" y="261" width="0.0387%" height="15" fill="rgb(205,117,38)" fg:x="29011" fg:w="59"/><text x="19.2717%" y="271.50"></text></g><g><title>[unknown] (59 samples, 0.04%)</title><rect x="19.0217%" y="245" width="0.0387%" height="15" fill="rgb(237,72,25)" fg:x="29011" fg:w="59"/><text x="19.2717%" y="255.50"></text></g><g><title>[unknown] (59 samples, 0.04%)</title><rect x="19.0217%" y="229" width="0.0387%" height="15" fill="rgb(244,70,9)" fg:x="29011" fg:w="59"/><text x="19.2717%" y="239.50"></text></g><g><title>ucm_event_dispatch (290 samples, 0.19%)</title><rect x="18.8709%" y="341" width="0.1901%" height="15" fill="rgb(217,125,39)" fg:x="28781" fg:w="290"/><text x="19.1209%" y="351.50"></text></g><g><title>[libucm.so.0.0.0] (138 samples, 0.09%)</title><rect x="18.9706%" y="325" width="0.0905%" height="15" fill="rgb(235,36,10)" fg:x="28933" fg:w="138"/><text x="19.2206%" y="335.50"></text></g><g><title>ucm_orig_sbrk (126 samples, 0.08%)</title><rect x="18.9785%" y="309" width="0.0826%" height="15" fill="rgb(251,123,47)" fg:x="28945" fg:w="126"/><text x="19.2285%" y="319.50"></text></g><g><title>ucm_orig_brk (72 samples, 0.05%)</title><rect x="19.0139%" y="293" width="0.0472%" height="15" fill="rgb(221,13,13)" fg:x="28999" fg:w="72"/><text x="19.2639%" y="303.50"></text></g><g><title>ucm_event_enter (60 samples, 0.04%)</title><rect x="19.0611%" y="341" width="0.0393%" height="15" fill="rgb(238,131,9)" fg:x="29071" fg:w="60"/><text x="19.3111%" y="351.50"></text></g><g><title>__pthread_rwlock_rdlock (57 samples, 0.04%)</title><rect x="19.0630%" y="325" width="0.0374%" height="15" fill="rgb(211,50,8)" fg:x="29074" fg:w="57"/><text x="19.3130%" y="335.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecArray as mpicd_rust_benchmarks::datatype::ManualPack&gt;::manual_pack (24,504 samples, 16.07%)</title><rect x="3.0351%" y="437" width="16.0666%" height="15" fill="rgb(245,182,24)" fg:x="4629" fg:w="24504"/><text x="3.2851%" y="447.50">&lt;mpicd_rust_benchmarks::d..</text></g><g><title>calloc (7,397 samples, 4.85%)</title><rect x="14.2517%" y="421" width="4.8500%" height="15" fill="rgb(242,14,37)" fg:x="21736" fg:w="7397"/><text x="14.5017%" y="431.50">calloc</text></g><g><title>_int_malloc (1,312 samples, 0.86%)</title><rect x="18.2415%" y="405" width="0.8602%" height="15" fill="rgb(246,228,12)" fg:x="27821" fg:w="1312"/><text x="18.4915%" y="415.50"></text></g><g><title>sysmalloc (869 samples, 0.57%)</title><rect x="18.5319%" y="389" width="0.5698%" height="15" fill="rgb(213,55,15)" fg:x="28264" fg:w="869"/><text x="18.7819%" y="399.50"></text></g><g><title>__default_morecore (562 samples, 0.37%)</title><rect x="18.7332%" y="373" width="0.3685%" height="15" fill="rgb(209,9,3)" fg:x="28571" fg:w="562"/><text x="18.9832%" y="383.50"></text></g><g><title>ucm_sbrk (456 samples, 0.30%)</title><rect x="18.8027%" y="357" width="0.2990%" height="15" fill="rgb(230,59,30)" fg:x="28677" fg:w="456"/><text x="19.0527%" y="367.50"></text></g><g><title>__libc_malloc (101 samples, 0.07%)</title><rect x="19.1017%" y="437" width="0.0662%" height="15" fill="rgb(209,121,21)" fg:x="29133" fg:w="101"/><text x="19.3517%" y="447.50"></text></g><g><title>_int_malloc (98 samples, 0.06%)</title><rect x="19.1037%" y="421" width="0.0643%" height="15" fill="rgb(220,109,13)" fg:x="29136" fg:w="98"/><text x="19.3537%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (24,634 samples, 16.15%)</title><rect x="3.0168%" y="453" width="16.1519%" height="15" fill="rgb(232,18,1)" fg:x="4601" fg:w="24634"/><text x="3.2668%" y="463.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::isend (20 samples, 0.01%)</title><rect x="19.1686%" y="453" width="0.0131%" height="15" fill="rgb(215,41,42)" fg:x="29235" fg:w="20"/><text x="19.4186%" y="463.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (18 samples, 0.01%)</title><rect x="19.5135%" y="437" width="0.0118%" height="15" fill="rgb(224,123,36)" fg:x="29761" fg:w="18"/><text x="19.7635%" y="447.50"></text></g><g><title>&lt;mpicd_ucx_sys::ucp_request_param_t as core::default::Default&gt;::default (35 samples, 0.02%)</title><rect x="19.6577%" y="421" width="0.0229%" height="15" fill="rgb(240,125,3)" fg:x="29981" fg:w="35"/><text x="19.9077%" y="431.50"></text></g><g><title>__libc_malloc (889 samples, 0.58%)</title><rect x="19.6807%" y="421" width="0.5829%" height="15" fill="rgb(205,98,50)" fg:x="30016" fg:w="889"/><text x="19.9307%" y="431.50"></text></g><g><title>_int_malloc (367 samples, 0.24%)</title><rect x="20.0229%" y="405" width="0.2406%" height="15" fill="rgb(205,185,37)" fg:x="30538" fg:w="367"/><text x="20.2729%" y="415.50"></text></g><g><title>unlink_chunk.isra.2 (22 samples, 0.01%)</title><rect x="20.2492%" y="389" width="0.0144%" height="15" fill="rgb(238,207,15)" fg:x="30883" fg:w="22"/><text x="20.4992%" y="399.50"></text></g><g><title>__rdl_alloc (46 samples, 0.03%)</title><rect x="20.2636%" y="421" width="0.0302%" height="15" fill="rgb(213,199,42)" fg:x="30905" fg:w="46"/><text x="20.5136%" y="431.50"></text></g><g><title>ucp_tag_recv_nbx (556 samples, 0.36%)</title><rect x="20.2970%" y="421" width="0.3646%" height="15" fill="rgb(235,201,11)" fg:x="30956" fg:w="556"/><text x="20.5470%" y="431.50"></text></g><g><title>[libucp.so.0.0.0] (18 samples, 0.01%)</title><rect x="20.6950%" y="405" width="0.0118%" height="15" fill="rgb(207,46,11)" fg:x="31563" fg:w="18"/><text x="20.9450%" y="415.50"></text></g><g><title>pthread_spin_lock (64 samples, 0.04%)</title><rect x="20.9822%" y="389" width="0.0420%" height="15" fill="rgb(241,35,35)" fg:x="32001" fg:w="64"/><text x="21.2322%" y="399.50"></text></g><g><title>pthread_spin_lock (37 samples, 0.02%)</title><rect x="21.2805%" y="277" width="0.0243%" height="15" fill="rgb(243,32,47)" fg:x="32456" fg:w="37"/><text x="21.5305%" y="287.50"></text></g><g><title>[libucp.so.0.0.0] (369 samples, 0.24%)</title><rect x="21.0642%" y="357" width="0.2419%" height="15" fill="rgb(247,202,23)" fg:x="32126" fg:w="369"/><text x="21.3142%" y="367.50"></text></g><g><title>ucp_mem_rereg_mds (361 samples, 0.24%)</title><rect x="21.0694%" y="341" width="0.2367%" height="15" fill="rgb(219,102,11)" fg:x="32134" fg:w="361"/><text x="21.3194%" y="351.50"></text></g><g><title>uct_md_mem_dereg (326 samples, 0.21%)</title><rect x="21.0924%" y="325" width="0.2137%" height="15" fill="rgb(243,110,44)" fg:x="32169" fg:w="326"/><text x="21.3424%" y="335.50"></text></g><g><title>[libuct_ib.so.0.0.0] (302 samples, 0.20%)</title><rect x="21.1081%" y="309" width="0.1980%" height="15" fill="rgb(222,74,54)" fg:x="32193" fg:w="302"/><text x="21.3581%" y="319.50"></text></g><g><title>ucs_rcache_region_put (264 samples, 0.17%)</title><rect x="21.1330%" y="293" width="0.1731%" height="15" fill="rgb(216,99,12)" fg:x="32231" fg:w="264"/><text x="21.3830%" y="303.50"></text></g><g><title>ucp_rkey_destroy (26 samples, 0.02%)</title><rect x="21.3087%" y="357" width="0.0170%" height="15" fill="rgb(226,22,26)" fg:x="32499" fg:w="26"/><text x="21.5587%" y="367.50"></text></g><g><title>pthread_spin_lock (18 samples, 0.01%)</title><rect x="21.6352%" y="293" width="0.0118%" height="15" fill="rgb(217,163,10)" fg:x="32997" fg:w="18"/><text x="21.8852%" y="303.50"></text></g><g><title>&lt;mpicd::message::ContiguousRecvMessage as mpicd::message::Message&gt;::progress (3,237 samples, 2.12%)</title><rect x="19.5253%" y="437" width="2.1224%" height="15" fill="rgb(213,25,53)" fg:x="29779" fg:w="3237"/><text x="19.7753%" y="447.50">&lt;..</text></g><g><title>ucp_worker_progress (1,504 samples, 0.99%)</title><rect x="20.6616%" y="421" width="0.9861%" height="15" fill="rgb(252,105,26)" fg:x="31512" fg:w="1504"/><text x="20.9116%" y="431.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1,435 samples, 0.94%)</title><rect x="20.7068%" y="405" width="0.9409%" height="15" fill="rgb(220,39,43)" fg:x="31581" fg:w="1435"/><text x="20.9568%" y="415.50"></text></g><g><title>uct_rc_ep_send_op_completion_handler (940 samples, 0.62%)</title><rect x="21.0314%" y="389" width="0.6163%" height="15" fill="rgb(229,68,48)" fg:x="32076" fg:w="940"/><text x="21.2814%" y="399.50"></text></g><g><title>ucp_rndv_get_completion (925 samples, 0.61%)</title><rect x="21.0412%" y="373" width="0.6065%" height="15" fill="rgb(252,8,32)" fg:x="32091" fg:w="925"/><text x="21.2912%" y="383.50"></text></g><g><title>ucp_rndv_req_send_ack (491 samples, 0.32%)</title><rect x="21.3258%" y="357" width="0.3219%" height="15" fill="rgb(223,20,43)" fg:x="32525" fg:w="491"/><text x="21.5758%" y="367.50"></text></g><g><title>ucp_proto_progress_am_single (485 samples, 0.32%)</title><rect x="21.3297%" y="341" width="0.3180%" height="15" fill="rgb(229,81,49)" fg:x="32531" fg:w="485"/><text x="21.5797%" y="351.50"></text></g><g><title>ucp_do_am_single (479 samples, 0.31%)</title><rect x="21.3336%" y="325" width="0.3141%" height="15" fill="rgb(236,28,36)" fg:x="32537" fg:w="479"/><text x="21.5836%" y="335.50"></text></g><g><title>uct_rc_mlx5_ep_am_short (455 samples, 0.30%)</title><rect x="21.3494%" y="309" width="0.2983%" height="15" fill="rgb(249,185,26)" fg:x="32561" fg:w="455"/><text x="21.5994%" y="319.50"></text></g><g><title>[libucp.so.0.0.0] (31 samples, 0.02%)</title><rect x="21.6805%" y="405" width="0.0203%" height="15" fill="rgb(249,174,33)" fg:x="33066" fg:w="31"/><text x="21.9305%" y="415.50"></text></g><g><title>uct_rc_mlx5_ep_am_bcopy (29 samples, 0.02%)</title><rect x="21.6818%" y="389" width="0.0190%" height="15" fill="rgb(233,201,37)" fg:x="33068" fg:w="29"/><text x="21.9318%" y="399.50"></text></g><g><title>ucp_tag_send_nbx (61 samples, 0.04%)</title><rect x="21.6661%" y="421" width="0.0400%" height="15" fill="rgb(221,78,26)" fg:x="33044" fg:w="61"/><text x="21.9161%" y="431.50"></text></g><g><title>&lt;mpicd::message::PackSendMessage as mpicd::message::Message&gt;::progress (94 samples, 0.06%)</title><rect x="21.6477%" y="437" width="0.0616%" height="15" fill="rgb(250,127,30)" fg:x="33016" fg:w="94"/><text x="21.8977%" y="447.50"></text></g><g><title>&lt;mpicd::request::Request as core::ops::drop::Drop&gt;::drop (76 samples, 0.05%)</title><rect x="21.7303%" y="421" width="0.0498%" height="15" fill="rgb(230,49,44)" fg:x="33142" fg:w="76"/><text x="21.9803%" y="431.50"></text></g><g><title>ucp_request_free (69 samples, 0.05%)</title><rect x="21.7349%" y="405" width="0.0452%" height="15" fill="rgb(229,67,23)" fg:x="33149" fg:w="69"/><text x="21.9849%" y="415.50"></text></g><g><title>_int_free (193 samples, 0.13%)</title><rect x="21.7828%" y="421" width="0.1265%" height="15" fill="rgb(249,83,47)" fg:x="33222" fg:w="193"/><text x="22.0328%" y="431.50"></text></g><g><title>mpicd::Handle::remove_message (348 samples, 0.23%)</title><rect x="21.7093%" y="437" width="0.2282%" height="15" fill="rgb(215,43,3)" fg:x="33110" fg:w="348"/><text x="21.9593%" y="447.50"></text></g><g><title>free (35 samples, 0.02%)</title><rect x="21.9146%" y="421" width="0.0229%" height="15" fill="rgb(238,154,13)" fg:x="33423" fg:w="35"/><text x="22.1646%" y="431.50"></text></g><g><title>mpicd::request::Request::status (62 samples, 0.04%)</title><rect x="21.9375%" y="437" width="0.0407%" height="15" fill="rgb(219,56,2)" fg:x="33458" fg:w="62"/><text x="22.1875%" y="447.50"></text></g><g><title>[libucp.so.0.0.0] (128 samples, 0.08%)</title><rect x="22.1913%" y="421" width="0.0839%" height="15" fill="rgb(233,0,4)" fg:x="33845" fg:w="128"/><text x="22.4413%" y="431.50"></text></g><g><title>pthread_self@GLIBC_2.17 (30 samples, 0.02%)</title><rect x="23.5819%" y="405" width="0.0197%" height="15" fill="rgb(235,30,7)" fg:x="35966" fg:w="30"/><text x="23.8319%" y="415.50"></text></g><g><title>pthread_spin_lock (100 samples, 0.07%)</title><rect x="23.6016%" y="405" width="0.0656%" height="15" fill="rgb(250,79,13)" fg:x="35996" fg:w="100"/><text x="23.8516%" y="415.50"></text></g><g><title>ucp_rndv_rts_handler (25 samples, 0.02%)</title><rect x="23.6685%" y="405" width="0.0164%" height="15" fill="rgb(211,146,34)" fg:x="36098" fg:w="25"/><text x="23.9185%" y="415.50"></text></g><g><title>[libucp.so.0.0.0] (670 samples, 0.44%)</title><rect x="24.1071%" y="373" width="0.4393%" height="15" fill="rgb(228,22,38)" fg:x="36767" fg:w="670"/><text x="24.3571%" y="383.50"></text></g><g><title>pthread_spin_lock (28 samples, 0.02%)</title><rect x="24.5484%" y="373" width="0.0184%" height="15" fill="rgb(235,168,5)" fg:x="37440" fg:w="28"/><text x="24.7984%" y="383.50"></text></g><g><title>[libuct_ib.so.0.0.0] (59 samples, 0.04%)</title><rect x="24.8756%" y="341" width="0.0387%" height="15" fill="rgb(221,155,16)" fg:x="37939" fg:w="59"/><text x="25.1256%" y="351.50"></text></g><g><title>ucp_rkey_resolve_inner (442 samples, 0.29%)</title><rect x="24.9143%" y="341" width="0.2898%" height="15" fill="rgb(215,215,53)" fg:x="37998" fg:w="442"/><text x="25.1643%" y="351.50"></text></g><g><title>ucp_rkey_find_rma_lane (96 samples, 0.06%)</title><rect x="25.1411%" y="325" width="0.0629%" height="15" fill="rgb(223,4,10)" fg:x="38344" fg:w="96"/><text x="25.3911%" y="335.50"></text></g><g><title>ucs_log_indent (197 samples, 0.13%)</title><rect x="25.2041%" y="341" width="0.1292%" height="15" fill="rgb(234,103,6)" fg:x="38440" fg:w="197"/><text x="25.4541%" y="351.50"></text></g><g><title>_dl_tlsdesc_return (28 samples, 0.02%)</title><rect x="25.3149%" y="325" width="0.0184%" height="15" fill="rgb(227,97,0)" fg:x="38609" fg:w="28"/><text x="25.5649%" y="335.50"></text></g><g><title>ucp_ep_rkey_unpack (1,234 samples, 0.81%)</title><rect x="24.5668%" y="373" width="0.8091%" height="15" fill="rgb(234,150,53)" fg:x="37468" fg:w="1234"/><text x="24.8168%" y="383.50"></text></g><g><title>ucp_ep_rkey_unpack_internal (1,199 samples, 0.79%)</title><rect x="24.5897%" y="357" width="0.7862%" height="15" fill="rgb(228,201,54)" fg:x="37503" fg:w="1199"/><text x="24.8397%" y="367.50"></text></g><g><title>uct_rkey_unpack (65 samples, 0.04%)</title><rect x="25.3332%" y="341" width="0.0426%" height="15" fill="rgb(222,22,37)" fg:x="38637" fg:w="65"/><text x="25.5832%" y="351.50"></text></g><g><title>__aarch64_cas4_acq (44 samples, 0.03%)</title><rect x="29.6738%" y="229" width="0.0288%" height="15" fill="rgb(237,53,32)" fg:x="45257" fg:w="44"/><text x="29.9238%" y="239.50"></text></g><g><title>_int_free (548 samples, 0.36%)</title><rect x="29.3787%" y="245" width="0.3593%" height="15" fill="rgb(233,25,53)" fg:x="44807" fg:w="548"/><text x="29.6287%" y="255.50"></text></g><g><title>unlink_chunk.isra.2 (51 samples, 0.03%)</title><rect x="29.7046%" y="229" width="0.0334%" height="15" fill="rgb(210,40,34)" fg:x="45304" fg:w="51"/><text x="29.9546%" y="239.50"></text></g><g><title>free (34 samples, 0.02%)</title><rect x="29.7381%" y="245" width="0.0223%" height="15" fill="rgb(241,220,44)" fg:x="45355" fg:w="34"/><text x="29.9881%" y="255.50"></text></g><g><title>pthread_spin_lock (217 samples, 0.14%)</title><rect x="29.7604%" y="245" width="0.1423%" height="15" fill="rgb(235,28,35)" fg:x="45389" fg:w="217"/><text x="30.0104%" y="255.50"></text></g><g><title>ucs_free (71 samples, 0.05%)</title><rect x="29.9039%" y="245" width="0.0466%" height="15" fill="rgb(210,56,17)" fg:x="45608" fg:w="71"/><text x="30.1539%" y="255.50"></text></g><g><title>[libucs.so.0.0.0] (227 samples, 0.15%)</title><rect x="30.3131%" y="229" width="0.1488%" height="15" fill="rgb(224,130,29)" fg:x="46232" fg:w="227"/><text x="30.5631%" y="239.50"></text></g><g><title>[libuct_ib.so.0.0.0] (70 samples, 0.05%)</title><rect x="30.5950%" y="213" width="0.0459%" height="15" fill="rgb(235,212,8)" fg:x="46662" fg:w="70"/><text x="30.8450%" y="223.50"></text></g><g><title>__libc_malloc (435 samples, 0.29%)</title><rect x="32.6204%" y="149" width="0.2852%" height="15" fill="rgb(223,33,50)" fg:x="49751" fg:w="435"/><text x="32.8704%" y="159.50"></text></g><g><title>_int_malloc (126 samples, 0.08%)</title><rect x="32.8230%" y="133" width="0.0826%" height="15" fill="rgb(219,149,13)" fg:x="50060" fg:w="126"/><text x="33.0730%" y="143.50"></text></g><g><title>__madvise (28 samples, 0.02%)</title><rect x="32.9056%" y="149" width="0.0184%" height="15" fill="rgb(250,156,29)" fg:x="50186" fg:w="28"/><text x="33.1556%" y="159.50"></text></g><g><title>_int_free (67 samples, 0.04%)</title><rect x="32.9240%" y="149" width="0.0439%" height="15" fill="rgb(216,193,19)" fg:x="50214" fg:w="67"/><text x="33.1740%" y="159.50"></text></g><g><title>free (50 samples, 0.03%)</title><rect x="32.9679%" y="149" width="0.0328%" height="15" fill="rgb(216,135,14)" fg:x="50281" fg:w="50"/><text x="33.2179%" y="159.50"></text></g><g><title>__pthread_rwlock_unlock (61 samples, 0.04%)</title><rect x="33.0151%" y="133" width="0.0400%" height="15" fill="rgb(241,47,5)" fg:x="50353" fg:w="61"/><text x="33.2651%" y="143.50"></text></g><g><title>ucm_event_dispatch (435 samples, 0.29%)</title><rect x="33.0551%" y="133" width="0.2852%" height="15" fill="rgb(233,42,35)" fg:x="50414" fg:w="435"/><text x="33.3051%" y="143.50"></text></g><g><title>[libucm.so.0.0.0] (232 samples, 0.15%)</title><rect x="33.1882%" y="117" width="0.1521%" height="15" fill="rgb(231,13,6)" fg:x="50617" fg:w="232"/><text x="33.4382%" y="127.50"></text></g><g><title>ucm_orig_madvise_syscall (210 samples, 0.14%)</title><rect x="33.2026%" y="101" width="0.1377%" height="15" fill="rgb(207,181,40)" fg:x="50639" fg:w="210"/><text x="33.4526%" y="111.50"></text></g><g><title>syscall (204 samples, 0.13%)</title><rect x="33.2066%" y="85" width="0.1338%" height="15" fill="rgb(254,173,49)" fg:x="50645" fg:w="204"/><text x="33.4566%" y="95.50"></text></g><g><title>[unknown] (197 samples, 0.13%)</title><rect x="33.2112%" y="69" width="0.1292%" height="15" fill="rgb(221,1,38)" fg:x="50652" fg:w="197"/><text x="33.4612%" y="79.50"></text></g><g><title>[unknown] (197 samples, 0.13%)</title><rect x="33.2112%" y="53" width="0.1292%" height="15" fill="rgb(206,124,46)" fg:x="50652" fg:w="197"/><text x="33.4612%" y="63.50"></text></g><g><title>[unknown] (197 samples, 0.13%)</title><rect x="33.2112%" y="37" width="0.1292%" height="15" fill="rgb(249,21,11)" fg:x="50652" fg:w="197"/><text x="33.4612%" y="47.50"></text></g><g><title>ucm_event_enter (62 samples, 0.04%)</title><rect x="33.3403%" y="133" width="0.0407%" height="15" fill="rgb(222,201,40)" fg:x="50849" fg:w="62"/><text x="33.5903%" y="143.50"></text></g><g><title>__pthread_rwlock_rdlock (59 samples, 0.04%)</title><rect x="33.3423%" y="117" width="0.0387%" height="15" fill="rgb(235,61,29)" fg:x="50852" fg:w="59"/><text x="33.5923%" y="127.50"></text></g><g><title>__aarch64_ldadd4_acq (31 samples, 0.02%)</title><rect x="33.3607%" y="101" width="0.0203%" height="15" fill="rgb(219,207,3)" fg:x="50880" fg:w="31"/><text x="33.6107%" y="111.50"></text></g><g><title>ucm_madvise (592 samples, 0.39%)</title><rect x="33.0007%" y="149" width="0.3882%" height="15" fill="rgb(222,56,46)" fg:x="50331" fg:w="592"/><text x="33.2507%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (2,128 samples, 1.40%)</title><rect x="32.0309%" y="165" width="1.3953%" height="15" fill="rgb(239,76,54)" fg:x="48852" fg:w="2128"/><text x="32.2809%" y="175.50"></text></g><g><title>ucm_override_madvise (57 samples, 0.04%)</title><rect x="33.3888%" y="149" width="0.0374%" height="15" fill="rgb(231,124,27)" fg:x="50923" fg:w="57"/><text x="33.6388%" y="159.50"></text></g><g><title>__pthread_mutex_lock (253 samples, 0.17%)</title><rect x="33.4262%" y="165" width="0.1659%" height="15" fill="rgb(249,195,6)" fg:x="50980" fg:w="253"/><text x="33.6762%" y="175.50"></text></g><g><title>__aarch64_cas4_acq (73 samples, 0.05%)</title><rect x="33.5442%" y="149" width="0.0479%" height="15" fill="rgb(237,174,47)" fg:x="51160" fg:w="73"/><text x="33.7942%" y="159.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (183 samples, 0.12%)</title><rect x="33.5921%" y="165" width="0.1200%" height="15" fill="rgb(206,201,31)" fg:x="51233" fg:w="183"/><text x="33.8421%" y="175.50"></text></g><g><title>__aarch64_swp4_rel (32 samples, 0.02%)</title><rect x="33.6911%" y="149" width="0.0210%" height="15" fill="rgb(231,57,52)" fg:x="51384" fg:w="32"/><text x="33.9411%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (4,271 samples, 2.80%)</title><rect x="30.9196%" y="181" width="2.8004%" height="15" fill="rgb(248,177,22)" fg:x="47157" fg:w="4271"/><text x="31.1696%" y="191.50">[l..</text></g><g><title>_int_free (319 samples, 0.21%)</title><rect x="33.7331%" y="165" width="0.2092%" height="15" fill="rgb(215,211,37)" fg:x="51448" fg:w="319"/><text x="33.9831%" y="175.50"></text></g><g><title>free (124 samples, 0.08%)</title><rect x="33.9422%" y="165" width="0.0813%" height="15" fill="rgb(241,128,51)" fg:x="51767" fg:w="124"/><text x="34.1922%" y="175.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1,121 samples, 0.74%)</title><rect x="33.7200%" y="181" width="0.7350%" height="15" fill="rgb(227,165,31)" fg:x="51428" fg:w="1121"/><text x="33.9700%" y="191.50"></text></g><g><title>ibv_cmd_dereg_mr (658 samples, 0.43%)</title><rect x="34.0235%" y="165" width="0.4314%" height="15" fill="rgb(228,167,24)" fg:x="51891" fg:w="658"/><text x="34.2735%" y="175.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (484 samples, 0.32%)</title><rect x="34.1376%" y="149" width="0.3173%" height="15" fill="rgb(228,143,12)" fg:x="52065" fg:w="484"/><text x="34.3876%" y="159.50"></text></g><g><title>execute_ioctl (445 samples, 0.29%)</title><rect x="34.1632%" y="133" width="0.2918%" height="15" fill="rgb(249,149,8)" fg:x="52104" fg:w="445"/><text x="34.4132%" y="143.50"></text></g><g><title>ioctl (362 samples, 0.24%)</title><rect x="34.2176%" y="117" width="0.2374%" height="15" fill="rgb(243,35,44)" fg:x="52187" fg:w="362"/><text x="34.4676%" y="127.50"></text></g><g><title>[unknown] (360 samples, 0.24%)</title><rect x="34.2189%" y="101" width="0.2360%" height="15" fill="rgb(246,89,9)" fg:x="52189" fg:w="360"/><text x="34.4689%" y="111.50"></text></g><g><title>[unknown] (360 samples, 0.24%)</title><rect x="34.2189%" y="85" width="0.2360%" height="15" fill="rgb(233,213,13)" fg:x="52189" fg:w="360"/><text x="34.4689%" y="95.50"></text></g><g><title>[unknown] (360 samples, 0.24%)</title><rect x="34.2189%" y="69" width="0.2360%" height="15" fill="rgb(233,141,41)" fg:x="52189" fg:w="360"/><text x="34.4689%" y="79.50"></text></g><g><title>[libuct_ib.so.0.0.0] (6,153 samples, 4.03%)</title><rect x="30.4619%" y="229" width="4.0344%" height="15" fill="rgb(239,167,4)" fg:x="46459" fg:w="6153"/><text x="30.7119%" y="239.50">[lib..</text></g><g><title>uct_ib_dereg_mr (5,880 samples, 3.86%)</title><rect x="30.6409%" y="213" width="3.8554%" height="15" fill="rgb(209,217,16)" fg:x="46732" fg:w="5880"/><text x="30.8909%" y="223.50">uct_..</text></g><g><title>ibv_dereg_mr (5,655 samples, 3.71%)</title><rect x="30.7884%" y="197" width="3.7078%" height="15" fill="rgb(219,88,35)" fg:x="46957" fg:w="5655"/><text x="31.0384%" y="207.50">ibv_..</text></g><g><title>ibv_dofork_range (63 samples, 0.04%)</title><rect x="34.4550%" y="181" width="0.0413%" height="15" fill="rgb(220,193,23)" fg:x="52549" fg:w="63"/><text x="34.7050%" y="191.50"></text></g><g><title>pthread_spin_lock (69 samples, 0.05%)</title><rect x="34.4963%" y="229" width="0.0452%" height="15" fill="rgb(230,90,52)" fg:x="52612" fg:w="69"/><text x="34.7463%" y="239.50"></text></g><g><title>[libucs.so.0.0.0] (8,376 samples, 5.49%)</title><rect x="29.0529%" y="261" width="5.4919%" height="15" fill="rgb(252,106,19)" fg:x="44310" fg:w="8376"/><text x="29.3029%" y="271.50">[libucs..</text></g><g><title>ucs_mem_region_destroy_internal (7,007 samples, 4.59%)</title><rect x="29.9505%" y="245" width="4.5943%" height="15" fill="rgb(206,74,20)" fg:x="45679" fg:w="7007"/><text x="30.2005%" y="255.50">ucs_m..</text></g><g><title>[libibverbs.so.1.14.43.0] (75 samples, 0.05%)</title><rect x="38.1726%" y="149" width="0.0492%" height="15" fill="rgb(230,138,44)" fg:x="58219" fg:w="75"/><text x="38.4226%" y="159.50"></text></g><g><title>__libc_malloc (47 samples, 0.03%)</title><rect x="38.2218%" y="149" width="0.0308%" height="15" fill="rgb(235,182,43)" fg:x="58294" fg:w="47"/><text x="38.4718%" y="159.50"></text></g><g><title>__madvise (81 samples, 0.05%)</title><rect x="38.2526%" y="149" width="0.0531%" height="15" fill="rgb(242,16,51)" fg:x="58341" fg:w="81"/><text x="38.5026%" y="159.50"></text></g><g><title>_int_free (151 samples, 0.10%)</title><rect x="38.3057%" y="149" width="0.0990%" height="15" fill="rgb(248,9,4)" fg:x="58422" fg:w="151"/><text x="38.5557%" y="159.50"></text></g><g><title>free (66 samples, 0.04%)</title><rect x="38.4047%" y="149" width="0.0433%" height="15" fill="rgb(210,31,22)" fg:x="58573" fg:w="66"/><text x="38.6547%" y="159.50"></text></g><g><title>__pthread_rwlock_unlock (67 samples, 0.04%)</title><rect x="38.4762%" y="133" width="0.0439%" height="15" fill="rgb(239,54,39)" fg:x="58682" fg:w="67"/><text x="38.7262%" y="143.50"></text></g><g><title>ucm_orig_madvise (91 samples, 0.06%)</title><rect x="38.7555%" y="101" width="0.0597%" height="15" fill="rgb(230,99,41)" fg:x="59108" fg:w="91"/><text x="39.0055%" y="111.50"></text></g><g><title>ucm_event_dispatch (654 samples, 0.43%)</title><rect x="38.5201%" y="133" width="0.4288%" height="15" fill="rgb(253,106,12)" fg:x="58749" fg:w="654"/><text x="38.7701%" y="143.50"></text></g><g><title>[libucm.so.0.0.0] (318 samples, 0.21%)</title><rect x="38.7405%" y="117" width="0.2085%" height="15" fill="rgb(213,46,41)" fg:x="59085" fg:w="318"/><text x="38.9905%" y="127.50"></text></g><g><title>ucm_orig_madvise_syscall (204 samples, 0.13%)</title><rect x="38.8152%" y="101" width="0.1338%" height="15" fill="rgb(215,133,35)" fg:x="59199" fg:w="204"/><text x="39.0652%" y="111.50"></text></g><g><title>syscall (202 samples, 0.13%)</title><rect x="38.8165%" y="85" width="0.1324%" height="15" fill="rgb(213,28,5)" fg:x="59201" fg:w="202"/><text x="39.0665%" y="95.50"></text></g><g><title>[unknown] (185 samples, 0.12%)</title><rect x="38.8277%" y="69" width="0.1213%" height="15" fill="rgb(215,77,49)" fg:x="59218" fg:w="185"/><text x="39.0777%" y="79.50"></text></g><g><title>[unknown] (185 samples, 0.12%)</title><rect x="38.8277%" y="53" width="0.1213%" height="15" fill="rgb(248,100,22)" fg:x="59218" fg:w="185"/><text x="39.0777%" y="63.50"></text></g><g><title>[unknown] (185 samples, 0.12%)</title><rect x="38.8277%" y="37" width="0.1213%" height="15" fill="rgb(208,67,9)" fg:x="59218" fg:w="185"/><text x="39.0777%" y="47.50"></text></g><g><title>ucm_event_enter (49 samples, 0.03%)</title><rect x="38.9490%" y="133" width="0.0321%" height="15" fill="rgb(219,133,21)" fg:x="59403" fg:w="49"/><text x="39.1990%" y="143.50"></text></g><g><title>__pthread_rwlock_rdlock (45 samples, 0.03%)</title><rect x="38.9516%" y="117" width="0.0295%" height="15" fill="rgb(246,46,29)" fg:x="59407" fg:w="45"/><text x="39.2016%" y="127.50"></text></g><g><title>ucm_madvise (815 samples, 0.53%)</title><rect x="38.4480%" y="149" width="0.5344%" height="15" fill="rgb(246,185,52)" fg:x="58639" fg:w="815"/><text x="38.6980%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1,756 samples, 1.15%)</title><rect x="37.9254%" y="165" width="1.1514%" height="15" fill="rgb(252,136,11)" fg:x="57842" fg:w="1756"/><text x="38.1754%" y="175.50"></text></g><g><title>ucm_override_madvise (144 samples, 0.09%)</title><rect x="38.9824%" y="149" width="0.0944%" height="15" fill="rgb(219,138,53)" fg:x="59454" fg:w="144"/><text x="39.2324%" y="159.50"></text></g><g><title>__pthread_mutex_lock (107 samples, 0.07%)</title><rect x="39.0768%" y="165" width="0.0702%" height="15" fill="rgb(211,51,23)" fg:x="59598" fg:w="107"/><text x="39.3268%" y="175.50"></text></g><g><title>__aarch64_cas4_acq (19 samples, 0.01%)</title><rect x="39.1345%" y="149" width="0.0125%" height="15" fill="rgb(247,221,28)" fg:x="59686" fg:w="19"/><text x="39.3845%" y="159.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (363 samples, 0.24%)</title><rect x="39.1470%" y="165" width="0.2380%" height="15" fill="rgb(251,222,45)" fg:x="59705" fg:w="363"/><text x="39.3970%" y="175.50"></text></g><g><title>__aarch64_swp4_rel (89 samples, 0.06%)</title><rect x="39.3266%" y="149" width="0.0584%" height="15" fill="rgb(217,162,53)" fg:x="59979" fg:w="89"/><text x="39.5766%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (4,585 samples, 3.01%)</title><rect x="36.3931%" y="181" width="3.0063%" height="15" fill="rgb(229,93,14)" fg:x="55505" fg:w="4585"/><text x="36.6431%" y="191.50">[li..</text></g><g><title>pthread_mutex_unlock (22 samples, 0.01%)</title><rect x="39.3850%" y="165" width="0.0144%" height="15" fill="rgb(209,67,49)" fg:x="60068" fg:w="22"/><text x="39.6350%" y="175.50"></text></g><g><title>__aarch64_cas4_acq (76 samples, 0.05%)</title><rect x="40.2465%" y="149" width="0.0498%" height="15" fill="rgb(213,87,29)" fg:x="61382" fg:w="76"/><text x="40.4965%" y="159.50"></text></g><g><title>__aarch64_swp4_rel (57 samples, 0.04%)</title><rect x="40.2964%" y="149" width="0.0374%" height="15" fill="rgb(205,151,52)" fg:x="61458" fg:w="57"/><text x="40.5464%" y="159.50"></text></g><g><title>calloc (1,362 samples, 0.89%)</title><rect x="39.6381%" y="165" width="0.8930%" height="15" fill="rgb(253,215,39)" fg:x="60454" fg:w="1362"/><text x="39.8881%" y="175.50"></text></g><g><title>_int_malloc (301 samples, 0.20%)</title><rect x="40.3337%" y="149" width="0.1974%" height="15" fill="rgb(221,220,41)" fg:x="61515" fg:w="301"/><text x="40.5837%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (325 samples, 0.21%)</title><rect x="41.7520%" y="101" width="0.2131%" height="15" fill="rgb(218,133,21)" fg:x="63678" fg:w="325"/><text x="42.0020%" y="111.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (4,342 samples, 2.85%)</title><rect x="39.3994%" y="181" width="2.8469%" height="15" fill="rgb(221,193,43)" fg:x="60090" fg:w="4342"/><text x="39.6494%" y="191.50">[l..</text></g><g><title>ibv_cmd_reg_mr (2,616 samples, 1.72%)</title><rect x="40.5311%" y="165" width="1.7152%" height="15" fill="rgb(240,128,52)" fg:x="61816" fg:w="2616"/><text x="40.7811%" y="175.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (2,229 samples, 1.46%)</title><rect x="40.7848%" y="149" width="1.4615%" height="15" fill="rgb(253,114,12)" fg:x="62203" fg:w="2229"/><text x="41.0348%" y="159.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1,691 samples, 1.11%)</title><rect x="41.1376%" y="133" width="1.1087%" height="15" fill="rgb(215,223,47)" fg:x="62741" fg:w="1691"/><text x="41.3876%" y="143.50"></text></g><g><title>execute_ioctl (1,089 samples, 0.71%)</title><rect x="41.5323%" y="117" width="0.7140%" height="15" fill="rgb(248,225,23)" fg:x="63343" fg:w="1089"/><text x="41.7823%" y="127.50"></text></g><g><title>ioctl (429 samples, 0.28%)</title><rect x="41.9651%" y="101" width="0.2813%" height="15" fill="rgb(250,108,0)" fg:x="64003" fg:w="429"/><text x="42.2151%" y="111.50"></text></g><g><title>[unknown] (406 samples, 0.27%)</title><rect x="41.9801%" y="85" width="0.2662%" height="15" fill="rgb(228,208,7)" fg:x="64026" fg:w="406"/><text x="42.2301%" y="95.50"></text></g><g><title>[unknown] (406 samples, 0.27%)</title><rect x="41.9801%" y="69" width="0.2662%" height="15" fill="rgb(244,45,10)" fg:x="64026" fg:w="406"/><text x="42.2301%" y="79.50"></text></g><g><title>[unknown] (406 samples, 0.27%)</title><rect x="41.9801%" y="53" width="0.2662%" height="15" fill="rgb(207,125,25)" fg:x="64026" fg:w="406"/><text x="42.2301%" y="63.50"></text></g><g><title>[libuct_ib.so.0.0.0] (11,758 samples, 7.71%)</title><rect x="34.5448%" y="261" width="7.7094%" height="15" fill="rgb(210,195,18)" fg:x="52686" fg:w="11758"/><text x="34.7948%" y="271.50">[libuct_ib...</text></g><g><title>[libuct_ib.so.0.0.0] (11,131 samples, 7.30%)</title><rect x="34.9559%" y="245" width="7.2983%" height="15" fill="rgb(249,80,12)" fg:x="53313" fg:w="11131"/><text x="35.2059%" y="255.50">[libuct_ib..</text></g><g><title>uct_ib_reg_key_impl (10,651 samples, 6.98%)</title><rect x="35.2706%" y="229" width="6.9836%" height="15" fill="rgb(221,65,9)" fg:x="53793" fg:w="10651"/><text x="35.5206%" y="239.50">uct_ib_re..</text></g><g><title>uct_ib_reg_mr (10,394 samples, 6.82%)</title><rect x="35.4391%" y="213" width="6.8151%" height="15" fill="rgb(235,49,36)" fg:x="54050" fg:w="10394"/><text x="35.6891%" y="223.50">uct_ib_re..</text></g><g><title>ibv_reg_mr_iova2 (9,817 samples, 6.44%)</title><rect x="35.8175%" y="197" width="6.4367%" height="15" fill="rgb(225,32,20)" fg:x="54627" fg:w="9817"/><text x="36.0675%" y="207.50">ibv_reg_..</text></g><g><title>__GI_memset (249 samples, 0.16%)</title><rect x="42.2542%" y="261" width="0.1633%" height="15" fill="rgb(215,141,46)" fg:x="64444" fg:w="249"/><text x="42.5042%" y="271.50"></text></g><g><title>__aarch64_cas4_rel (28 samples, 0.02%)</title><rect x="42.7433%" y="245" width="0.0184%" height="15" fill="rgb(250,160,47)" fg:x="65190" fg:w="28"/><text x="42.9933%" y="255.50"></text></g><g><title>__pthread_rwlock_unlock (550 samples, 0.36%)</title><rect x="42.4175%" y="261" width="0.3606%" height="15" fill="rgb(216,222,40)" fg:x="64693" fg:w="550"/><text x="42.6675%" y="271.50"></text></g><g><title>__aarch64_swp4_relax (25 samples, 0.02%)</title><rect x="42.7617%" y="245" width="0.0164%" height="15" fill="rgb(234,217,39)" fg:x="65218" fg:w="25"/><text x="43.0117%" y="255.50"></text></g><g><title>__pthread_rwlock_wrlock (225 samples, 0.15%)</title><rect x="42.7781%" y="261" width="0.1475%" height="15" fill="rgb(207,178,40)" fg:x="65243" fg:w="225"/><text x="43.0281%" y="271.50"></text></g><g><title>pthread_spin_lock (521 samples, 0.34%)</title><rect x="42.9256%" y="261" width="0.3416%" height="15" fill="rgb(221,136,13)" fg:x="65468" fg:w="521"/><text x="43.1756%" y="271.50"></text></g><g><title>__aarch64_swp4_acq (269 samples, 0.18%)</title><rect x="43.0908%" y="245" width="0.1764%" height="15" fill="rgb(249,199,10)" fg:x="65720" fg:w="269"/><text x="43.3408%" y="255.50"></text></g><g><title>pthread_spin_lock (157 samples, 0.10%)</title><rect x="49.0752%" y="229" width="0.1029%" height="15" fill="rgb(249,222,13)" fg:x="74847" fg:w="157"/><text x="49.3252%" y="239.50"></text></g><g><title>ucs_pgtable_insert (9,285 samples, 6.09%)</title><rect x="43.2731%" y="261" width="6.0879%" height="15" fill="rgb(244,185,38)" fg:x="65998" fg:w="9285"/><text x="43.5231%" y="271.50">ucs_pgta..</text></g><g><title>[libucs.so.0.0.0] (1,212 samples, 0.79%)</title><rect x="48.5664%" y="245" width="0.7947%" height="15" fill="rgb(236,202,9)" fg:x="74071" fg:w="1212"/><text x="48.8164%" y="255.50"></text></g><g><title>ucs_mpool_get (274 samples, 0.18%)</title><rect x="49.1814%" y="229" width="0.1797%" height="15" fill="rgb(250,229,37)" fg:x="75009" fg:w="274"/><text x="49.4314%" y="239.50"></text></g><g><title>ucs_pgtable_search_range (7,452 samples, 4.89%)</title><rect x="49.3610%" y="261" width="4.8861%" height="15" fill="rgb(206,174,23)" fg:x="75283" fg:w="7452"/><text x="49.6110%" y="271.50">ucs_pg..</text></g><g><title>[libucs.so.0.0.0] (6,891 samples, 4.52%)</title><rect x="49.7289%" y="245" width="4.5182%" height="15" fill="rgb(211,33,43)" fg:x="75844" fg:w="6891"/><text x="49.9789%" y="255.50">[libu..</text></g><g><title>__aarch64_cas4_acq (46 samples, 0.03%)</title><rect x="54.8274%" y="213" width="0.0302%" height="15" fill="rgb(245,58,50)" fg:x="83620" fg:w="46"/><text x="55.0774%" y="223.50"></text></g><g><title>__aarch64_swp4_rel (48 samples, 0.03%)</title><rect x="54.8576%" y="213" width="0.0315%" height="15" fill="rgb(244,68,36)" fg:x="83666" fg:w="48"/><text x="55.1076%" y="223.50"></text></g><g><title>__libc_malloc (1,558 samples, 1.02%)</title><rect x="54.3927%" y="229" width="1.0215%" height="15" fill="rgb(232,229,15)" fg:x="82957" fg:w="1558"/><text x="54.6427%" y="239.50"></text></g><g><title>_int_malloc (801 samples, 0.53%)</title><rect x="54.8890%" y="213" width="0.5252%" height="15" fill="rgb(254,30,23)" fg:x="83714" fg:w="801"/><text x="55.1390%" y="223.50"></text></g><g><title>unlink_chunk.isra.2 (69 samples, 0.05%)</title><rect x="55.3690%" y="197" width="0.0452%" height="15" fill="rgb(235,160,14)" fg:x="84446" fg:w="69"/><text x="55.6190%" y="207.50"></text></g><g><title>posix_memalign (2,011 samples, 1.32%)</title><rect x="54.3540%" y="245" width="1.3186%" height="15" fill="rgb(212,155,44)" fg:x="82898" fg:w="2011"/><text x="54.6040%" y="255.50"></text></g><g><title>_mid_memalign (394 samples, 0.26%)</title><rect x="55.4142%" y="229" width="0.2583%" height="15" fill="rgb(226,2,50)" fg:x="84515" fg:w="394"/><text x="55.6642%" y="239.50"></text></g><g><title>ucs_rcache_create_region (41,832 samples, 27.43%)</title><rect x="28.2634%" y="277" width="27.4281%" height="15" fill="rgb(234,177,6)" fg:x="43106" fg:w="41832"/><text x="28.5134%" y="287.50">ucs_rcache_create_region</text></g><g><title>ucs_posix_memalign (2,203 samples, 1.44%)</title><rect x="54.2471%" y="261" width="1.4444%" height="15" fill="rgb(217,24,9)" fg:x="82735" fg:w="2203"/><text x="54.4971%" y="271.50"></text></g><g><title>ucs_memtrack_is_enabled (29 samples, 0.02%)</title><rect x="55.6726%" y="245" width="0.0190%" height="15" fill="rgb(220,13,46)" fg:x="84909" fg:w="29"/><text x="55.9226%" y="255.50"></text></g><g><title>__aarch64_cas4_acq (66 samples, 0.04%)</title><rect x="56.0502%" y="245" width="0.0433%" height="15" fill="rgb(239,221,27)" fg:x="85485" fg:w="66"/><text x="56.3002%" y="255.50"></text></g><g><title>__pthread_rwlock_rdlock (457 samples, 0.30%)</title><rect x="55.7978%" y="261" width="0.2996%" height="15" fill="rgb(222,198,25)" fg:x="85100" fg:w="457"/><text x="56.0478%" y="271.50"></text></g><g><title>__pthread_rwlock_unlock (125 samples, 0.08%)</title><rect x="56.0974%" y="261" width="0.0820%" height="15" fill="rgb(211,99,13)" fg:x="85557" fg:w="125"/><text x="56.3474%" y="271.50"></text></g><g><title>ucs_pgtable_lookup (1,545 samples, 1.01%)</title><rect x="56.1800%" y="261" width="1.0130%" height="15" fill="rgb(232,111,31)" fg:x="85683" fg:w="1545"/><text x="56.4300%" y="271.50"></text></g><g><title>[libuct_ib.so.0.0.0] (44,273 samples, 29.03%)</title><rect x="28.1677%" y="293" width="29.0286%" height="15" fill="rgb(245,82,37)" fg:x="42960" fg:w="44273"/><text x="28.4177%" y="303.50">[libuct_ib.so.0.0.0]</text></g><g><title>ucs_rcache_get (2,295 samples, 1.50%)</title><rect x="55.6916%" y="277" width="1.5048%" height="15" fill="rgb(227,149,46)" fg:x="84938" fg:w="2295"/><text x="55.9416%" y="287.50"></text></g><g><title>ucp_request_memory_reg (46,775 samples, 30.67%)</title><rect x="26.7934%" y="341" width="30.6691%" height="15" fill="rgb(218,36,50)" fg:x="40864" fg:w="46775"/><text x="27.0434%" y="351.50">ucp_request_memory_reg</text></g><g><title>ucp_mem_rereg_mds (46,344 samples, 30.39%)</title><rect x="27.0760%" y="325" width="30.3865%" height="15" fill="rgb(226,80,48)" fg:x="41295" fg:w="46344"/><text x="27.3260%" y="335.50">ucp_mem_rereg_mds</text></g><g><title>uct_md_mem_reg (45,176 samples, 29.62%)</title><rect x="27.8419%" y="309" width="29.6207%" height="15" fill="rgb(238,224,15)" fg:x="42463" fg:w="45176"/><text x="28.0919%" y="319.50">uct_md_mem_reg</text></g><g><title>uct_md_mem_reg_v2 (406 samples, 0.27%)</title><rect x="57.1963%" y="293" width="0.2662%" height="15" fill="rgb(241,136,10)" fg:x="87233" fg:w="406"/><text x="57.4463%" y="303.50"></text></g><g><title>pthread_spin_lock (92 samples, 0.06%)</title><rect x="59.4263%" y="325" width="0.0603%" height="15" fill="rgb(208,32,45)" fg:x="90634" fg:w="92"/><text x="59.6763%" y="335.50"></text></g><g><title>ucp_rndv_receive (54,443 samples, 35.70%)</title><rect x="23.7931%" y="389" width="35.6968%" height="15" fill="rgb(207,135,9)" fg:x="36288" fg:w="54443"/><text x="24.0431%" y="399.50">ucp_rndv_receive</text></g><g><title>ucp_rndv_progress_rma_get_zcopy (52,029 samples, 34.11%)</title><rect x="25.3759%" y="373" width="34.1140%" height="15" fill="rgb(206,86,44)" fg:x="38702" fg:w="52029"/><text x="25.6259%" y="383.50">ucp_rndv_progress_rma_get_zcopy</text></g><g><title>[libucp.so.0.0.0] (51,934 samples, 34.05%)</title><rect x="25.4382%" y="357" width="34.0517%" height="15" fill="rgb(245,177,15)" fg:x="38797" fg:w="51934"/><text x="25.6882%" y="367.50">[libucp.so.0.0.0]</text></g><g><title>uct_rc_mlx5_ep_get_zcopy (3,091 samples, 2.03%)</title><rect x="57.4632%" y="341" width="2.0267%" height="15" fill="rgb(206,64,50)" fg:x="87640" fg:w="3091"/><text x="57.7132%" y="351.50">u..</text></g><g><title>ucp_tag_rndv_process_rts (54,701 samples, 35.87%)</title><rect x="23.6849%" y="405" width="35.8660%" height="15" fill="rgb(234,36,40)" fg:x="36123" fg:w="54701"/><text x="23.9349%" y="415.50">ucp_tag_rndv_process_rts</text></g><g><title>ucp_tag_rndv_matched (93 samples, 0.06%)</title><rect x="59.4899%" y="389" width="0.0610%" height="15" fill="rgb(213,64,8)" fg:x="90731" fg:w="93"/><text x="59.7399%" y="399.50"></text></g><g><title>uct_rc_ep_get_zcopy_completion_handler (21 samples, 0.01%)</title><rect x="59.5509%" y="405" width="0.0138%" height="15" fill="rgb(210,75,36)" fg:x="90824" fg:w="21"/><text x="59.8009%" y="415.50"></text></g><g><title>pthread_spin_lock (30 samples, 0.02%)</title><rect x="59.8551%" y="293" width="0.0197%" height="15" fill="rgb(229,88,21)" fg:x="91288" fg:w="30"/><text x="60.1051%" y="303.50"></text></g><g><title>[libucp.so.0.0.0] (330 samples, 0.22%)</title><rect x="59.6604%" y="373" width="0.2164%" height="15" fill="rgb(252,204,47)" fg:x="90991" fg:w="330"/><text x="59.9104%" y="383.50"></text></g><g><title>ucp_mem_rereg_mds (323 samples, 0.21%)</title><rect x="59.6650%" y="357" width="0.2118%" height="15" fill="rgb(208,77,27)" fg:x="90998" fg:w="323"/><text x="59.9150%" y="367.50"></text></g><g><title>uct_md_mem_dereg (289 samples, 0.19%)</title><rect x="59.6872%" y="341" width="0.1895%" height="15" fill="rgb(221,76,26)" fg:x="91032" fg:w="289"/><text x="59.9372%" y="351.50"></text></g><g><title>[libuct_ib.so.0.0.0] (278 samples, 0.18%)</title><rect x="59.6945%" y="325" width="0.1823%" height="15" fill="rgb(225,139,18)" fg:x="91043" fg:w="278"/><text x="59.9445%" y="335.50"></text></g><g><title>ucs_rcache_region_put (230 samples, 0.15%)</title><rect x="59.7259%" y="309" width="0.1508%" height="15" fill="rgb(230,137,11)" fg:x="91091" fg:w="230"/><text x="59.9759%" y="319.50"></text></g><g><title>pthread_spin_lock (23 samples, 0.02%)</title><rect x="60.1816%" y="309" width="0.0151%" height="15" fill="rgb(212,28,1)" fg:x="91786" fg:w="23"/><text x="60.4316%" y="319.50"></text></g><g><title>uct_rc_ep_send_op_completion_handler (966 samples, 0.63%)</title><rect x="59.5646%" y="405" width="0.6334%" height="15" fill="rgb(248,164,17)" fg:x="90845" fg:w="966"/><text x="59.8146%" y="415.50"></text></g><g><title>ucp_rndv_get_completion (848 samples, 0.56%)</title><rect x="59.6420%" y="389" width="0.5560%" height="15" fill="rgb(222,171,42)" fg:x="90963" fg:w="848"/><text x="59.8920%" y="399.50"></text></g><g><title>ucp_rndv_req_send_ack (481 samples, 0.32%)</title><rect x="59.8826%" y="373" width="0.3154%" height="15" fill="rgb(243,84,45)" fg:x="91330" fg:w="481"/><text x="60.1326%" y="383.50"></text></g><g><title>ucp_proto_progress_am_single (470 samples, 0.31%)</title><rect x="59.8898%" y="357" width="0.3082%" height="15" fill="rgb(252,49,23)" fg:x="91341" fg:w="470"/><text x="60.1398%" y="367.50"></text></g><g><title>ucp_do_am_single (464 samples, 0.30%)</title><rect x="59.8938%" y="341" width="0.3042%" height="15" fill="rgb(215,19,7)" fg:x="91347" fg:w="464"/><text x="60.1438%" y="351.50"></text></g><g><title>uct_rc_mlx5_ep_am_short (446 samples, 0.29%)</title><rect x="59.9056%" y="325" width="0.2924%" height="15" fill="rgb(238,81,41)" fg:x="91365" fg:w="446"/><text x="60.1556%" y="335.50"></text></g><g><title>[libuct_ib.so.0.0.0] (57,873 samples, 37.95%)</title><rect x="22.2765%" y="421" width="37.9458%" height="15" fill="rgb(210,199,37)" fg:x="33975" fg:w="57873"/><text x="22.5265%" y="431.50">[libuct_ib.so.0.0.0]</text></g><g><title>uct_rc_mlx5_iface_srq_post_recv (34 samples, 0.02%)</title><rect x="60.2000%" y="405" width="0.0223%" height="15" fill="rgb(244,192,49)" fg:x="91814" fg:w="34"/><text x="60.4500%" y="415.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::waitall (62,600 samples, 41.05%)</title><rect x="19.1817%" y="453" width="41.0451%" height="15" fill="rgb(226,211,11)" fg:x="29255" fg:w="62600"/><text x="19.4317%" y="463.50">&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::wai..</text></g><g><title>ucp_worker_progress (58,335 samples, 38.25%)</title><rect x="21.9782%" y="437" width="38.2487%" height="15" fill="rgb(236,162,54)" fg:x="33520" fg:w="58335"/><text x="22.2282%" y="447.50">ucp_worker_progress</text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecArray as mpicd_rust_benchmarks::datatype::ManualPack&gt;::manual_unpack (28,786 samples, 18.87%)</title><rect x="60.2269%" y="453" width="18.8742%" height="15" fill="rgb(220,229,9)" fg:x="91855" fg:w="28786"/><text x="60.4769%" y="463.50">&lt;mpicd_rust_benchmarks::datat..</text></g><g><title>__memcpy_thunderx2 (28,575 samples, 18.74%)</title><rect x="60.3652%" y="437" width="18.7359%" height="15" fill="rgb(250,87,22)" fg:x="92066" fg:w="28575"/><text x="60.6152%" y="447.50">__memcpy_thunderx2</text></g><g><title>malloc_consolidate (103 samples, 0.07%)</title><rect x="79.4892%" y="437" width="0.0675%" height="15" fill="rgb(239,43,17)" fg:x="121233" fg:w="103"/><text x="79.7392%" y="447.50"></text></g><g><title>[libucm.so.0.0.0] (36 samples, 0.02%)</title><rect x="79.5954%" y="373" width="0.0236%" height="15" fill="rgb(231,177,25)" fg:x="121395" fg:w="36"/><text x="79.8454%" y="383.50"></text></g><g><title>ucm_orig_sbrk (27 samples, 0.02%)</title><rect x="79.6014%" y="357" width="0.0177%" height="15" fill="rgb(219,179,1)" fg:x="121404" fg:w="27"/><text x="79.8514%" y="367.50"></text></g><g><title>ucm_orig_brk (16 samples, 0.01%)</title><rect x="79.6086%" y="341" width="0.0105%" height="15" fill="rgb(238,219,53)" fg:x="121415" fg:w="16"/><text x="79.8586%" y="351.50"></text></g><g><title>pthread_spin_lock (70 samples, 0.05%)</title><rect x="79.8131%" y="325" width="0.0459%" height="15" fill="rgb(232,167,36)" fg:x="121727" fg:w="70"/><text x="80.0631%" y="335.50"></text></g><g><title>pthread_spin_lock (70 samples, 0.05%)</title><rect x="96.1217%" y="101" width="0.0459%" height="15" fill="rgb(244,19,51)" fg:x="146600" fg:w="70"/><text x="96.3717%" y="111.50"></text></g><g><title>[libucs.so.0.0.0] (460 samples, 0.30%)</title><rect x="95.8712%" y="117" width="0.3016%" height="15" fill="rgb(224,6,22)" fg:x="146218" fg:w="460"/><text x="96.1212%" y="127.50"></text></g><g><title>pthread_spin_lock (66 samples, 0.04%)</title><rect x="96.1728%" y="117" width="0.0433%" height="15" fill="rgb(224,145,5)" fg:x="146678" fg:w="66"/><text x="96.4228%" y="127.50"></text></g><g><title>[libucs.so.0.0.0] (1,622 samples, 1.06%)</title><rect x="95.1572%" y="133" width="1.0635%" height="15" fill="rgb(234,130,49)" fg:x="145129" fg:w="1622"/><text x="95.4072%" y="143.50"></text></g><g><title>pthread_spin_lock (66 samples, 0.04%)</title><rect x="96.2207%" y="133" width="0.0433%" height="15" fill="rgb(254,6,2)" fg:x="146751" fg:w="66"/><text x="96.4707%" y="143.50"></text></g><g><title>[libucs.so.0.0.0] (3,234 samples, 2.12%)</title><rect x="94.1475%" y="149" width="2.1204%" height="15" fill="rgb(208,96,46)" fg:x="143589" fg:w="3234"/><text x="94.3975%" y="159.50">[..</text></g><g><title>[libucs.so.0.0.0] (4,769 samples, 3.13%)</title><rect x="93.1462%" y="165" width="3.1269%" height="15" fill="rgb(239,3,39)" fg:x="142062" fg:w="4769"/><text x="93.3962%" y="175.50">[li..</text></g><g><title>[libucs.so.0.0.0] (25,357 samples, 16.63%)</title><rect x="79.6479%" y="341" width="16.6259%" height="15" fill="rgb(233,210,1)" fg:x="121475" fg:w="25357"/><text x="79.8979%" y="351.50">[libucs.so.0.0.0]</text></g><g><title>ucs_pgtable_remove (25,035 samples, 16.41%)</title><rect x="79.8590%" y="325" width="16.4148%" height="15" fill="rgb(244,137,37)" fg:x="121797" fg:w="25035"/><text x="80.1090%" y="335.50">ucs_pgtable_remove</text></g><g><title>[libucs.so.0.0.0] (22,871 samples, 15.00%)</title><rect x="81.2779%" y="309" width="14.9959%" height="15" fill="rgb(240,136,2)" fg:x="123961" fg:w="22871"/><text x="81.5279%" y="319.50">[libucs.so.0.0.0]</text></g><g><title>[libucs.so.0.0.0] (17,427 samples, 11.43%)</title><rect x="84.8474%" y="293" width="11.4264%" height="15" fill="rgb(239,18,37)" fg:x="129405" fg:w="17427"/><text x="85.0974%" y="303.50">[libucs.so.0.0.0]</text></g><g><title>[libucs.so.0.0.0] (14,962 samples, 9.81%)</title><rect x="86.4636%" y="277" width="9.8102%" height="15" fill="rgb(218,185,22)" fg:x="131870" fg:w="14962"/><text x="86.7136%" y="287.50">[libucs.so.0.0..</text></g><g><title>[libucs.so.0.0.0] (13,787 samples, 9.04%)</title><rect x="87.2340%" y="261" width="9.0398%" height="15" fill="rgb(225,218,4)" fg:x="133045" fg:w="13787"/><text x="87.4840%" y="271.50">[libucs.so.0...</text></g><g><title>[libucs.so.0.0.0] (12,260 samples, 8.04%)</title><rect x="88.2353%" y="245" width="8.0386%" height="15" fill="rgb(230,182,32)" fg:x="134572" fg:w="12260"/><text x="88.4853%" y="255.50">[libucs.so...</text></g><g><title>[libucs.so.0.0.0] (10,644 samples, 6.98%)</title><rect x="89.2948%" y="229" width="6.9790%" height="15" fill="rgb(242,56,43)" fg:x="136188" fg:w="10644"/><text x="89.5448%" y="239.50">[libucs.s..</text></g><g><title>[libucs.so.0.0.0] (9,048 samples, 5.93%)</title><rect x="90.3413%" y="213" width="5.9325%" height="15" fill="rgb(233,99,24)" fg:x="137784" fg:w="9048"/><text x="90.5913%" y="223.50">[libucs...</text></g><g><title>[libucs.so.0.0.0] (7,702 samples, 5.05%)</title><rect x="91.2238%" y="197" width="5.0500%" height="15" fill="rgb(234,209,42)" fg:x="139130" fg:w="7702"/><text x="91.4738%" y="207.50">[libuc..</text></g><g><title>[libucs.so.0.0.0] (6,086 samples, 3.99%)</title><rect x="92.2834%" y="181" width="3.9904%" height="15" fill="rgb(227,7,12)" fg:x="140746" fg:w="6086"/><text x="92.5334%" y="191.50">[lib..</text></g><g><title>[libucs.so.0.0.0] (27,357 samples, 17.94%)</title><rect x="79.6250%" y="357" width="17.9373%" height="15" fill="rgb(245,203,43)" fg:x="121440" fg:w="27357"/><text x="79.8750%" y="367.50">[libucs.so.0.0.0]</text></g><g><title>ucs_pgtable_search_range (1,956 samples, 1.28%)</title><rect x="96.2797%" y="341" width="1.2825%" height="15" fill="rgb(238,205,33)" fg:x="146841" fg:w="1956"/><text x="96.5297%" y="351.50"></text></g><g><title>[libucs.so.0.0.0] (1,948 samples, 1.28%)</title><rect x="96.2850%" y="325" width="1.2773%" height="15" fill="rgb(231,56,7)" fg:x="146849" fg:w="1948"/><text x="96.5350%" y="335.50"></text></g><g><title>[libucs.so.0.0.0] (1,782 samples, 1.17%)</title><rect x="96.3938%" y="309" width="1.1684%" height="15" fill="rgb(244,186,29)" fg:x="147015" fg:w="1782"/><text x="96.6438%" y="319.50"></text></g><g><title>[libucs.so.0.0.0] (1,422 samples, 0.93%)</title><rect x="96.6298%" y="293" width="0.9324%" height="15" fill="rgb(234,111,31)" fg:x="147375" fg:w="1422"/><text x="96.8798%" y="303.50"></text></g><g><title>[libucs.so.0.0.0] (835 samples, 0.55%)</title><rect x="97.0147%" y="277" width="0.5475%" height="15" fill="rgb(241,149,10)" fg:x="147962" fg:w="835"/><text x="97.2647%" y="287.50"></text></g><g><title>[libucs.so.0.0.0] (301 samples, 0.20%)</title><rect x="97.3648%" y="261" width="0.1974%" height="15" fill="rgb(249,206,44)" fg:x="148496" fg:w="301"/><text x="97.6148%" y="271.50"></text></g><g><title>[libucs.so.0.0.0] (27,377 samples, 17.95%)</title><rect x="79.6191%" y="373" width="17.9504%" height="15" fill="rgb(251,153,30)" fg:x="121431" fg:w="27377"/><text x="79.8691%" y="383.50">[libucs.so.0.0.0]</text></g><g><title>ucm_event_dispatch (27,450 samples, 18.00%)</title><rect x="79.5791%" y="389" width="17.9982%" height="15" fill="rgb(239,152,38)" fg:x="121370" fg:w="27450"/><text x="79.8291%" y="399.50">ucm_event_dispatch</text></g><g><title>systrim.isra.1.constprop.9 (27,492 samples, 18.03%)</title><rect x="79.5568%" y="437" width="18.0258%" height="15" fill="rgb(249,139,47)" fg:x="121336" fg:w="27492"/><text x="79.8068%" y="447.50">systrim.isra.1.constprop.9</text></g><g><title>__default_morecore (27,481 samples, 18.02%)</title><rect x="79.5640%" y="421" width="18.0186%" height="15" fill="rgb(244,64,35)" fg:x="121347" fg:w="27481"/><text x="79.8140%" y="431.50">__default_morecore</text></g><g><title>ucm_sbrk (27,471 samples, 18.01%)</title><rect x="79.5705%" y="405" width="18.0120%" height="15" fill="rgb(216,46,15)" fg:x="121357" fg:w="27471"/><text x="79.8205%" y="415.50">ucm_sbrk</text></g><g><title>_int_free (28,197 samples, 18.49%)</title><rect x="79.1057%" y="453" width="18.4880%" height="15" fill="rgb(250,74,19)" fg:x="120648" fg:w="28197"/><text x="79.3557%" y="463.50">_int_free</text></g><g><title>unlink_chunk.isra.2 (17 samples, 0.01%)</title><rect x="97.5825%" y="437" width="0.0111%" height="15" fill="rgb(249,42,33)" fg:x="148828" fg:w="17"/><text x="97.8325%" y="447.50"></text></g><g><title>__libc_realloc (66 samples, 0.04%)</title><rect x="97.5983%" y="421" width="0.0433%" height="15" fill="rgb(242,149,17)" fg:x="148852" fg:w="66"/><text x="97.8483%" y="431.50"></text></g><g><title>_int_realloc (50 samples, 0.03%)</title><rect x="97.6088%" y="405" width="0.0328%" height="15" fill="rgb(244,29,21)" fg:x="148868" fg:w="50"/><text x="97.8588%" y="415.50"></text></g><g><title>_int_malloc (27 samples, 0.02%)</title><rect x="97.6238%" y="389" width="0.0177%" height="15" fill="rgb(220,130,37)" fg:x="148891" fg:w="27"/><text x="97.8738%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (76 samples, 0.05%)</title><rect x="97.5937%" y="453" width="0.0498%" height="15" fill="rgb(211,67,2)" fg:x="148845" fg:w="76"/><text x="97.8437%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (75 samples, 0.05%)</title><rect x="97.5943%" y="437" width="0.0492%" height="15" fill="rgb(235,68,52)" fg:x="148846" fg:w="75"/><text x="97.8443%" y="447.50"></text></g><g><title>free (46 samples, 0.03%)</title><rect x="97.6435%" y="453" width="0.0302%" height="15" fill="rgb(246,142,3)" fg:x="148921" fg:w="46"/><text x="97.8935%" y="463.50"></text></g><g><title>__libc_malloc (150 samples, 0.10%)</title><rect x="97.6874%" y="437" width="0.0984%" height="15" fill="rgb(241,25,7)" fg:x="148988" fg:w="150"/><text x="97.9374%" y="447.50"></text></g><g><title>_int_malloc (90 samples, 0.06%)</title><rect x="97.7268%" y="421" width="0.0590%" height="15" fill="rgb(242,119,39)" fg:x="149048" fg:w="90"/><text x="97.9768%" y="431.50"></text></g><g><title>unlink_chunk.isra.2 (18 samples, 0.01%)</title><rect x="97.7740%" y="405" width="0.0118%" height="15" fill="rgb(241,98,45)" fg:x="149120" fg:w="18"/><text x="98.0240%" y="415.50"></text></g><g><title>&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::body (144,593 samples, 94.81%)</title><rect x="2.9813%" y="469" width="94.8058%" height="15" fill="rgb(254,28,30)" fg:x="4547" fg:w="144593"/><text x="3.2313%" y="479.50">&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::body</text></g><g><title>mpicd::Handle::add_message (173 samples, 0.11%)</title><rect x="97.6737%" y="453" width="0.1134%" height="15" fill="rgb(241,142,54)" fg:x="148967" fg:w="173"/><text x="97.9237%" y="463.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (16 samples, 0.01%)</title><rect x="97.7891%" y="469" width="0.0105%" height="15" fill="rgb(222,85,15)" fg:x="149143" fg:w="16"/><text x="98.0391%" y="479.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (16 samples, 0.01%)</title><rect x="97.7891%" y="453" width="0.0105%" height="15" fill="rgb(210,85,47)" fg:x="149143" fg:w="16"/><text x="98.0391%" y="463.50"></text></g><g><title>__libc_start_main (144,708 samples, 94.88%)</title><rect x="2.9204%" y="581" width="94.8812%" height="15" fill="rgb(224,206,25)" fg:x="4454" fg:w="144708"/><text x="3.1704%" y="591.50">__libc_start_main</text></g><g><title>main (144,708 samples, 94.88%)</title><rect x="2.9204%" y="565" width="94.8812%" height="15" fill="rgb(243,201,19)" fg:x="4454" fg:w="144708"/><text x="3.1704%" y="575.50">main</text></g><g><title>std::rt::lang_start_internal (144,708 samples, 94.88%)</title><rect x="2.9204%" y="549" width="94.8812%" height="15" fill="rgb(236,59,4)" fg:x="4454" fg:w="144708"/><text x="3.1704%" y="559.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (144,708 samples, 94.88%)</title><rect x="2.9204%" y="533" width="94.8812%" height="15" fill="rgb(254,179,45)" fg:x="4454" fg:w="144708"/><text x="3.1704%" y="543.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (144,708 samples, 94.88%)</title><rect x="2.9204%" y="517" width="94.8812%" height="15" fill="rgb(226,14,10)" fg:x="4454" fg:w="144708"/><text x="3.1704%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mpicd_bw::main (144,708 samples, 94.88%)</title><rect x="2.9204%" y="501" width="94.8812%" height="15" fill="rgb(244,27,41)" fg:x="4454" fg:w="144708"/><text x="3.1704%" y="511.50">mpicd_bw::main</text></g><g><title>mpicd_rust_benchmarks::bw::bw (144,636 samples, 94.83%)</title><rect x="2.9676%" y="485" width="94.8340%" height="15" fill="rgb(235,35,32)" fg:x="4526" fg:w="144636"/><text x="3.2176%" y="495.50">mpicd_rust_benchmarks::bw::bw</text></g><g><title>_start (144,721 samples, 94.89%)</title><rect x="2.9191%" y="613" width="94.8897%" height="15" fill="rgb(218,68,31)" fg:x="4452" fg:w="144721"/><text x="3.1691%" y="623.50">_start</text></g><g><title>_start (144,719 samples, 94.89%)</title><rect x="2.9204%" y="597" width="94.8884%" height="15" fill="rgb(207,120,37)" fg:x="4454" fg:w="144719"/><text x="3.1704%" y="607.50">_start</text></g><g><title>execute_ioctl (36 samples, 0.02%)</title><rect x="97.8153%" y="613" width="0.0236%" height="15" fill="rgb(227,98,0)" fg:x="149183" fg:w="36"/><text x="98.0653%" y="623.50"></text></g><g><title>ioctl@plt (36 samples, 0.02%)</title><rect x="97.8153%" y="597" width="0.0236%" height="15" fill="rgb(207,7,3)" fg:x="149183" fg:w="36"/><text x="98.0653%" y="607.50"></text></g><g><title>ibv_cmd_reg_mr (81 samples, 0.05%)</title><rect x="97.8481%" y="613" width="0.0531%" height="15" fill="rgb(206,98,19)" fg:x="149233" fg:w="81"/><text x="98.0981%" y="623.50"></text></g><g><title>ucm_event_dispatch (81 samples, 0.05%)</title><rect x="97.8481%" y="597" width="0.0531%" height="15" fill="rgb(217,5,26)" fg:x="149233" fg:w="81"/><text x="98.0981%" y="607.50"></text></g><g><title>ucm_orig_madvise_syscall (81 samples, 0.05%)</title><rect x="97.8481%" y="581" width="0.0531%" height="15" fill="rgb(235,190,38)" fg:x="149233" fg:w="81"/><text x="98.0981%" y="591.50"></text></g><g><title>syscall@plt (81 samples, 0.05%)</title><rect x="97.8481%" y="565" width="0.0531%" height="15" fill="rgb(247,86,24)" fg:x="149233" fg:w="81"/><text x="98.0981%" y="575.50"></text></g><g><title>ibv_dereg_mr (59 samples, 0.04%)</title><rect x="97.9012%" y="613" width="0.0387%" height="15" fill="rgb(205,101,16)" fg:x="149314" fg:w="59"/><text x="98.1512%" y="623.50"></text></g><g><title>ibv_dofork_range@plt (59 samples, 0.04%)</title><rect x="97.9012%" y="597" width="0.0387%" height="15" fill="rgb(246,168,33)" fg:x="149314" fg:w="59"/><text x="98.1512%" y="607.50"></text></g><g><title>malloc@plt (131 samples, 0.09%)</title><rect x="97.9458%" y="613" width="0.0859%" height="15" fill="rgb(231,114,1)" fg:x="149382" fg:w="131"/><text x="98.1958%" y="623.50"></text></g><g><title>memcpy@plt (92 samples, 0.06%)</title><rect x="98.0317%" y="613" width="0.0603%" height="15" fill="rgb(207,184,53)" fg:x="149513" fg:w="92"/><text x="98.2817%" y="623.50"></text></g><g><title>ucm_event_enter (93 samples, 0.06%)</title><rect x="98.1012%" y="613" width="0.0610%" height="15" fill="rgb(224,95,51)" fg:x="149619" fg:w="93"/><text x="98.3512%" y="623.50"></text></g><g><title>pthread_rwlock_rdlock@plt (93 samples, 0.06%)</title><rect x="98.1012%" y="597" width="0.0610%" height="15" fill="rgb(212,188,45)" fg:x="149619" fg:w="93"/><text x="98.3512%" y="607.50"></text></g><g><title>syscall@plt (19 samples, 0.01%)</title><rect x="98.1667%" y="597" width="0.0125%" height="15" fill="rgb(223,154,38)" fg:x="149719" fg:w="19"/><text x="98.4167%" y="607.50"></text></g><g><title>ucm_orig_brk (51 samples, 0.03%)</title><rect x="98.1667%" y="613" width="0.0334%" height="15" fill="rgb(251,22,52)" fg:x="149719" fg:w="51"/><text x="98.4167%" y="623.50"></text></g><g><title>ucm_brk_syscall@plt (32 samples, 0.02%)</title><rect x="98.1792%" y="597" width="0.0210%" height="15" fill="rgb(229,209,22)" fg:x="149738" fg:w="32"/><text x="98.4292%" y="607.50"></text></g><g><title>ucm_override_madvise (35 samples, 0.02%)</title><rect x="98.2002%" y="613" width="0.0229%" height="15" fill="rgb(234,138,34)" fg:x="149770" fg:w="35"/><text x="98.4502%" y="623.50"></text></g><g><title>pthread_self@plt (35 samples, 0.02%)</title><rect x="98.2002%" y="597" width="0.0229%" height="15" fill="rgb(212,95,11)" fg:x="149770" fg:w="35"/><text x="98.4502%" y="607.50"></text></g><g><title>ucp_rkey_resolve_inner@plt (102 samples, 0.07%)</title><rect x="98.2251%" y="597" width="0.0669%" height="15" fill="rgb(240,179,47)" fg:x="149808" fg:w="102"/><text x="98.4751%" y="607.50"></text></g><g><title>ucs_log_indent@plt (126 samples, 0.08%)</title><rect x="98.2920%" y="597" width="0.0826%" height="15" fill="rgb(240,163,11)" fg:x="149910" fg:w="126"/><text x="98.5420%" y="607.50"></text></g><g><title>ucp_ep_rkey_unpack_internal (236 samples, 0.15%)</title><rect x="98.2251%" y="613" width="0.1547%" height="15" fill="rgb(236,37,12)" fg:x="149808" fg:w="236"/><text x="98.4751%" y="623.50"></text></g><g><title>ucp_mem_rereg_mds (55 samples, 0.04%)</title><rect x="98.3798%" y="613" width="0.0361%" height="15" fill="rgb(232,164,16)" fg:x="150044" fg:w="55"/><text x="98.6298%" y="623.50"></text></g><g><title>uct_md_mem_reg (55 samples, 0.04%)</title><rect x="98.3798%" y="597" width="0.0361%" height="15" fill="rgb(244,205,15)" fg:x="150044" fg:w="55"/><text x="98.6298%" y="607.50"></text></g><g><title>uct_md_mem_reg_v2@plt (55 samples, 0.04%)</title><rect x="98.3798%" y="581" width="0.0361%" height="15" fill="rgb(223,117,47)" fg:x="150044" fg:w="55"/><text x="98.6298%" y="591.50"></text></g><g><title>ucp_request_memory_reg (183 samples, 0.12%)</title><rect x="98.4211%" y="613" width="0.1200%" height="15" fill="rgb(244,107,35)" fg:x="150107" fg:w="183"/><text x="98.6711%" y="623.50"></text></g><g><title>ucp_mem_rereg_mds@plt (183 samples, 0.12%)</title><rect x="98.4211%" y="597" width="0.1200%" height="15" fill="rgb(205,140,8)" fg:x="150107" fg:w="183"/><text x="98.6711%" y="607.50"></text></g><g><title>ucp_rkey_resolve_inner (178 samples, 0.12%)</title><rect x="98.5451%" y="613" width="0.1167%" height="15" fill="rgb(228,84,46)" fg:x="150296" fg:w="178"/><text x="98.7951%" y="623.50"></text></g><g><title>ucp_rkey_find_rma_lane@plt (178 samples, 0.12%)</title><rect x="98.5451%" y="597" width="0.1167%" height="15" fill="rgb(254,188,9)" fg:x="150296" fg:w="178"/><text x="98.7951%" y="607.50"></text></g><g><title>pthread_self@plt (109 samples, 0.07%)</title><rect x="98.6696%" y="597" width="0.0715%" height="15" fill="rgb(206,112,54)" fg:x="150486" fg:w="109"/><text x="98.9196%" y="607.50"></text></g><g><title>pthread_spin_lock@plt (26 samples, 0.02%)</title><rect x="98.7411%" y="597" width="0.0170%" height="15" fill="rgb(216,84,49)" fg:x="150595" fg:w="26"/><text x="98.9911%" y="607.50"></text></g><g><title>ucp_rndv_receive (200 samples, 0.13%)</title><rect x="98.6696%" y="613" width="0.1311%" height="15" fill="rgb(214,194,35)" fg:x="150486" fg:w="200"/><text x="98.9196%" y="623.50"></text></g><g><title>ucp_ep_rkey_unpack@plt (64 samples, 0.04%)</title><rect x="98.7588%" y="597" width="0.0420%" height="15" fill="rgb(249,28,3)" fg:x="150622" fg:w="64"/><text x="99.0088%" y="607.50"></text></g><g><title>ucp_rndv_receive@plt (43 samples, 0.03%)</title><rect x="98.8054%" y="597" width="0.0282%" height="15" fill="rgb(222,56,52)" fg:x="150693" fg:w="43"/><text x="99.0554%" y="607.50"></text></g><g><title>ucp_tag_rndv_process_rts (171 samples, 0.11%)</title><rect x="98.8054%" y="613" width="0.1121%" height="15" fill="rgb(245,217,50)" fg:x="150693" fg:w="171"/><text x="99.0554%" y="623.50"></text></g><g><title>ucp_tag_rndv_matched@plt (128 samples, 0.08%)</title><rect x="98.8336%" y="597" width="0.0839%" height="15" fill="rgb(213,201,24)" fg:x="150736" fg:w="128"/><text x="99.0836%" y="607.50"></text></g><g><title>ucp_worker_progress@plt (150 samples, 0.10%)</title><rect x="98.9208%" y="613" width="0.0984%" height="15" fill="rgb(248,116,28)" fg:x="150869" fg:w="150"/><text x="99.1708%" y="623.50"></text></g><g><title>ucs_mem_region_destroy_internal (56 samples, 0.04%)</title><rect x="99.0204%" y="613" width="0.0367%" height="15" fill="rgb(219,72,43)" fg:x="151021" fg:w="56"/><text x="99.2704%" y="623.50"></text></g><g><title>pthread_spin_unlock@plt (51 samples, 0.03%)</title><rect x="99.0237%" y="597" width="0.0334%" height="15" fill="rgb(209,138,14)" fg:x="151026" fg:w="51"/><text x="99.2737%" y="607.50"></text></g><g><title>posix_memalign@plt (267 samples, 0.18%)</title><rect x="99.0571%" y="597" width="0.1751%" height="15" fill="rgb(222,18,33)" fg:x="151077" fg:w="267"/><text x="99.3071%" y="607.50"></text></g><g><title>ucs_posix_memalign (410 samples, 0.27%)</title><rect x="99.0571%" y="613" width="0.2688%" height="15" fill="rgb(213,199,7)" fg:x="151077" fg:w="410"/><text x="99.3071%" y="623.50"></text></g><g><title>ucs_memtrack_is_enabled@plt (143 samples, 0.09%)</title><rect x="99.2322%" y="597" width="0.0938%" height="15" fill="rgb(250,110,10)" fg:x="151344" fg:w="143"/><text x="99.4822%" y="607.50"></text></g><g><title>memset@plt (24 samples, 0.02%)</title><rect x="99.3260%" y="597" width="0.0157%" height="15" fill="rgb(248,123,6)" fg:x="151487" fg:w="24"/><text x="99.5760%" y="607.50"></text></g><g><title>pthread_rwlock_unlock@plt (84 samples, 0.06%)</title><rect x="99.3417%" y="597" width="0.0551%" height="15" fill="rgb(206,91,31)" fg:x="151511" fg:w="84"/><text x="99.5917%" y="607.50"></text></g><g><title>pthread_spin_lock@plt (56 samples, 0.04%)</title><rect x="99.3968%" y="597" width="0.0367%" height="15" fill="rgb(211,154,13)" fg:x="151595" fg:w="56"/><text x="99.6468%" y="607.50"></text></g><g><title>pthread_spin_unlock@plt (28 samples, 0.02%)</title><rect x="99.4335%" y="597" width="0.0184%" height="15" fill="rgb(225,148,7)" fg:x="151651" fg:w="28"/><text x="99.6835%" y="607.50"></text></g><g><title>ucs_pgtable_insert@plt (48 samples, 0.03%)</title><rect x="99.4564%" y="597" width="0.0315%" height="15" fill="rgb(220,160,43)" fg:x="151686" fg:w="48"/><text x="99.7064%" y="607.50"></text></g><g><title>ucs_pgtable_search_range@plt (86 samples, 0.06%)</title><rect x="99.4879%" y="597" width="0.0564%" height="15" fill="rgb(213,52,39)" fg:x="151734" fg:w="86"/><text x="99.7379%" y="607.50"></text></g><g><title>ucs_rcache_create_region (421 samples, 0.28%)</title><rect x="99.3260%" y="613" width="0.2760%" height="15" fill="rgb(243,137,7)" fg:x="151487" fg:w="421"/><text x="99.5760%" y="623.50"></text></g><g><title>ucs_posix_memalign@plt (88 samples, 0.06%)</title><rect x="99.5443%" y="597" width="0.0577%" height="15" fill="rgb(230,79,13)" fg:x="151820" fg:w="88"/><text x="99.7943%" y="607.50"></text></g><g><title>pthread_rwlock_rdlock@plt (283 samples, 0.19%)</title><rect x="99.6020%" y="597" width="0.1856%" height="15" fill="rgb(247,105,23)" fg:x="151908" fg:w="283"/><text x="99.8520%" y="607.50"></text></g><g><title>ucs_pgtable_lookup@plt (212 samples, 0.14%)</title><rect x="99.7928%" y="597" width="0.1390%" height="15" fill="rgb(223,179,41)" fg:x="152199" fg:w="212"/><text x="100.0428%" y="607.50"></text></g><g><title>ucs_rcache_get (504 samples, 0.33%)</title><rect x="99.6020%" y="613" width="0.3305%" height="15" fill="rgb(218,9,34)" fg:x="151908" fg:w="504"/><text x="99.8520%" y="623.50"></text></g><g><title>uct_ib_reg_mr (37 samples, 0.02%)</title><rect x="99.9390%" y="613" width="0.0243%" height="15" fill="rgb(222,106,8)" fg:x="152422" fg:w="37"/><text x="100.1890%" y="623.50"></text></g><g><title>ibv_reg_mr_iova2@plt (37 samples, 0.02%)</title><rect x="99.9390%" y="597" width="0.0243%" height="15" fill="rgb(211,220,0)" fg:x="152422" fg:w="37"/><text x="100.1890%" y="607.50"></text></g><g><title>uct_md_mem_reg (54 samples, 0.04%)</title><rect x="99.9633%" y="613" width="0.0354%" height="15" fill="rgb(229,52,16)" fg:x="152459" fg:w="54"/><text x="100.2133%" y="623.50"></text></g><g><title>uct_md_mem_reg_v2@plt (54 samples, 0.04%)</title><rect x="99.9633%" y="597" width="0.0354%" height="15" fill="rgb(212,155,18)" fg:x="152459" fg:w="54"/><text x="100.2133%" y="607.50"></text></g><g><title>all (152,515 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(242,21,14)" fg:x="0" fg:w="152515"/><text x="0.2500%" y="655.50"></text></g><g><title>mpicd_bw (152,404 samples, 99.93%)</title><rect x="0.0728%" y="629" width="99.9272%" height="15" fill="rgb(222,19,48)" fg:x="111" fg:w="152404"/><text x="0.3228%" y="639.50">mpicd_bw</text></g></svg></svg>