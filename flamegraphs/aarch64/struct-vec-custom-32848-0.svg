<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="8197"><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="0.0000%" y="613" width="0.0122%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="0.0000%" y="597" width="0.0122%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>ucs_async_pipe_drain@plt (1 samples, 0.01%)</title><rect x="0.0000%" y="581" width="0.0122%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>pthread_self@plt (1 samples, 0.01%)</title><rect x="0.0122%" y="613" width="0.0122%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2622%" y="623.50"></text></g><g><title>ucs_async_dispatch_timerq@plt (1 samples, 0.01%)</title><rect x="0.0244%" y="613" width="0.0122%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2744%" y="623.50"></text></g><g><title>[libucs.so.0.0.0] (6 samples, 0.07%)</title><rect x="0.0000%" y="629" width="0.0732%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="639.50"></text></g><g><title>ucs_event_set_wait@plt (3 samples, 0.04%)</title><rect x="0.0366%" y="613" width="0.0366%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="3"/><text x="0.2866%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0732%" y="629" width="0.0122%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="1"/><text x="0.3232%" y="639.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="0.0732%" y="613" width="0.0122%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="0.3232%" y="623.50"></text></g><g><title>pthread_rwlock_rdlock@plt (1 samples, 0.01%)</title><rect x="0.0732%" y="597" width="0.0122%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.3232%" y="607.50"></text></g><g><title>start_thread (1 samples, 0.01%)</title><rect x="0.0854%" y="629" width="0.0122%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="0.3354%" y="639.50"></text></g><g><title>__ctype_init@plt (1 samples, 0.01%)</title><rect x="0.0854%" y="613" width="0.0122%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="0.3354%" y="623.50"></text></g><g><title>pthread_self@GLIBC_2.17 (2 samples, 0.02%)</title><rect x="0.3050%" y="565" width="0.0244%" height="15" fill="rgb(216,20,37)" fg:x="25" fg:w="2"/><text x="0.5550%" y="575.50"></text></g><g><title>pthread_spin_unlock (1 samples, 0.01%)</title><rect x="0.3294%" y="565" width="0.0122%" height="15" fill="rgb(206,188,39)" fg:x="27" fg:w="1"/><text x="0.5794%" y="575.50"></text></g><g><title>[libucs.so.0.0.0] (22 samples, 0.27%)</title><rect x="0.5246%" y="533" width="0.2684%" height="15" fill="rgb(217,207,13)" fg:x="43" fg:w="22"/><text x="0.7746%" y="543.50"></text></g><g><title>[libuct_ib.so.0.0.0] (19 samples, 0.23%)</title><rect x="0.5612%" y="517" width="0.2318%" height="15" fill="rgb(231,73,38)" fg:x="46" fg:w="19"/><text x="0.8112%" y="527.50"></text></g><g><title>[libuct_ib.so.0.0.0] (12 samples, 0.15%)</title><rect x="0.6466%" y="501" width="0.1464%" height="15" fill="rgb(225,20,46)" fg:x="53" fg:w="12"/><text x="0.8966%" y="511.50"></text></g><g><title>ucs_async_dispatch_timerq (49 samples, 0.60%)</title><rect x="0.2074%" y="581" width="0.5978%" height="15" fill="rgb(210,31,41)" fg:x="17" fg:w="49"/><text x="0.4574%" y="591.50"></text></g><g><title>ucs_async_dispatch_handlers (38 samples, 0.46%)</title><rect x="0.3416%" y="565" width="0.4636%" height="15" fill="rgb(221,200,47)" fg:x="28" fg:w="38"/><text x="0.5916%" y="575.50"></text></g><g><title>[libucs.so.0.0.0] (35 samples, 0.43%)</title><rect x="0.3782%" y="549" width="0.4270%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="35"/><text x="0.6282%" y="559.50"></text></g><g><title>__pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="0.7930%" y="533" width="0.0122%" height="15" fill="rgb(249,33,26)" fg:x="65" fg:w="1"/><text x="1.0430%" y="543.50"></text></g><g><title>[libucs.so.0.0.0] (2 samples, 0.02%)</title><rect x="1.1224%" y="469" width="0.0244%" height="15" fill="rgb(235,183,28)" fg:x="92" fg:w="2"/><text x="1.3724%" y="479.50"></text></g><g><title>ucs_async_modify_handler (3 samples, 0.04%)</title><rect x="1.1224%" y="485" width="0.0366%" height="15" fill="rgb(221,5,38)" fg:x="92" fg:w="3"/><text x="1.3724%" y="495.50"></text></g><g><title>ucs_event_set_mod (1 samples, 0.01%)</title><rect x="1.1468%" y="469" width="0.0122%" height="15" fill="rgb(247,18,42)" fg:x="94" fg:w="1"/><text x="1.3968%" y="479.50"></text></g><g><title>[libucp.so.0.0.0] (4 samples, 0.05%)</title><rect x="1.1224%" y="501" width="0.0488%" height="15" fill="rgb(241,131,45)" fg:x="92" fg:w="4"/><text x="1.3724%" y="511.50"></text></g><g><title>uct_worker_progress_register_safe (1 samples, 0.01%)</title><rect x="1.1590%" y="485" width="0.0122%" height="15" fill="rgb(249,31,29)" fg:x="95" fg:w="1"/><text x="1.4090%" y="495.50"></text></g><g><title>ucs_callbackq_add_safe (1 samples, 0.01%)</title><rect x="1.1590%" y="469" width="0.0122%" height="15" fill="rgb(225,111,53)" fg:x="95" fg:w="1"/><text x="1.4090%" y="479.50"></text></g><g><title>pthread_spin_lock (1 samples, 0.01%)</title><rect x="1.1590%" y="453" width="0.0122%" height="15" fill="rgb(238,160,17)" fg:x="95" fg:w="1"/><text x="1.4090%" y="463.50"></text></g><g><title>[libuct_ib.so.0.0.0] (11 samples, 0.13%)</title><rect x="1.1712%" y="485" width="0.1342%" height="15" fill="rgb(214,148,48)" fg:x="96" fg:w="11"/><text x="1.4212%" y="495.50"></text></g><g><title>[libuct_ib.so.0.0.0] (11 samples, 0.13%)</title><rect x="1.1712%" y="469" width="0.1342%" height="15" fill="rgb(232,36,49)" fg:x="96" fg:w="11"/><text x="1.4212%" y="479.50"></text></g><g><title>ucs_mpool_get_grow (11 samples, 0.13%)</title><rect x="1.1712%" y="453" width="0.1342%" height="15" fill="rgb(209,103,24)" fg:x="96" fg:w="11"/><text x="1.4212%" y="463.50"></text></g><g><title>ucs_mpool_grow (11 samples, 0.13%)</title><rect x="1.1712%" y="437" width="0.1342%" height="15" fill="rgb(229,88,8)" fg:x="96" fg:w="11"/><text x="1.4212%" y="447.50"></text></g><g><title>uct_iface_mp_chunk_alloc (11 samples, 0.13%)</title><rect x="1.1712%" y="421" width="0.1342%" height="15" fill="rgb(213,181,19)" fg:x="96" fg:w="11"/><text x="1.4212%" y="431.50"></text></g><g><title>uct_iface_mem_alloc (11 samples, 0.13%)</title><rect x="1.1712%" y="405" width="0.1342%" height="15" fill="rgb(254,191,54)" fg:x="96" fg:w="11"/><text x="1.4212%" y="415.50"></text></g><g><title>uct_md_mem_reg (11 samples, 0.13%)</title><rect x="1.1712%" y="389" width="0.1342%" height="15" fill="rgb(241,83,37)" fg:x="96" fg:w="11"/><text x="1.4212%" y="399.50"></text></g><g><title>[libuct_ib.so.0.0.0] (11 samples, 0.13%)</title><rect x="1.1712%" y="373" width="0.1342%" height="15" fill="rgb(233,36,39)" fg:x="96" fg:w="11"/><text x="1.4212%" y="383.50"></text></g><g><title>ucs_rcache_create_region (11 samples, 0.13%)</title><rect x="1.1712%" y="357" width="0.1342%" height="15" fill="rgb(226,3,54)" fg:x="96" fg:w="11"/><text x="1.4212%" y="367.50"></text></g><g><title>[libuct_ib.so.0.0.0] (9 samples, 0.11%)</title><rect x="1.1956%" y="341" width="0.1098%" height="15" fill="rgb(245,192,40)" fg:x="98" fg:w="9"/><text x="1.4456%" y="351.50"></text></g><g><title>[libuct_ib.so.0.0.0] (9 samples, 0.11%)</title><rect x="1.1956%" y="325" width="0.1098%" height="15" fill="rgb(238,167,29)" fg:x="98" fg:w="9"/><text x="1.4456%" y="335.50"></text></g><g><title>uct_ib_reg_key_impl (8 samples, 0.10%)</title><rect x="1.2078%" y="309" width="0.0976%" height="15" fill="rgb(232,182,51)" fg:x="99" fg:w="8"/><text x="1.4578%" y="319.50"></text></g><g><title>uct_ib_reg_mr (8 samples, 0.10%)</title><rect x="1.2078%" y="293" width="0.0976%" height="15" fill="rgb(231,60,39)" fg:x="99" fg:w="8"/><text x="1.4578%" y="303.50"></text></g><g><title>ibv_reg_mr_iova2 (8 samples, 0.10%)</title><rect x="1.2078%" y="277" width="0.0976%" height="15" fill="rgb(208,69,12)" fg:x="99" fg:w="8"/><text x="1.4578%" y="287.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (7 samples, 0.09%)</title><rect x="1.2200%" y="261" width="0.0854%" height="15" fill="rgb(235,93,37)" fg:x="100" fg:w="7"/><text x="1.4700%" y="271.50"></text></g><g><title>ibv_cmd_reg_mr (6 samples, 0.07%)</title><rect x="1.2322%" y="245" width="0.0732%" height="15" fill="rgb(213,116,39)" fg:x="101" fg:w="6"/><text x="1.4822%" y="255.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (5 samples, 0.06%)</title><rect x="1.2444%" y="229" width="0.0610%" height="15" fill="rgb(222,207,29)" fg:x="102" fg:w="5"/><text x="1.4944%" y="239.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (3 samples, 0.04%)</title><rect x="1.2688%" y="213" width="0.0366%" height="15" fill="rgb(206,96,30)" fg:x="104" fg:w="3"/><text x="1.5188%" y="223.50"></text></g><g><title>execute_ioctl (2 samples, 0.02%)</title><rect x="1.2810%" y="197" width="0.0244%" height="15" fill="rgb(218,138,4)" fg:x="105" fg:w="2"/><text x="1.5310%" y="207.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1 samples, 0.01%)</title><rect x="1.2932%" y="181" width="0.0122%" height="15" fill="rgb(250,191,14)" fg:x="106" fg:w="1"/><text x="1.5432%" y="191.50"></text></g><g><title>ibv_get_async_event (3 samples, 0.04%)</title><rect x="1.3054%" y="485" width="0.0366%" height="15" fill="rgb(239,60,40)" fg:x="107" fg:w="3"/><text x="1.5554%" y="495.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="1.3176%" y="469" width="0.0244%" height="15" fill="rgb(206,27,48)" fg:x="108" fg:w="2"/><text x="1.5676%" y="479.50"></text></g><g><title>ucs_async_dispatch_handlers (21 samples, 0.26%)</title><rect x="1.0980%" y="549" width="0.2562%" height="15" fill="rgb(225,35,8)" fg:x="90" fg:w="21"/><text x="1.3480%" y="559.50"></text></g><g><title>[libucs.so.0.0.0] (21 samples, 0.26%)</title><rect x="1.0980%" y="533" width="0.2562%" height="15" fill="rgb(250,213,24)" fg:x="90" fg:w="21"/><text x="1.3480%" y="543.50"></text></g><g><title>[libucs.so.0.0.0] (19 samples, 0.23%)</title><rect x="1.1224%" y="517" width="0.2318%" height="15" fill="rgb(247,123,22)" fg:x="92" fg:w="19"/><text x="1.3724%" y="527.50"></text></g><g><title>[libuct_ib.so.0.0.0] (15 samples, 0.18%)</title><rect x="1.1712%" y="501" width="0.1830%" height="15" fill="rgb(231,138,38)" fg:x="96" fg:w="15"/><text x="1.4212%" y="511.50"></text></g><g><title>uct_ib_handle_async_event (1 samples, 0.01%)</title><rect x="1.3420%" y="485" width="0.0122%" height="15" fill="rgb(231,145,46)" fg:x="110" fg:w="1"/><text x="1.5920%" y="495.50"></text></g><g><title>__snprintf_chk (1 samples, 0.01%)</title><rect x="1.3420%" y="469" width="0.0122%" height="15" fill="rgb(251,118,11)" fg:x="110" fg:w="1"/><text x="1.5920%" y="479.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="1.3420%" y="453" width="0.0122%" height="15" fill="rgb(217,147,25)" fg:x="110" fg:w="1"/><text x="1.5920%" y="463.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="1.3420%" y="437" width="0.0122%" height="15" fill="rgb(247,81,37)" fg:x="110" fg:w="1"/><text x="1.5920%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="1.5371%" y="517" width="0.1342%" height="15" fill="rgb(209,12,38)" fg:x="126" fg:w="11"/><text x="1.7871%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="1.5371%" y="501" width="0.1342%" height="15" fill="rgb(227,1,9)" fg:x="126" fg:w="11"/><text x="1.7871%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.13%)</title><rect x="1.5371%" y="485" width="0.1342%" height="15" fill="rgb(248,47,43)" fg:x="126" fg:w="11"/><text x="1.7871%" y="495.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="1.6713%" y="517" width="0.0122%" height="15" fill="rgb(221,10,30)" fg:x="137" fg:w="1"/><text x="1.9213%" y="527.50"></text></g><g><title>__aarch64_cas4_acq (1 samples, 0.01%)</title><rect x="1.6713%" y="501" width="0.0122%" height="15" fill="rgb(210,229,1)" fg:x="137" fg:w="1"/><text x="1.9213%" y="511.50"></text></g><g><title>[libucs.so.0.0.0] (65 samples, 0.79%)</title><rect x="0.9516%" y="565" width="0.7930%" height="15" fill="rgb(222,148,37)" fg:x="78" fg:w="65"/><text x="1.2016%" y="575.50"></text></g><g><title>ucs_async_pipe_drain (32 samples, 0.39%)</title><rect x="1.3542%" y="549" width="0.3904%" height="15" fill="rgb(234,67,33)" fg:x="111" fg:w="32"/><text x="1.6042%" y="559.50"></text></g><g><title>__read (23 samples, 0.28%)</title><rect x="1.4640%" y="533" width="0.2806%" height="15" fill="rgb(247,98,35)" fg:x="120" fg:w="23"/><text x="1.7140%" y="543.50"></text></g><g><title>__pthread_enable_asynccancel (5 samples, 0.06%)</title><rect x="1.6835%" y="517" width="0.0610%" height="15" fill="rgb(247,138,52)" fg:x="138" fg:w="5"/><text x="1.9335%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.8421%" y="549" width="0.0610%" height="15" fill="rgb(213,79,30)" fg:x="151" fg:w="5"/><text x="2.0921%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.8421%" y="533" width="0.0610%" height="15" fill="rgb(246,177,23)" fg:x="151" fg:w="5"/><text x="2.0921%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="1.8421%" y="517" width="0.0610%" height="15" fill="rgb(230,62,27)" fg:x="151" fg:w="5"/><text x="2.0921%" y="527.50"></text></g><g><title>__libc_disable_asynccancel (15 samples, 0.18%)</title><rect x="1.9031%" y="549" width="0.1830%" height="15" fill="rgb(216,154,8)" fg:x="156" fg:w="15"/><text x="2.1531%" y="559.50"></text></g><g><title>__aarch64_cas4_acq (2 samples, 0.02%)</title><rect x="2.0617%" y="533" width="0.0244%" height="15" fill="rgb(244,35,45)" fg:x="169" fg:w="2"/><text x="2.3117%" y="543.50"></text></g><g><title>epoll_pwait (33 samples, 0.40%)</title><rect x="1.7445%" y="565" width="0.4026%" height="15" fill="rgb(251,115,12)" fg:x="143" fg:w="33"/><text x="1.9945%" y="575.50"></text></g><g><title>__libc_enable_asynccancel (5 samples, 0.06%)</title><rect x="2.0861%" y="549" width="0.0610%" height="15" fill="rgb(240,54,50)" fg:x="171" fg:w="5"/><text x="2.3361%" y="559.50"></text></g><g><title>__aarch64_cas4_acq (2 samples, 0.02%)</title><rect x="2.1227%" y="533" width="0.0244%" height="15" fill="rgb(233,84,52)" fg:x="174" fg:w="2"/><text x="2.3727%" y="543.50"></text></g><g><title>ucs_event_set_wait (111 samples, 1.35%)</title><rect x="0.8052%" y="581" width="1.3542%" height="15" fill="rgb(207,117,47)" fg:x="66" fg:w="111"/><text x="1.0552%" y="591.50"></text></g><g><title>epoll_wait (1 samples, 0.01%)</title><rect x="2.1471%" y="565" width="0.0122%" height="15" fill="rgb(249,43,39)" fg:x="176" fg:w="1"/><text x="2.3971%" y="575.50"></text></g><g><title>[libucs.so.0.0.0] (172 samples, 2.10%)</title><rect x="0.1342%" y="597" width="2.0983%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="172"/><text x="0.3842%" y="607.50">[..</text></g><g><title>ucs_get_cpu_clocks_per_sec (6 samples, 0.07%)</title><rect x="2.1593%" y="581" width="0.0732%" height="15" fill="rgb(236,212,23)" fg:x="177" fg:w="6"/><text x="2.4093%" y="591.50"></text></g><g><title>__call_tls_dtors (1 samples, 0.01%)</title><rect x="2.2325%" y="597" width="0.0122%" height="15" fill="rgb(242,79,21)" fg:x="183" fg:w="1"/><text x="2.4825%" y="607.50"></text></g><g><title>__ctype_init (3 samples, 0.04%)</title><rect x="2.2447%" y="597" width="0.0366%" height="15" fill="rgb(211,96,35)" fg:x="184" fg:w="3"/><text x="2.4947%" y="607.50"></text></g><g><title>pthread_self@plt (1 samples, 0.01%)</title><rect x="2.2813%" y="581" width="0.0122%" height="15" fill="rgb(253,215,40)" fg:x="187" fg:w="1"/><text x="2.5313%" y="591.50"></text></g><g><title>pthread_spin_lock@plt (1 samples, 0.01%)</title><rect x="2.2935%" y="581" width="0.0122%" height="15" fill="rgb(211,81,21)" fg:x="188" fg:w="1"/><text x="2.5435%" y="591.50"></text></g><g><title>thread_start (182 samples, 2.22%)</title><rect x="0.0976%" y="629" width="2.2203%" height="15" fill="rgb(208,190,38)" fg:x="8" fg:w="182"/><text x="0.3476%" y="639.50">t..</text></g><g><title>start_thread (182 samples, 2.22%)</title><rect x="0.0976%" y="613" width="2.2203%" height="15" fill="rgb(235,213,38)" fg:x="8" fg:w="182"/><text x="0.3476%" y="623.50">s..</text></g><g><title>ucs_async_dispatch_timerq (3 samples, 0.04%)</title><rect x="2.2813%" y="597" width="0.0366%" height="15" fill="rgb(237,122,38)" fg:x="187" fg:w="3"/><text x="2.5313%" y="607.50"></text></g><g><title>pthread_spin_unlock@plt (1 samples, 0.01%)</title><rect x="2.3057%" y="581" width="0.0122%" height="15" fill="rgb(244,218,35)" fg:x="189" fg:w="1"/><text x="2.5557%" y="591.50"></text></g><g><title>async (192 samples, 2.34%)</title><rect x="0.0000%" y="645" width="2.3423%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="192"/><text x="0.2500%" y="655.50">a..</text></g><g><title>ucs_async_pipe_drain (2 samples, 0.02%)</title><rect x="2.3179%" y="629" width="0.0244%" height="15" fill="rgb(210,16,53)" fg:x="190" fg:w="2"/><text x="2.5679%" y="639.50"></text></g><g><title>read@plt (2 samples, 0.02%)</title><rect x="2.3179%" y="613" width="0.0244%" height="15" fill="rgb(235,124,12)" fg:x="190" fg:w="2"/><text x="2.5679%" y="623.50"></text></g><g><title>open@plt (1 samples, 0.01%)</title><rect x="2.3423%" y="613" width="0.0122%" height="15" fill="rgb(224,169,11)" fg:x="192" fg:w="1"/><text x="2.5923%" y="623.50"></text></g><g><title>strcmp@plt (1 samples, 0.01%)</title><rect x="2.3545%" y="613" width="0.0122%" height="15" fill="rgb(250,166,2)" fg:x="193" fg:w="1"/><text x="2.6045%" y="623.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="2.3423%" y="629" width="0.0366%" height="15" fill="rgb(242,216,29)" fg:x="192" fg:w="3"/><text x="2.5923%" y="639.50"></text></g><g><title>ucs_pgtable_search_range@plt (1 samples, 0.01%)</title><rect x="2.3667%" y="613" width="0.0122%" height="15" fill="rgb(230,116,27)" fg:x="194" fg:w="1"/><text x="2.6167%" y="623.50"></text></g><g><title>pthread_self@plt (2 samples, 0.02%)</title><rect x="2.3789%" y="613" width="0.0244%" height="15" fill="rgb(228,99,48)" fg:x="195" fg:w="2"/><text x="2.6289%" y="623.50"></text></g><g><title>pthread_spin_lock@plt (1 samples, 0.01%)</title><rect x="2.4033%" y="613" width="0.0122%" height="15" fill="rgb(253,11,6)" fg:x="197" fg:w="1"/><text x="2.6533%" y="623.50"></text></g><g><title>[libuct_ib.so.0.0.0] (7 samples, 0.09%)</title><rect x="2.3789%" y="629" width="0.0854%" height="15" fill="rgb(247,143,39)" fg:x="195" fg:w="7"/><text x="2.6289%" y="639.50"></text></g><g><title>pthread_spin_unlock@plt (4 samples, 0.05%)</title><rect x="2.4155%" y="613" width="0.0488%" height="15" fill="rgb(236,97,10)" fg:x="198" fg:w="4"/><text x="2.6655%" y="623.50"></text></g><g><title>ucp_dt_iov_gather (1 samples, 0.01%)</title><rect x="2.4643%" y="613" width="0.0122%" height="15" fill="rgb(233,208,19)" fg:x="202" fg:w="1"/><text x="2.7143%" y="623.50"></text></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="2.4643%" y="597" width="0.0122%" height="15" fill="rgb(216,164,2)" fg:x="202" fg:w="1"/><text x="2.7143%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="2.4643%" y="629" width="0.0366%" height="15" fill="rgb(220,129,5)" fg:x="202" fg:w="3"/><text x="2.7143%" y="639.50"></text></g><g><title>ucp_tag_send_nbx (2 samples, 0.02%)</title><rect x="2.4765%" y="613" width="0.0244%" height="15" fill="rgb(242,17,10)" fg:x="203" fg:w="2"/><text x="2.7265%" y="623.50"></text></g><g><title>ucp_request_send_start@plt (2 samples, 0.02%)</title><rect x="2.4765%" y="597" width="0.0244%" height="15" fill="rgb(242,107,0)" fg:x="203" fg:w="2"/><text x="2.7265%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.5131%" y="613" width="0.0122%" height="15" fill="rgb(251,28,31)" fg:x="206" fg:w="1"/><text x="2.7631%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.5131%" y="597" width="0.0122%" height="15" fill="rgb(233,223,10)" fg:x="206" fg:w="1"/><text x="2.7631%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.5131%" y="581" width="0.0122%" height="15" fill="rgb(215,21,27)" fg:x="206" fg:w="1"/><text x="2.7631%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="2.5253%" y="485" width="0.0122%" height="15" fill="rgb(232,23,21)" fg:x="207" fg:w="1"/><text x="2.7753%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="2.5253%" y="469" width="0.0122%" height="15" fill="rgb(244,5,23)" fg:x="207" fg:w="1"/><text x="2.7753%" y="479.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="2.5253%" y="453" width="0.0122%" height="15" fill="rgb(226,81,46)" fg:x="207" fg:w="1"/><text x="2.7753%" y="463.50"></text></g><g><title>pthread_spin_lock (6 samples, 0.07%)</title><rect x="2.5375%" y="453" width="0.0732%" height="15" fill="rgb(247,70,30)" fg:x="208" fg:w="6"/><text x="2.7875%" y="463.50"></text></g><g><title>ucp_wireup_ep_create (1 samples, 0.01%)</title><rect x="2.6107%" y="421" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="214" fg:w="1"/><text x="2.8607%" y="431.50"></text></g><g><title>ucp_wireup_ep_t_init (1 samples, 0.01%)</title><rect x="2.6107%" y="405" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="214" fg:w="1"/><text x="2.8607%" y="415.50"></text></g><g><title>ucp_proxy_ep_t_init (1 samples, 0.01%)</title><rect x="2.6107%" y="389" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="214" fg:w="1"/><text x="2.8607%" y="399.50"></text></g><g><title>ucp_wireup_select_lanes (1 samples, 0.01%)</title><rect x="2.6229%" y="421" width="0.0122%" height="15" fill="rgb(206,192,2)" fg:x="215" fg:w="1"/><text x="2.8729%" y="431.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6229%" y="405" width="0.0122%" height="15" fill="rgb(241,108,4)" fg:x="215" fg:w="1"/><text x="2.8729%" y="415.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6229%" y="389" width="0.0122%" height="15" fill="rgb(247,173,49)" fg:x="215" fg:w="1"/><text x="2.8729%" y="399.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6229%" y="373" width="0.0122%" height="15" fill="rgb(224,114,35)" fg:x="215" fg:w="1"/><text x="2.8729%" y="383.50"></text></g><g><title>uct_base_iface_estimate_perf (1 samples, 0.01%)</title><rect x="2.6229%" y="357" width="0.0122%" height="15" fill="rgb(245,159,27)" fg:x="215" fg:w="1"/><text x="2.8729%" y="367.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6229%" y="341" width="0.0122%" height="15" fill="rgb(245,172,44)" fg:x="215" fg:w="1"/><text x="2.8729%" y="351.50"></text></g><g><title>ucs_topo_get_pci_bw (1 samples, 0.01%)</title><rect x="2.6229%" y="325" width="0.0122%" height="15" fill="rgb(236,23,11)" fg:x="215" fg:w="1"/><text x="2.8729%" y="335.50"></text></g><g><title>sscanf (1 samples, 0.01%)</title><rect x="2.6229%" y="309" width="0.0122%" height="15" fill="rgb(205,117,38)" fg:x="215" fg:w="1"/><text x="2.8729%" y="319.50"></text></g><g><title>__vsscanf (1 samples, 0.01%)</title><rect x="2.6229%" y="293" width="0.0122%" height="15" fill="rgb(237,72,25)" fg:x="215" fg:w="1"/><text x="2.8729%" y="303.50"></text></g><g><title>_IO_vfscanf (1 samples, 0.01%)</title><rect x="2.6229%" y="277" width="0.0122%" height="15" fill="rgb(244,70,9)" fg:x="215" fg:w="1"/><text x="2.8729%" y="287.50"></text></g><g><title>__GI_____strtod_l_internal (1 samples, 0.01%)</title><rect x="2.6229%" y="261" width="0.0122%" height="15" fill="rgb(217,125,39)" fg:x="215" fg:w="1"/><text x="2.8729%" y="271.50"></text></g><g><title>ucp_ep_create_to_worker_addr (3 samples, 0.04%)</title><rect x="2.6107%" y="453" width="0.0366%" height="15" fill="rgb(235,36,10)" fg:x="214" fg:w="3"/><text x="2.8607%" y="463.50"></text></g><g><title>ucp_wireup_init_lanes (3 samples, 0.04%)</title><rect x="2.6107%" y="437" width="0.0366%" height="15" fill="rgb(251,123,47)" fg:x="214" fg:w="3"/><text x="2.8607%" y="447.50"></text></g><g><title>ucp_worker_iface_progress_ep (1 samples, 0.01%)</title><rect x="2.6351%" y="421" width="0.0122%" height="15" fill="rgb(221,13,13)" fg:x="216" fg:w="1"/><text x="2.8851%" y="431.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6351%" y="405" width="0.0122%" height="15" fill="rgb(238,131,9)" fg:x="216" fg:w="1"/><text x="2.8851%" y="415.50"></text></g><g><title>uct_rc_mlx5_iface_srq_post_recv (1 samples, 0.01%)</title><rect x="2.6351%" y="389" width="0.0122%" height="15" fill="rgb(211,50,8)" fg:x="216" fg:w="1"/><text x="2.8851%" y="399.50"></text></g><g><title>ucs_mpool_get_grow (1 samples, 0.01%)</title><rect x="2.6351%" y="373" width="0.0122%" height="15" fill="rgb(245,182,24)" fg:x="216" fg:w="1"/><text x="2.8851%" y="383.50"></text></g><g><title>ucs_mpool_grow (1 samples, 0.01%)</title><rect x="2.6351%" y="357" width="0.0122%" height="15" fill="rgb(242,14,37)" fg:x="216" fg:w="1"/><text x="2.8851%" y="367.50"></text></g><g><title>mpicd::create_endpoint (10 samples, 0.12%)</title><rect x="2.5375%" y="485" width="0.1220%" height="15" fill="rgb(246,228,12)" fg:x="208" fg:w="10"/><text x="2.7875%" y="495.50"></text></g><g><title>ucp_ep_create (10 samples, 0.12%)</title><rect x="2.5375%" y="469" width="0.1220%" height="15" fill="rgb(213,55,15)" fg:x="208" fg:w="10"/><text x="2.7875%" y="479.50"></text></g><g><title>ucp_wireup_send_request (1 samples, 0.01%)</title><rect x="2.6473%" y="453" width="0.0122%" height="15" fill="rgb(209,9,3)" fg:x="217" fg:w="1"/><text x="2.8973%" y="463.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.6473%" y="437" width="0.0122%" height="15" fill="rgb(230,59,30)" fg:x="217" fg:w="1"/><text x="2.8973%" y="447.50"></text></g><g><title>ucp_wireup_msg_prepare (1 samples, 0.01%)</title><rect x="2.6473%" y="421" width="0.0122%" height="15" fill="rgb(209,121,21)" fg:x="217" fg:w="1"/><text x="2.8973%" y="431.50"></text></g><g><title>ucp_address_pack (1 samples, 0.01%)</title><rect x="2.6473%" y="405" width="0.0122%" height="15" fill="rgb(220,109,13)" fg:x="217" fg:w="1"/><text x="2.8973%" y="415.50"></text></g><g><title>event_active (1 samples, 0.01%)</title><rect x="2.6595%" y="453" width="0.0122%" height="15" fill="rgb(232,18,1)" fg:x="218" fg:w="1"/><text x="2.9095%" y="463.50"></text></g><g><title>event_active_nolock_ (1 samples, 0.01%)</title><rect x="2.6595%" y="437" width="0.0122%" height="15" fill="rgb(215,41,42)" fg:x="218" fg:w="1"/><text x="2.9095%" y="447.50"></text></g><g><title>mpicd::pmi::PMI::get (2 samples, 0.02%)</title><rect x="2.6595%" y="485" width="0.0244%" height="15" fill="rgb(224,123,36)" fg:x="218" fg:w="2"/><text x="2.9095%" y="495.50"></text></g><g><title>PMIx_Get (2 samples, 0.02%)</title><rect x="2.6595%" y="469" width="0.0244%" height="15" fill="rgb(240,125,3)" fg:x="218" fg:w="2"/><text x="2.9095%" y="479.50"></text></g><g><title>process_request (1 samples, 0.01%)</title><rect x="2.6717%" y="453" width="0.0122%" height="15" fill="rgb(205,98,50)" fg:x="219" fg:w="1"/><text x="2.9217%" y="463.50"></text></g><g><title>pmix_hwloc_setup_topology (1 samples, 0.01%)</title><rect x="2.6839%" y="453" width="0.0122%" height="15" fill="rgb(205,185,37)" fg:x="220" fg:w="1"/><text x="2.9339%" y="463.50"></text></g><g><title>pmix_gds_hash_store (1 samples, 0.01%)</title><rect x="2.6839%" y="437" width="0.0122%" height="15" fill="rgb(238,207,15)" fg:x="220" fg:w="1"/><text x="2.9339%" y="447.50"></text></g><g><title>pmix_hash_store (1 samples, 0.01%)</title><rect x="2.6839%" y="421" width="0.0122%" height="15" fill="rgb(213,199,42)" fg:x="220" fg:w="1"/><text x="2.9339%" y="431.50"></text></g><g><title>pmix_bfrops_base_tma_value_xfer (1 samples, 0.01%)</title><rect x="2.6839%" y="405" width="0.0122%" height="15" fill="rgb(235,201,11)" fg:x="220" fg:w="1"/><text x="2.9339%" y="415.50"></text></g><g><title>pmix_hwloc_copy_topology (1 samples, 0.01%)</title><rect x="2.6839%" y="389" width="0.0122%" height="15" fill="rgb(207,46,11)" fg:x="220" fg:w="1"/><text x="2.9339%" y="399.50"></text></g><g><title>hwloc__topology_dup (1 samples, 0.01%)</title><rect x="2.6839%" y="373" width="0.0122%" height="15" fill="rgb(241,35,35)" fg:x="220" fg:w="1"/><text x="2.9339%" y="383.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.6839%" y="357" width="0.0122%" height="15" fill="rgb(243,32,47)" fg:x="220" fg:w="1"/><text x="2.9339%" y="367.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.6839%" y="341" width="0.0122%" height="15" fill="rgb(247,202,23)" fg:x="220" fg:w="1"/><text x="2.9339%" y="351.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.6839%" y="325" width="0.0122%" height="15" fill="rgb(219,102,11)" fg:x="220" fg:w="1"/><text x="2.9339%" y="335.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.6839%" y="309" width="0.0122%" height="15" fill="rgb(243,110,44)" fg:x="220" fg:w="1"/><text x="2.9339%" y="319.50"></text></g><g><title>hwloc__duplicate_object (1 samples, 0.01%)</title><rect x="2.6839%" y="293" width="0.0122%" height="15" fill="rgb(222,74,54)" fg:x="220" fg:w="1"/><text x="2.9339%" y="303.50"></text></g><g><title>hwloc_bitmap_tma_dup (1 samples, 0.01%)</title><rect x="2.6839%" y="277" width="0.0122%" height="15" fill="rgb(216,99,12)" fg:x="220" fg:w="1"/><text x="2.9339%" y="287.50"></text></g><g><title>hwloc_tma_malloc (1 samples, 0.01%)</title><rect x="2.6839%" y="261" width="0.0122%" height="15" fill="rgb(226,22,26)" fg:x="220" fg:w="1"/><text x="2.9339%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="2.6839%" y="245" width="0.0122%" height="15" fill="rgb(217,163,10)" fg:x="220" fg:w="1"/><text x="2.9339%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="2.6839%" y="229" width="0.0122%" height="15" fill="rgb(213,25,53)" fg:x="220" fg:w="1"/><text x="2.9339%" y="239.50"></text></g><g><title>pmix_init_registered_attrs (1 samples, 0.01%)</title><rect x="2.6961%" y="437" width="0.0122%" height="15" fill="rgb(252,105,26)" fg:x="221" fg:w="1"/><text x="2.9461%" y="447.50"></text></g><g><title>pmix_hash_register_key (1 samples, 0.01%)</title><rect x="2.6961%" y="421" width="0.0122%" height="15" fill="rgb(220,39,43)" fg:x="221" fg:w="1"/><text x="2.9461%" y="431.50"></text></g><g><title>pmix_init_util (1 samples, 0.01%)</title><rect x="2.7083%" y="437" width="0.0122%" height="15" fill="rgb(229,68,48)" fg:x="222" fg:w="1"/><text x="2.9583%" y="447.50"></text></g><g><title>pmix_mca_base_var_init (1 samples, 0.01%)</title><rect x="2.7083%" y="421" width="0.0122%" height="15" fill="rgb(252,8,32)" fg:x="222" fg:w="1"/><text x="2.9583%" y="431.50"></text></g><g><title>pmix_mca_base_var_cache_files (1 samples, 0.01%)</title><rect x="2.7083%" y="405" width="0.0122%" height="15" fill="rgb(223,20,43)" fg:x="222" fg:w="1"/><text x="2.9583%" y="415.50"></text></g><g><title>read_files (1 samples, 0.01%)</title><rect x="2.7083%" y="389" width="0.0122%" height="15" fill="rgb(229,81,49)" fg:x="222" fg:w="1"/><text x="2.9583%" y="399.50"></text></g><g><title>pmix_util_keyval_parse (1 samples, 0.01%)</title><rect x="2.7083%" y="373" width="0.0122%" height="15" fill="rgb(236,28,36)" fg:x="222" fg:w="1"/><text x="2.9583%" y="383.50"></text></g><g><title>pmix_util_keyval_yylex (1 samples, 0.01%)</title><rect x="2.7083%" y="357" width="0.0122%" height="15" fill="rgb(249,185,26)" fg:x="222" fg:w="1"/><text x="2.9583%" y="367.50"></text></g><g><title>pmix_mca_base_framework_open (1 samples, 0.01%)</title><rect x="2.7205%" y="437" width="0.0122%" height="15" fill="rgb(249,174,33)" fg:x="223" fg:w="1"/><text x="2.9705%" y="447.50"></text></g><g><title>pmix_mca_base_framework_register (1 samples, 0.01%)</title><rect x="2.7205%" y="421" width="0.0122%" height="15" fill="rgb(233,201,37)" fg:x="223" fg:w="1"/><text x="2.9705%" y="431.50"></text></g><g><title>pmix_ptl_register (1 samples, 0.01%)</title><rect x="2.7205%" y="405" width="0.0122%" height="15" fill="rgb(221,78,26)" fg:x="223" fg:w="1"/><text x="2.9705%" y="415.50"></text></g><g><title>pmix_mca_base_var_register_synonym (1 samples, 0.01%)</title><rect x="2.7205%" y="389" width="0.0122%" height="15" fill="rgb(250,127,30)" fg:x="223" fg:w="1"/><text x="2.9705%" y="399.50"></text></g><g><title>register_variable (1 samples, 0.01%)</title><rect x="2.7205%" y="373" width="0.0122%" height="15" fill="rgb(230,49,44)" fg:x="223" fg:w="1"/><text x="2.9705%" y="383.50"></text></g><g><title>__strdup (1 samples, 0.01%)</title><rect x="2.7205%" y="357" width="0.0122%" height="15" fill="rgb(229,67,23)" fg:x="223" fg:w="1"/><text x="2.9705%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="2.7205%" y="341" width="0.0122%" height="15" fill="rgb(249,83,47)" fg:x="223" fg:w="1"/><text x="2.9705%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="2.7205%" y="325" width="0.0122%" height="15" fill="rgb(215,43,3)" fg:x="223" fg:w="1"/><text x="2.9705%" y="335.50"></text></g><g><title>mpicd::pmi::PMI::init (5 samples, 0.06%)</title><rect x="2.6839%" y="485" width="0.0610%" height="15" fill="rgb(238,154,13)" fg:x="220" fg:w="5"/><text x="2.9339%" y="495.50"></text></g><g><title>PMIx_Init (5 samples, 0.06%)</title><rect x="2.6839%" y="469" width="0.0610%" height="15" fill="rgb(219,56,2)" fg:x="220" fg:w="5"/><text x="2.9339%" y="479.50"></text></g><g><title>pmix_rte_init (4 samples, 0.05%)</title><rect x="2.6961%" y="453" width="0.0488%" height="15" fill="rgb(233,0,4)" fg:x="221" fg:w="4"/><text x="2.9461%" y="463.50"></text></g><g><title>pmix_progress_thread_init (1 samples, 0.01%)</title><rect x="2.7327%" y="437" width="0.0122%" height="15" fill="rgb(235,30,7)" fg:x="224" fg:w="1"/><text x="2.9827%" y="447.50"></text></g><g><title>event_base_new (1 samples, 0.01%)</title><rect x="2.7327%" y="421" width="0.0122%" height="15" fill="rgb(250,79,13)" fg:x="224" fg:w="1"/><text x="2.9827%" y="431.50"></text></g><g><title>event_base_new_with_config (1 samples, 0.01%)</title><rect x="2.7327%" y="405" width="0.0122%" height="15" fill="rgb(211,146,34)" fg:x="224" fg:w="1"/><text x="2.9827%" y="415.50"></text></g><g><title>gettime (1 samples, 0.01%)</title><rect x="2.7327%" y="389" width="0.0122%" height="15" fill="rgb(228,22,38)" fg:x="224" fg:w="1"/><text x="2.9827%" y="399.50"></text></g><g><title>gettime (1 samples, 0.01%)</title><rect x="2.7327%" y="373" width="0.0122%" height="15" fill="rgb(235,168,5)" fg:x="224" fg:w="1"/><text x="2.9827%" y="383.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="2.7449%" y="389" width="0.0122%" height="15" fill="rgb(221,155,16)" fg:x="225" fg:w="1"/><text x="2.9949%" y="399.50"></text></g><g><title>__errno_location (1 samples, 0.01%)</title><rect x="2.7571%" y="373" width="0.0122%" height="15" fill="rgb(215,215,53)" fg:x="226" fg:w="1"/><text x="3.0071%" y="383.50"></text></g><g><title>ucs_vfs_obj_add_dir (2 samples, 0.02%)</title><rect x="2.7815%" y="325" width="0.0244%" height="15" fill="rgb(223,4,10)" fg:x="228" fg:w="2"/><text x="3.0315%" y="335.50"></text></g><g><title>[libucs.so.0.0.0] (2 samples, 0.02%)</title><rect x="2.7815%" y="309" width="0.0244%" height="15" fill="rgb(234,103,6)" fg:x="228" fg:w="2"/><text x="3.0315%" y="319.50"></text></g><g><title>ucs_snprintf_safe (2 samples, 0.02%)</title><rect x="2.7815%" y="293" width="0.0244%" height="15" fill="rgb(227,97,0)" fg:x="228" fg:w="2"/><text x="3.0315%" y="303.50"></text></g><g><title>ucs_vsnprintf_safe (2 samples, 0.02%)</title><rect x="2.7815%" y="277" width="0.0244%" height="15" fill="rgb(234,150,53)" fg:x="228" fg:w="2"/><text x="3.0315%" y="287.50"></text></g><g><title>__vsnprintf_chk (2 samples, 0.02%)</title><rect x="2.7815%" y="261" width="0.0244%" height="15" fill="rgb(228,201,54)" fg:x="228" fg:w="2"/><text x="3.0315%" y="271.50"></text></g><g><title>_IO_vfprintf (2 samples, 0.02%)</title><rect x="2.7815%" y="245" width="0.0244%" height="15" fill="rgb(222,22,37)" fg:x="228" fg:w="2"/><text x="3.0315%" y="255.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.01%)</title><rect x="2.7937%" y="229" width="0.0122%" height="15" fill="rgb(237,53,32)" fg:x="229" fg:w="1"/><text x="3.0437%" y="239.50"></text></g><g><title>__libc_realloc (1 samples, 0.01%)</title><rect x="2.8669%" y="277" width="0.0122%" height="15" fill="rgb(233,25,53)" fg:x="235" fg:w="1"/><text x="3.1169%" y="287.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="2.8669%" y="261" width="0.0122%" height="15" fill="rgb(210,40,34)" fg:x="235" fg:w="1"/><text x="3.1169%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="2.8669%" y="245" width="0.0122%" height="15" fill="rgb(241,220,44)" fg:x="235" fg:w="1"/><text x="3.1169%" y="255.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="2.8791%" y="277" width="0.0122%" height="15" fill="rgb(235,28,35)" fg:x="236" fg:w="1"/><text x="3.1291%" y="287.50"></text></g><g><title>[libucs.so.0.0.0] (7 samples, 0.09%)</title><rect x="2.8181%" y="293" width="0.0854%" height="15" fill="rgb(210,56,17)" fg:x="231" fg:w="7"/><text x="3.0681%" y="303.50"></text></g><g><title>ucs_malloc (1 samples, 0.01%)</title><rect x="2.8913%" y="277" width="0.0122%" height="15" fill="rgb(224,130,29)" fg:x="237" fg:w="1"/><text x="3.1413%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="2.8913%" y="261" width="0.0122%" height="15" fill="rgb(235,212,8)" fg:x="237" fg:w="1"/><text x="3.1413%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="2.8913%" y="245" width="0.0122%" height="15" fill="rgb(223,33,50)" fg:x="237" fg:w="1"/><text x="3.1413%" y="255.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.01%)</title><rect x="2.9035%" y="245" width="0.0122%" height="15" fill="rgb(219,149,13)" fg:x="238" fg:w="1"/><text x="3.1535%" y="255.50"></text></g><g><title>ucs_snprintf_safe (3 samples, 0.04%)</title><rect x="2.9035%" y="293" width="0.0366%" height="15" fill="rgb(250,156,29)" fg:x="238" fg:w="3"/><text x="3.1535%" y="303.50"></text></g><g><title>ucs_vsnprintf_safe (3 samples, 0.04%)</title><rect x="2.9035%" y="277" width="0.0366%" height="15" fill="rgb(216,193,19)" fg:x="238" fg:w="3"/><text x="3.1535%" y="287.50"></text></g><g><title>__vsnprintf_chk (3 samples, 0.04%)</title><rect x="2.9035%" y="261" width="0.0366%" height="15" fill="rgb(216,135,14)" fg:x="238" fg:w="3"/><text x="3.1535%" y="271.50"></text></g><g><title>_IO_vfprintf (2 samples, 0.02%)</title><rect x="2.9157%" y="245" width="0.0244%" height="15" fill="rgb(241,47,5)" fg:x="239" fg:w="2"/><text x="3.1657%" y="255.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.01%)</title><rect x="2.9279%" y="229" width="0.0122%" height="15" fill="rgb(233,42,35)" fg:x="240" fg:w="1"/><text x="3.1779%" y="239.50"></text></g><g><title>ucs_rcache_vfs_init (15 samples, 0.18%)</title><rect x="2.7693%" y="341" width="0.1830%" height="15" fill="rgb(231,13,6)" fg:x="227" fg:w="15"/><text x="3.0193%" y="351.50"></text></g><g><title>ucs_vfs_obj_add_ro_file (12 samples, 0.15%)</title><rect x="2.8059%" y="325" width="0.1464%" height="15" fill="rgb(207,181,40)" fg:x="230" fg:w="12"/><text x="3.0559%" y="335.50"></text></g><g><title>[libucs.so.0.0.0] (12 samples, 0.15%)</title><rect x="2.8059%" y="309" width="0.1464%" height="15" fill="rgb(254,173,49)" fg:x="230" fg:w="12"/><text x="3.0559%" y="319.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="2.9401%" y="293" width="0.0122%" height="15" fill="rgb(221,1,38)" fg:x="241" fg:w="1"/><text x="3.1901%" y="303.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="2.9401%" y="277" width="0.0122%" height="15" fill="rgb(206,124,46)" fg:x="241" fg:w="1"/><text x="3.1901%" y="287.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.01%)</title><rect x="2.9401%" y="261" width="0.0122%" height="15" fill="rgb(249,21,11)" fg:x="241" fg:w="1"/><text x="3.1901%" y="271.50"></text></g><g><title>_IO_setb (1 samples, 0.01%)</title><rect x="2.9401%" y="245" width="0.0122%" height="15" fill="rgb(222,201,40)" fg:x="241" fg:w="1"/><text x="3.1901%" y="255.50"></text></g><g><title>uct_ib_md_open_common (17 samples, 0.21%)</title><rect x="2.7571%" y="389" width="0.2074%" height="15" fill="rgb(235,61,29)" fg:x="226" fg:w="17"/><text x="3.0071%" y="399.50"></text></g><g><title>ucs_rcache_create (16 samples, 0.20%)</title><rect x="2.7693%" y="373" width="0.1952%" height="15" fill="rgb(219,207,3)" fg:x="227" fg:w="16"/><text x="3.0193%" y="383.50"></text></g><g><title>[libucs.so.0.0.0] (16 samples, 0.20%)</title><rect x="2.7693%" y="357" width="0.1952%" height="15" fill="rgb(222,56,46)" fg:x="227" fg:w="16"/><text x="3.0193%" y="367.50"></text></g><g><title>ucs_strdup (1 samples, 0.01%)</title><rect x="2.9523%" y="341" width="0.0122%" height="15" fill="rgb(239,76,54)" fg:x="242" fg:w="1"/><text x="3.2023%" y="351.50"></text></g><g><title>__strdup (1 samples, 0.01%)</title><rect x="2.9523%" y="325" width="0.0122%" height="15" fill="rgb(231,124,27)" fg:x="242" fg:w="1"/><text x="3.2023%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="2.9523%" y="309" width="0.0122%" height="15" fill="rgb(249,195,6)" fg:x="242" fg:w="1"/><text x="3.2023%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="2.9523%" y="293" width="0.0122%" height="15" fill="rgb(237,174,47)" fg:x="242" fg:w="1"/><text x="3.2023%" y="303.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1 samples, 0.01%)</title><rect x="2.9645%" y="373" width="0.0122%" height="15" fill="rgb(206,201,31)" fg:x="243" fg:w="1"/><text x="3.2145%" y="383.50"></text></g><g><title>__asprintf_chk (1 samples, 0.01%)</title><rect x="2.9645%" y="357" width="0.0122%" height="15" fill="rgb(231,57,52)" fg:x="243" fg:w="1"/><text x="3.2145%" y="367.50"></text></g><g><title>_IO_fgets (1 samples, 0.01%)</title><rect x="2.9767%" y="341" width="0.0122%" height="15" fill="rgb(248,177,22)" fg:x="244" fg:w="1"/><text x="3.2267%" y="351.50"></text></g><g><title>uct_ib_md_open (21 samples, 0.26%)</title><rect x="2.7449%" y="421" width="0.2562%" height="15" fill="rgb(215,211,37)" fg:x="225" fg:w="21"/><text x="2.9949%" y="431.50"></text></g><g><title>[libuct_ib.so.0.0.0] (21 samples, 0.26%)</title><rect x="2.7449%" y="405" width="0.2562%" height="15" fill="rgb(241,128,51)" fg:x="225" fg:w="21"/><text x="2.9949%" y="415.50"></text></g><g><title>verbs_open_device (3 samples, 0.04%)</title><rect x="2.9645%" y="389" width="0.0366%" height="15" fill="rgb(227,165,31)" fg:x="243" fg:w="3"/><text x="3.2145%" y="399.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.9767%" y="373" width="0.0244%" height="15" fill="rgb(228,167,24)" fg:x="244" fg:w="2"/><text x="3.2267%" y="383.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (2 samples, 0.02%)</title><rect x="2.9767%" y="357" width="0.0244%" height="15" fill="rgb(228,143,12)" fg:x="244" fg:w="2"/><text x="3.2267%" y="367.50"></text></g><g><title>verbs_set_ops (1 samples, 0.01%)</title><rect x="2.9889%" y="341" width="0.0122%" height="15" fill="rgb(249,149,8)" fg:x="245" fg:w="1"/><text x="3.2389%" y="351.50"></text></g><g><title>uct_md_open (22 samples, 0.27%)</title><rect x="2.7449%" y="437" width="0.2684%" height="15" fill="rgb(243,35,44)" fg:x="225" fg:w="22"/><text x="2.9949%" y="447.50"></text></g><g><title>uct_md_vfs_init (1 samples, 0.01%)</title><rect x="3.0011%" y="421" width="0.0122%" height="15" fill="rgb(246,89,9)" fg:x="246" fg:w="1"/><text x="3.2511%" y="431.50"></text></g><g><title>uct_vfs_init_flags (1 samples, 0.01%)</title><rect x="3.0011%" y="405" width="0.0122%" height="15" fill="rgb(233,213,13)" fg:x="246" fg:w="1"/><text x="3.2511%" y="415.50"></text></g><g><title>ucs_vfs_obj_add_ro_file (1 samples, 0.01%)</title><rect x="3.0011%" y="389" width="0.0122%" height="15" fill="rgb(233,141,41)" fg:x="246" fg:w="1"/><text x="3.2511%" y="399.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.0011%" y="373" width="0.0122%" height="15" fill="rgb(239,167,4)" fg:x="246" fg:w="1"/><text x="3.2511%" y="383.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="3.0011%" y="357" width="0.0122%" height="15" fill="rgb(209,217,16)" fg:x="246" fg:w="1"/><text x="3.2511%" y="367.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.0011%" y="341" width="0.0122%" height="15" fill="rgb(219,88,35)" fg:x="246" fg:w="1"/><text x="3.2511%" y="351.50"></text></g><g><title>[libucp.so.0.0.0] (23 samples, 0.28%)</title><rect x="2.7449%" y="453" width="0.2806%" height="15" fill="rgb(220,193,23)" fg:x="225" fg:w="23"/><text x="2.9949%" y="463.50"></text></g><g><title>uct_md_query_tl_resources (1 samples, 0.01%)</title><rect x="3.0133%" y="437" width="0.0122%" height="15" fill="rgb(230,90,52)" fg:x="247" fg:w="1"/><text x="3.2633%" y="447.50"></text></g><g><title>uct_tcp_query_devices (1 samples, 0.01%)</title><rect x="3.0133%" y="421" width="0.0122%" height="15" fill="rgb(252,106,19)" fg:x="247" fg:w="1"/><text x="3.2633%" y="431.50"></text></g><g><title>ucs_snprintf_safe (1 samples, 0.01%)</title><rect x="3.0133%" y="405" width="0.0122%" height="15" fill="rgb(206,74,20)" fg:x="247" fg:w="1"/><text x="3.2633%" y="415.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="3.0133%" y="389" width="0.0122%" height="15" fill="rgb(230,138,44)" fg:x="247" fg:w="1"/><text x="3.2633%" y="399.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.0133%" y="373" width="0.0122%" height="15" fill="rgb(235,182,43)" fg:x="247" fg:w="1"/><text x="3.2633%" y="383.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.0133%" y="357" width="0.0122%" height="15" fill="rgb(242,16,51)" fg:x="247" fg:w="1"/><text x="3.2633%" y="367.50"></text></g><g><title>__snprintf_chk (1 samples, 0.01%)</title><rect x="3.0255%" y="405" width="0.0122%" height="15" fill="rgb(248,9,4)" fg:x="248" fg:w="1"/><text x="3.2755%" y="415.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.0255%" y="389" width="0.0122%" height="15" fill="rgb(210,31,22)" fg:x="248" fg:w="1"/><text x="3.2755%" y="399.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.0255%" y="373" width="0.0122%" height="15" fill="rgb(239,54,39)" fg:x="248" fg:w="1"/><text x="3.2755%" y="383.50"></text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="3.0255%" y="357" width="0.0122%" height="15" fill="rgb(230,99,41)" fg:x="248" fg:w="1"/><text x="3.2755%" y="367.50"></text></g><g><title>dlerror (1 samples, 0.01%)</title><rect x="3.0377%" y="405" width="0.0122%" height="15" fill="rgb(253,106,12)" fg:x="249" fg:w="1"/><text x="3.2877%" y="415.50"></text></g><g><title>asprintf (1 samples, 0.01%)</title><rect x="3.0377%" y="389" width="0.0122%" height="15" fill="rgb(213,46,41)" fg:x="249" fg:w="1"/><text x="3.2877%" y="399.50"></text></g><g><title>vasprintf (1 samples, 0.01%)</title><rect x="3.0377%" y="373" width="0.0122%" height="15" fill="rgb(215,133,35)" fg:x="249" fg:w="1"/><text x="3.2877%" y="383.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.0377%" y="357" width="0.0122%" height="15" fill="rgb(213,28,5)" fg:x="249" fg:w="1"/><text x="3.2877%" y="367.50"></text></g><g><title>ucp_init_version (26 samples, 0.32%)</title><rect x="2.7449%" y="485" width="0.3172%" height="15" fill="rgb(215,77,49)" fg:x="225" fg:w="26"/><text x="2.9949%" y="495.50"></text></g><g><title>[libucp.so.0.0.0] (26 samples, 0.32%)</title><rect x="2.7449%" y="469" width="0.3172%" height="15" fill="rgb(248,100,22)" fg:x="225" fg:w="26"/><text x="2.9949%" y="479.50"></text></g><g><title>uct_query_components (3 samples, 0.04%)</title><rect x="3.0255%" y="453" width="0.0366%" height="15" fill="rgb(208,67,9)" fg:x="248" fg:w="3"/><text x="3.2755%" y="463.50"></text></g><g><title>ucs_load_modules (3 samples, 0.04%)</title><rect x="3.0255%" y="437" width="0.0366%" height="15" fill="rgb(219,133,21)" fg:x="248" fg:w="3"/><text x="3.2755%" y="447.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.0255%" y="421" width="0.0366%" height="15" fill="rgb(246,46,29)" fg:x="248" fg:w="3"/><text x="3.2755%" y="431.50"></text></g><g><title>dlopen@@GLIBC_2.17 (1 samples, 0.01%)</title><rect x="3.0499%" y="405" width="0.0122%" height="15" fill="rgb(246,185,52)" fg:x="250" fg:w="1"/><text x="3.2999%" y="415.50"></text></g><g><title>_dlerror_run (1 samples, 0.01%)</title><rect x="3.0499%" y="389" width="0.0122%" height="15" fill="rgb(252,136,11)" fg:x="250" fg:w="1"/><text x="3.2999%" y="399.50"></text></g><g><title>_dl_catch_error (1 samples, 0.01%)</title><rect x="3.0499%" y="373" width="0.0122%" height="15" fill="rgb(219,138,53)" fg:x="250" fg:w="1"/><text x="3.2999%" y="383.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="3.0499%" y="357" width="0.0122%" height="15" fill="rgb(211,51,23)" fg:x="250" fg:w="1"/><text x="3.2999%" y="367.50"></text></g><g><title>dlopen_doit (1 samples, 0.01%)</title><rect x="3.0499%" y="341" width="0.0122%" height="15" fill="rgb(247,221,28)" fg:x="250" fg:w="1"/><text x="3.2999%" y="351.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="3.0499%" y="325" width="0.0122%" height="15" fill="rgb(251,222,45)" fg:x="250" fg:w="1"/><text x="3.2999%" y="335.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="3.0499%" y="309" width="0.0122%" height="15" fill="rgb(217,162,53)" fg:x="250" fg:w="1"/><text x="3.2999%" y="319.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="3.0499%" y="293" width="0.0122%" height="15" fill="rgb(229,93,14)" fg:x="250" fg:w="1"/><text x="3.2999%" y="303.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="3.0499%" y="277" width="0.0122%" height="15" fill="rgb(209,67,49)" fg:x="250" fg:w="1"/><text x="3.2999%" y="287.50"></text></g><g><title>dl_open_worker_begin (1 samples, 0.01%)</title><rect x="3.0499%" y="261" width="0.0122%" height="15" fill="rgb(213,87,29)" fg:x="250" fg:w="1"/><text x="3.2999%" y="271.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="3.0499%" y="245" width="0.0122%" height="15" fill="rgb(205,151,52)" fg:x="250" fg:w="1"/><text x="3.2999%" y="255.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.01%)</title><rect x="3.0499%" y="229" width="0.0122%" height="15" fill="rgb(253,215,39)" fg:x="250" fg:w="1"/><text x="3.2999%" y="239.50"></text></g><g><title>elf_machine_rela (1 samples, 0.01%)</title><rect x="3.0499%" y="213" width="0.0122%" height="15" fill="rgb(221,220,41)" fg:x="250" fg:w="1"/><text x="3.2999%" y="223.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="3.0499%" y="197" width="0.0122%" height="15" fill="rgb(218,133,21)" fg:x="250" fg:w="1"/><text x="3.2999%" y="207.50"></text></g><g><title>dl_new_hash (1 samples, 0.01%)</title><rect x="3.0499%" y="181" width="0.0122%" height="15" fill="rgb(221,193,43)" fg:x="250" fg:w="1"/><text x="3.2999%" y="191.50"></text></g><g><title>ucs_snprintf_safe (1 samples, 0.01%)</title><rect x="3.0621%" y="389" width="0.0122%" height="15" fill="rgb(240,128,52)" fg:x="251" fg:w="1"/><text x="3.3121%" y="399.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="3.0621%" y="373" width="0.0122%" height="15" fill="rgb(253,114,12)" fg:x="251" fg:w="1"/><text x="3.3121%" y="383.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.0621%" y="357" width="0.0122%" height="15" fill="rgb(215,223,47)" fg:x="251" fg:w="1"/><text x="3.3121%" y="367.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.0621%" y="341" width="0.0122%" height="15" fill="rgb(248,225,23)" fg:x="251" fg:w="1"/><text x="3.3121%" y="351.50"></text></g><g><title>uct_tcp_netif_caps (1 samples, 0.01%)</title><rect x="3.0743%" y="389" width="0.0122%" height="15" fill="rgb(250,108,0)" fg:x="252" fg:w="1"/><text x="3.3243%" y="399.50"></text></g><g><title>ucs_netif_ioctl (1 samples, 0.01%)</title><rect x="3.0743%" y="373" width="0.0122%" height="15" fill="rgb(228,208,7)" fg:x="252" fg:w="1"/><text x="3.3243%" y="383.50"></text></g><g><title>ucs_close_fd (1 samples, 0.01%)</title><rect x="3.0743%" y="357" width="0.0122%" height="15" fill="rgb(244,45,10)" fg:x="252" fg:w="1"/><text x="3.3243%" y="367.50"></text></g><g><title>[libuct.so.0.0.0] (4 samples, 0.05%)</title><rect x="3.0621%" y="405" width="0.0488%" height="15" fill="rgb(207,125,25)" fg:x="251" fg:w="4"/><text x="3.3121%" y="415.50"></text></g><g><title>uct_tcp_netif_is_default (2 samples, 0.02%)</title><rect x="3.0865%" y="389" width="0.0244%" height="15" fill="rgb(210,195,18)" fg:x="253" fg:w="2"/><text x="3.3365%" y="399.50"></text></g><g><title>sscanf (2 samples, 0.02%)</title><rect x="3.0865%" y="373" width="0.0244%" height="15" fill="rgb(249,80,12)" fg:x="253" fg:w="2"/><text x="3.3365%" y="383.50"></text></g><g><title>__vsscanf (2 samples, 0.02%)</title><rect x="3.0865%" y="357" width="0.0244%" height="15" fill="rgb(221,65,9)" fg:x="253" fg:w="2"/><text x="3.3365%" y="367.50"></text></g><g><title>_IO_vfscanf (2 samples, 0.02%)</title><rect x="3.0865%" y="341" width="0.0244%" height="15" fill="rgb(235,49,36)" fg:x="253" fg:w="2"/><text x="3.3365%" y="351.50"></text></g><g><title>__GI_____strtoul_l_internal (1 samples, 0.01%)</title><rect x="3.0987%" y="325" width="0.0122%" height="15" fill="rgb(225,32,20)" fg:x="254" fg:w="1"/><text x="3.3487%" y="335.50"></text></g><g><title>[libuct_ib.so.0.0.0] (2 samples, 0.02%)</title><rect x="3.1109%" y="357" width="0.0244%" height="15" fill="rgb(215,141,46)" fg:x="255" fg:w="2"/><text x="3.3609%" y="367.50"></text></g><g><title>[libucp.so.0.0.0] (7 samples, 0.09%)</title><rect x="3.0621%" y="437" width="0.0854%" height="15" fill="rgb(250,160,47)" fg:x="251" fg:w="7"/><text x="3.3121%" y="447.50"></text></g><g><title>uct_iface_set_am_handler (7 samples, 0.09%)</title><rect x="3.0621%" y="421" width="0.0854%" height="15" fill="rgb(216,222,40)" fg:x="251" fg:w="7"/><text x="3.3121%" y="431.50"></text></g><g><title>[libuct_ib.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.1109%" y="405" width="0.0366%" height="15" fill="rgb(234,217,39)" fg:x="255" fg:w="3"/><text x="3.3609%" y="415.50"></text></g><g><title>uct_rc_iface_query (3 samples, 0.04%)</title><rect x="3.1109%" y="389" width="0.0366%" height="15" fill="rgb(207,178,40)" fg:x="255" fg:w="3"/><text x="3.3609%" y="399.50"></text></g><g><title>uct_ib_iface_query (3 samples, 0.04%)</title><rect x="3.1109%" y="373" width="0.0366%" height="15" fill="rgb(221,136,13)" fg:x="255" fg:w="3"/><text x="3.3609%" y="383.50"></text></g><g><title>uct_base_iface_query (1 samples, 0.01%)</title><rect x="3.1353%" y="357" width="0.0122%" height="15" fill="rgb(249,199,10)" fg:x="257" fg:w="1"/><text x="3.3853%" y="367.50"></text></g><g><title>__GI_memset (1 samples, 0.01%)</title><rect x="3.1353%" y="341" width="0.0122%" height="15" fill="rgb(249,222,13)" fg:x="257" fg:w="1"/><text x="3.3853%" y="351.50"></text></g><g><title>ucs_async_set_event_handler (1 samples, 0.01%)</title><rect x="3.1475%" y="437" width="0.0122%" height="15" fill="rgb(244,185,38)" fg:x="258" fg:w="1"/><text x="3.3975%" y="447.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.1475%" y="421" width="0.0122%" height="15" fill="rgb(236,202,9)" fg:x="258" fg:w="1"/><text x="3.3975%" y="431.50"></text></g><g><title>ucs_malloc (1 samples, 0.01%)</title><rect x="3.1475%" y="405" width="0.0122%" height="15" fill="rgb(250,229,37)" fg:x="258" fg:w="1"/><text x="3.3975%" y="415.50"></text></g><g><title>ucp_worker_iface_init (9 samples, 0.11%)</title><rect x="3.0621%" y="453" width="0.1098%" height="15" fill="rgb(206,174,23)" fg:x="251" fg:w="9"/><text x="3.3121%" y="463.50"></text></g><g><title>uct_base_iface_progress_disable (1 samples, 0.01%)</title><rect x="3.1597%" y="437" width="0.0122%" height="15" fill="rgb(211,33,43)" fg:x="259" fg:w="1"/><text x="3.4097%" y="447.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.1719%" y="437" width="0.0122%" height="15" fill="rgb(245,58,50)" fg:x="260" fg:w="1"/><text x="3.4219%" y="447.50"></text></g><g><title>ucs_snprintf_safe (1 samples, 0.01%)</title><rect x="3.1719%" y="421" width="0.0122%" height="15" fill="rgb(244,68,36)" fg:x="260" fg:w="1"/><text x="3.4219%" y="431.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="3.1719%" y="405" width="0.0122%" height="15" fill="rgb(232,229,15)" fg:x="260" fg:w="1"/><text x="3.4219%" y="415.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.1719%" y="389" width="0.0122%" height="15" fill="rgb(254,30,23)" fg:x="260" fg:w="1"/><text x="3.4219%" y="399.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.1719%" y="373" width="0.0122%" height="15" fill="rgb(235,160,14)" fg:x="260" fg:w="1"/><text x="3.4219%" y="383.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.1841%" y="437" width="0.0122%" height="15" fill="rgb(212,155,44)" fg:x="261" fg:w="1"/><text x="3.4341%" y="447.50"></text></g><g><title>uct_ud_iface_query (1 samples, 0.01%)</title><rect x="3.1841%" y="421" width="0.0122%" height="15" fill="rgb(226,2,50)" fg:x="261" fg:w="1"/><text x="3.4341%" y="431.50"></text></g><g><title>uct_ib_iface_query (1 samples, 0.01%)</title><rect x="3.1841%" y="405" width="0.0122%" height="15" fill="rgb(234,177,6)" fg:x="261" fg:w="1"/><text x="3.4341%" y="415.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.1841%" y="389" width="0.0122%" height="15" fill="rgb(217,24,9)" fg:x="261" fg:w="1"/><text x="3.4341%" y="399.50"></text></g><g><title>ucs_calloc (1 samples, 0.01%)</title><rect x="3.1963%" y="437" width="0.0122%" height="15" fill="rgb(220,13,46)" fg:x="262" fg:w="1"/><text x="3.4463%" y="447.50"></text></g><g><title>calloc (1 samples, 0.01%)</title><rect x="3.1963%" y="421" width="0.0122%" height="15" fill="rgb(239,221,27)" fg:x="262" fg:w="1"/><text x="3.4463%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="3.1963%" y="405" width="0.0122%" height="15" fill="rgb(222,198,25)" fg:x="262" fg:w="1"/><text x="3.4463%" y="415.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2085%" y="389" width="0.0122%" height="15" fill="rgb(211,99,13)" fg:x="263" fg:w="1"/><text x="3.4585%" y="399.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2085%" y="373" width="0.0122%" height="15" fill="rgb(232,111,31)" fg:x="263" fg:w="1"/><text x="3.4585%" y="383.50"></text></g><g><title>posix_memalign (1 samples, 0.01%)</title><rect x="3.2085%" y="357" width="0.0122%" height="15" fill="rgb(245,82,37)" fg:x="263" fg:w="1"/><text x="3.4585%" y="367.50"></text></g><g><title>_mid_memalign (1 samples, 0.01%)</title><rect x="3.2085%" y="341" width="0.0122%" height="15" fill="rgb(227,149,46)" fg:x="263" fg:w="1"/><text x="3.4585%" y="351.50"></text></g><g><title>_int_memalign (1 samples, 0.01%)</title><rect x="3.2085%" y="325" width="0.0122%" height="15" fill="rgb(218,36,50)" fg:x="263" fg:w="1"/><text x="3.4585%" y="335.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="3.2085%" y="309" width="0.0122%" height="15" fill="rgb(226,80,48)" fg:x="263" fg:w="1"/><text x="3.4585%" y="319.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="3.2085%" y="293" width="0.0122%" height="15" fill="rgb(238,224,15)" fg:x="263" fg:w="1"/><text x="3.4585%" y="303.50"></text></g><g><title>__default_morecore (1 samples, 0.01%)</title><rect x="3.2085%" y="277" width="0.0122%" height="15" fill="rgb(241,136,10)" fg:x="263" fg:w="1"/><text x="3.4585%" y="287.50"></text></g><g><title>ucm_sbrk (1 samples, 0.01%)</title><rect x="3.2085%" y="261" width="0.0122%" height="15" fill="rgb(208,32,45)" fg:x="263" fg:w="1"/><text x="3.4585%" y="271.50"></text></g><g><title>ucm_event_dispatch (1 samples, 0.01%)</title><rect x="3.2085%" y="245" width="0.0122%" height="15" fill="rgb(207,135,9)" fg:x="263" fg:w="1"/><text x="3.4585%" y="255.50"></text></g><g><title>[libucm.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.2085%" y="229" width="0.0122%" height="15" fill="rgb(206,86,44)" fg:x="263" fg:w="1"/><text x="3.4585%" y="239.50"></text></g><g><title>ucm_orig_sbrk (1 samples, 0.01%)</title><rect x="3.2085%" y="213" width="0.0122%" height="15" fill="rgb(245,177,15)" fg:x="263" fg:w="1"/><text x="3.4585%" y="223.50"></text></g><g><title>ucm_orig_brk (1 samples, 0.01%)</title><rect x="3.2085%" y="197" width="0.0122%" height="15" fill="rgb(206,64,50)" fg:x="263" fg:w="1"/><text x="3.4585%" y="207.50"></text></g><g><title>ucm_brk_syscall (1 samples, 0.01%)</title><rect x="3.2085%" y="181" width="0.0122%" height="15" fill="rgb(234,36,40)" fg:x="263" fg:w="1"/><text x="3.4585%" y="191.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.2207%" y="389" width="0.0122%" height="15" fill="rgb(213,64,8)" fg:x="264" fg:w="1"/><text x="3.4707%" y="399.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2207%" y="373" width="0.0122%" height="15" fill="rgb(210,75,36)" fg:x="264" fg:w="1"/><text x="3.4707%" y="383.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2207%" y="357" width="0.0122%" height="15" fill="rgb(229,88,21)" fg:x="264" fg:w="1"/><text x="3.4707%" y="367.50"></text></g><g><title>uct_ib_iface_create_qp (1 samples, 0.01%)</title><rect x="3.2329%" y="389" width="0.0122%" height="15" fill="rgb(252,204,47)" fg:x="265" fg:w="1"/><text x="3.4829%" y="399.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2329%" y="373" width="0.0122%" height="15" fill="rgb(208,77,27)" fg:x="265" fg:w="1"/><text x="3.4829%" y="383.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2329%" y="357" width="0.0122%" height="15" fill="rgb(221,76,26)" fg:x="265" fg:w="1"/><text x="3.4829%" y="367.50"></text></g><g><title>getenv (1 samples, 0.01%)</title><rect x="3.2329%" y="341" width="0.0122%" height="15" fill="rgb(225,139,18)" fg:x="265" fg:w="1"/><text x="3.4829%" y="351.50"></text></g><g><title>uct_rc_iface_t_init (1 samples, 0.01%)</title><rect x="3.2451%" y="389" width="0.0122%" height="15" fill="rgb(230,137,11)" fg:x="266" fg:w="1"/><text x="3.4951%" y="399.50"></text></g><g><title>uct_ib_iface_t_init (1 samples, 0.01%)</title><rect x="3.2451%" y="373" width="0.0122%" height="15" fill="rgb(212,28,1)" fg:x="266" fg:w="1"/><text x="3.4951%" y="383.50"></text></g><g><title>ucs_calloc (1 samples, 0.01%)</title><rect x="3.2573%" y="357" width="0.0122%" height="15" fill="rgb(248,164,17)" fg:x="267" fg:w="1"/><text x="3.5073%" y="367.50"></text></g><g><title>calloc (1 samples, 0.01%)</title><rect x="3.2573%" y="341" width="0.0122%" height="15" fill="rgb(222,171,42)" fg:x="267" fg:w="1"/><text x="3.5073%" y="351.50"></text></g><g><title>__GI_memset (1 samples, 0.01%)</title><rect x="3.2573%" y="325" width="0.0122%" height="15" fill="rgb(243,84,45)" fg:x="267" fg:w="1"/><text x="3.5073%" y="335.50"></text></g><g><title>uct_rc_mlx5_iface_common_t_init (2 samples, 0.02%)</title><rect x="3.2573%" y="389" width="0.0244%" height="15" fill="rgb(252,49,23)" fg:x="267" fg:w="2"/><text x="3.5073%" y="399.50"></text></g><g><title>uct_rc_iface_t_init (2 samples, 0.02%)</title><rect x="3.2573%" y="373" width="0.0244%" height="15" fill="rgb(215,19,7)" fg:x="267" fg:w="2"/><text x="3.5073%" y="383.50"></text></g><g><title>uct_ib_iface_t_init (1 samples, 0.01%)</title><rect x="3.2695%" y="357" width="0.0122%" height="15" fill="rgb(238,81,41)" fg:x="268" fg:w="1"/><text x="3.5195%" y="367.50"></text></g><g><title>uct_ib_mlx5_create_cq (1 samples, 0.01%)</title><rect x="3.2695%" y="341" width="0.0122%" height="15" fill="rgb(210,199,37)" fg:x="268" fg:w="1"/><text x="3.5195%" y="351.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2695%" y="325" width="0.0122%" height="15" fill="rgb(244,192,49)" fg:x="268" fg:w="1"/><text x="3.5195%" y="335.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2695%" y="309" width="0.0122%" height="15" fill="rgb(226,211,11)" fg:x="268" fg:w="1"/><text x="3.5195%" y="319.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.2695%" y="293" width="0.0122%" height="15" fill="rgb(236,162,54)" fg:x="268" fg:w="1"/><text x="3.5195%" y="303.50"></text></g><g><title>__GI_memset (1 samples, 0.01%)</title><rect x="3.2695%" y="277" width="0.0122%" height="15" fill="rgb(220,229,9)" fg:x="268" fg:w="1"/><text x="3.5195%" y="287.50"></text></g><g><title>uct_rc_mlx5_iface_srq_post_recv (2 samples, 0.02%)</title><rect x="3.2817%" y="389" width="0.0244%" height="15" fill="rgb(250,87,22)" fg:x="269" fg:w="2"/><text x="3.5317%" y="399.50"></text></g><g><title>ucs_mpool_get_grow (1 samples, 0.01%)</title><rect x="3.2939%" y="373" width="0.0122%" height="15" fill="rgb(239,43,17)" fg:x="270" fg:w="1"/><text x="3.5439%" y="383.50"></text></g><g><title>ucs_mpool_grow (1 samples, 0.01%)</title><rect x="3.2939%" y="357" width="0.0122%" height="15" fill="rgb(231,177,25)" fg:x="270" fg:w="1"/><text x="3.5439%" y="367.50"></text></g><g><title>ucs_mpool_grow (1 samples, 0.01%)</title><rect x="3.3183%" y="373" width="0.0122%" height="15" fill="rgb(219,179,1)" fg:x="272" fg:w="1"/><text x="3.5683%" y="383.50"></text></g><g><title>uct_iface_mp_chunk_alloc (1 samples, 0.01%)</title><rect x="3.3183%" y="357" width="0.0122%" height="15" fill="rgb(238,219,53)" fg:x="272" fg:w="1"/><text x="3.5683%" y="367.50"></text></g><g><title>uct_iface_mem_alloc (1 samples, 0.01%)</title><rect x="3.3183%" y="341" width="0.0122%" height="15" fill="rgb(232,167,36)" fg:x="272" fg:w="1"/><text x="3.5683%" y="351.50"></text></g><g><title>uct_mem_alloc (1 samples, 0.01%)</title><rect x="3.3183%" y="325" width="0.0122%" height="15" fill="rgb(244,19,51)" fg:x="272" fg:w="1"/><text x="3.5683%" y="335.50"></text></g><g><title>uct_md_query (1 samples, 0.01%)</title><rect x="3.3183%" y="309" width="0.0122%" height="15" fill="rgb(224,6,22)" fg:x="272" fg:w="1"/><text x="3.5683%" y="319.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.3183%" y="293" width="0.0122%" height="15" fill="rgb(224,145,5)" fg:x="272" fg:w="1"/><text x="3.5683%" y="303.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.3183%" y="277" width="0.0122%" height="15" fill="rgb(234,130,49)" fg:x="272" fg:w="1"/><text x="3.5683%" y="287.50"></text></g><g><title>ucs_sys_cpuset_copy (1 samples, 0.01%)</title><rect x="3.3183%" y="261" width="0.0122%" height="15" fill="rgb(254,6,2)" fg:x="272" fg:w="1"/><text x="3.5683%" y="271.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.01%)</title><rect x="3.3427%" y="277" width="0.0122%" height="15" fill="rgb(208,96,46)" fg:x="274" fg:w="1"/><text x="3.5927%" y="287.50"></text></g><g><title>uct_ib_device_query_gid_info (3 samples, 0.04%)</title><rect x="3.3305%" y="373" width="0.0366%" height="15" fill="rgb(239,3,39)" fg:x="273" fg:w="3"/><text x="3.5805%" y="383.50"></text></g><g><title>ucs_read_file (3 samples, 0.04%)</title><rect x="3.3305%" y="357" width="0.0366%" height="15" fill="rgb(233,210,1)" fg:x="273" fg:w="3"/><text x="3.5805%" y="367.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.3305%" y="341" width="0.0366%" height="15" fill="rgb(244,137,37)" fg:x="273" fg:w="3"/><text x="3.5805%" y="351.50"></text></g><g><title>ucs_vsnprintf_safe (3 samples, 0.04%)</title><rect x="3.3305%" y="325" width="0.0366%" height="15" fill="rgb(240,136,2)" fg:x="273" fg:w="3"/><text x="3.5805%" y="335.50"></text></g><g><title>__vsnprintf_chk (3 samples, 0.04%)</title><rect x="3.3305%" y="309" width="0.0366%" height="15" fill="rgb(239,18,37)" fg:x="273" fg:w="3"/><text x="3.5805%" y="319.50"></text></g><g><title>_IO_vfprintf (3 samples, 0.04%)</title><rect x="3.3305%" y="293" width="0.0366%" height="15" fill="rgb(218,185,22)" fg:x="273" fg:w="3"/><text x="3.5805%" y="303.50"></text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="3.3549%" y="277" width="0.0122%" height="15" fill="rgb(225,218,4)" fg:x="275" fg:w="1"/><text x="3.6049%" y="287.50"></text></g><g><title>uct_ib_mlx5_create_cq (1 samples, 0.01%)</title><rect x="3.3671%" y="357" width="0.0122%" height="15" fill="rgb(230,182,32)" fg:x="276" fg:w="1"/><text x="3.6171%" y="367.50"></text></g><g><title>uct_ib_mlx5_fill_cq (1 samples, 0.01%)</title><rect x="3.3671%" y="341" width="0.0122%" height="15" fill="rgb(242,56,43)" fg:x="276" fg:w="1"/><text x="3.6171%" y="351.50"></text></g><g><title>uct_ib_mlx5_fill_cq_common (1 samples, 0.01%)</title><rect x="3.3671%" y="325" width="0.0122%" height="15" fill="rgb(233,99,24)" fg:x="276" fg:w="1"/><text x="3.6171%" y="335.50"></text></g><g><title>[libuct_ib.so.0.0.0] (15 samples, 0.18%)</title><rect x="3.2085%" y="405" width="0.1830%" height="15" fill="rgb(234,209,42)" fg:x="263" fg:w="15"/><text x="3.4585%" y="415.50"></text></g><g><title>uct_ud_iface_t_init (7 samples, 0.09%)</title><rect x="3.3061%" y="389" width="0.0854%" height="15" fill="rgb(227,7,12)" fg:x="271" fg:w="7"/><text x="3.5561%" y="399.50"></text></g><g><title>uct_ib_iface_t_init (2 samples, 0.02%)</title><rect x="3.3671%" y="373" width="0.0244%" height="15" fill="rgb(245,203,43)" fg:x="276" fg:w="2"/><text x="3.6171%" y="383.50"></text></g><g><title>uct_ib_verbs_create_cq (1 samples, 0.01%)</title><rect x="3.3793%" y="357" width="0.0122%" height="15" fill="rgb(238,205,33)" fg:x="277" fg:w="1"/><text x="3.6293%" y="367.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1 samples, 0.01%)</title><rect x="3.3793%" y="341" width="0.0122%" height="15" fill="rgb(231,56,7)" fg:x="277" fg:w="1"/><text x="3.6293%" y="351.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.3793%" y="325" width="0.0122%" height="15" fill="rgb(244,186,29)" fg:x="277" fg:w="1"/><text x="3.6293%" y="335.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.3793%" y="309" width="0.0122%" height="15" fill="rgb(234,111,31)" fg:x="277" fg:w="1"/><text x="3.6293%" y="319.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.3793%" y="293" width="0.0122%" height="15" fill="rgb(241,149,10)" fg:x="277" fg:w="1"/><text x="3.6293%" y="303.50"></text></g><g><title>__snprintf_chk (1 samples, 0.01%)</title><rect x="3.3793%" y="277" width="0.0122%" height="15" fill="rgb(249,206,44)" fg:x="277" fg:w="1"/><text x="3.6293%" y="287.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.3793%" y="261" width="0.0122%" height="15" fill="rgb(251,153,30)" fg:x="277" fg:w="1"/><text x="3.6293%" y="271.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.3793%" y="245" width="0.0122%" height="15" fill="rgb(239,152,38)" fg:x="277" fg:w="1"/><text x="3.6293%" y="255.50"></text></g><g><title>uct_ib_device_select_gid (1 samples, 0.01%)</title><rect x="3.3915%" y="341" width="0.0122%" height="15" fill="rgb(249,139,47)" fg:x="278" fg:w="1"/><text x="3.6415%" y="351.50"></text></g><g><title>uct_ib_device_test_roce_gid_index (1 samples, 0.01%)</title><rect x="3.3915%" y="325" width="0.0122%" height="15" fill="rgb(244,64,35)" fg:x="278" fg:w="1"/><text x="3.6415%" y="335.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.3915%" y="309" width="0.0122%" height="15" fill="rgb(216,46,15)" fg:x="278" fg:w="1"/><text x="3.6415%" y="319.50"></text></g><g><title>free (1 samples, 0.01%)</title><rect x="3.3915%" y="293" width="0.0122%" height="15" fill="rgb(250,74,19)" fg:x="278" fg:w="1"/><text x="3.6415%" y="303.50"></text></g><g><title>[libuct_ib.so.0.0.0] (17 samples, 0.21%)</title><rect x="3.2085%" y="421" width="0.2074%" height="15" fill="rgb(249,42,33)" fg:x="263" fg:w="17"/><text x="3.4585%" y="431.50"></text></g><g><title>uct_rc_mlx5_iface_t_init (2 samples, 0.02%)</title><rect x="3.3915%" y="405" width="0.0244%" height="15" fill="rgb(242,149,17)" fg:x="278" fg:w="2"/><text x="3.6415%" y="415.50"></text></g><g><title>uct_rc_mlx5_iface_common_t_init (2 samples, 0.02%)</title><rect x="3.3915%" y="389" width="0.0244%" height="15" fill="rgb(244,29,21)" fg:x="278" fg:w="2"/><text x="3.6415%" y="399.50"></text></g><g><title>uct_rc_iface_t_init (2 samples, 0.02%)</title><rect x="3.3915%" y="373" width="0.0244%" height="15" fill="rgb(220,130,37)" fg:x="278" fg:w="2"/><text x="3.6415%" y="383.50"></text></g><g><title>uct_ib_iface_t_init (2 samples, 0.02%)</title><rect x="3.3915%" y="357" width="0.0244%" height="15" fill="rgb(211,67,2)" fg:x="278" fg:w="2"/><text x="3.6415%" y="367.50"></text></g><g><title>uct_ib_mlx5_create_cq (1 samples, 0.01%)</title><rect x="3.4037%" y="341" width="0.0122%" height="15" fill="rgb(235,68,52)" fg:x="279" fg:w="1"/><text x="3.6537%" y="351.50"></text></g><g><title>uct_ib_mlx5_fill_cq (1 samples, 0.01%)</title><rect x="3.4037%" y="325" width="0.0122%" height="15" fill="rgb(246,142,3)" fg:x="279" fg:w="1"/><text x="3.6537%" y="335.50"></text></g><g><title>uct_ib_mlx5_fill_cq_common (1 samples, 0.01%)</title><rect x="3.4037%" y="309" width="0.0122%" height="15" fill="rgb(241,25,7)" fg:x="279" fg:w="1"/><text x="3.6537%" y="319.50"></text></g><g><title>ucs_vfs_obj_add_dir (1 samples, 0.01%)</title><rect x="3.4159%" y="421" width="0.0122%" height="15" fill="rgb(242,119,39)" fg:x="280" fg:w="1"/><text x="3.6659%" y="431.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.4159%" y="405" width="0.0122%" height="15" fill="rgb(241,98,45)" fg:x="280" fg:w="1"/><text x="3.6659%" y="415.50"></text></g><g><title>ucs_vsnprintf_safe (1 samples, 0.01%)</title><rect x="3.4159%" y="389" width="0.0122%" height="15" fill="rgb(254,28,30)" fg:x="280" fg:w="1"/><text x="3.6659%" y="399.50"></text></g><g><title>__vsnprintf_chk (1 samples, 0.01%)</title><rect x="3.4159%" y="373" width="0.0122%" height="15" fill="rgb(241,142,54)" fg:x="280" fg:w="1"/><text x="3.6659%" y="383.50"></text></g><g><title>_IO_vfprintf (1 samples, 0.01%)</title><rect x="3.4159%" y="357" width="0.0122%" height="15" fill="rgb(222,85,15)" fg:x="280" fg:w="1"/><text x="3.6659%" y="367.50"></text></g><g><title>uct_iface_open (19 samples, 0.23%)</title><rect x="3.2085%" y="437" width="0.2318%" height="15" fill="rgb(210,85,47)" fg:x="263" fg:w="19"/><text x="3.4585%" y="447.50"></text></g><g><title>uct_mm_iface_t_new (1 samples, 0.01%)</title><rect x="3.4281%" y="421" width="0.0122%" height="15" fill="rgb(224,206,25)" fg:x="281" fg:w="1"/><text x="3.6781%" y="431.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.4281%" y="405" width="0.0122%" height="15" fill="rgb(243,201,19)" fg:x="281" fg:w="1"/><text x="3.6781%" y="415.50"></text></g><g><title>ucs_mpool_get_grow (1 samples, 0.01%)</title><rect x="3.4281%" y="389" width="0.0122%" height="15" fill="rgb(236,59,4)" fg:x="281" fg:w="1"/><text x="3.6781%" y="399.50"></text></g><g><title>ucs_mpool_grow (1 samples, 0.01%)</title><rect x="3.4281%" y="373" width="0.0122%" height="15" fill="rgb(254,179,45)" fg:x="281" fg:w="1"/><text x="3.6781%" y="383.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.4281%" y="357" width="0.0122%" height="15" fill="rgb(226,14,10)" fg:x="281" fg:w="1"/><text x="3.6781%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.4281%" y="341" width="0.0122%" height="15" fill="rgb(244,27,41)" fg:x="281" fg:w="1"/><text x="3.6781%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.4281%" y="325" width="0.0122%" height="15" fill="rgb(235,35,32)" fg:x="281" fg:w="1"/><text x="3.6781%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.4281%" y="309" width="0.0122%" height="15" fill="rgb(218,68,31)" fg:x="281" fg:w="1"/><text x="3.6781%" y="319.50"></text></g><g><title>ucs_config_sscanf_bw (1 samples, 0.01%)</title><rect x="3.4647%" y="325" width="0.0122%" height="15" fill="rgb(207,120,37)" fg:x="284" fg:w="1"/><text x="3.7147%" y="335.50"></text></g><g><title>sscanf (1 samples, 0.01%)</title><rect x="3.4647%" y="309" width="0.0122%" height="15" fill="rgb(227,98,0)" fg:x="284" fg:w="1"/><text x="3.7147%" y="319.50"></text></g><g><title>__vsscanf (1 samples, 0.01%)</title><rect x="3.4647%" y="293" width="0.0122%" height="15" fill="rgb(207,7,3)" fg:x="284" fg:w="1"/><text x="3.7147%" y="303.50"></text></g><g><title>_IO_vfscanf (1 samples, 0.01%)</title><rect x="3.4647%" y="277" width="0.0122%" height="15" fill="rgb(206,98,19)" fg:x="284" fg:w="1"/><text x="3.7147%" y="287.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.4525%" y="341" width="0.0366%" height="15" fill="rgb(217,5,26)" fg:x="283" fg:w="3"/><text x="3.7025%" y="351.50"></text></g><g><title>ucs_config_sscanf_memunits (1 samples, 0.01%)</title><rect x="3.4769%" y="325" width="0.0122%" height="15" fill="rgb(235,190,38)" fg:x="285" fg:w="1"/><text x="3.7269%" y="335.50"></text></g><g><title>ucs_str_to_memunits (1 samples, 0.01%)</title><rect x="3.4769%" y="309" width="0.0122%" height="15" fill="rgb(247,86,24)" fg:x="285" fg:w="1"/><text x="3.7269%" y="319.50"></text></g><g><title>sscanf (1 samples, 0.01%)</title><rect x="3.4769%" y="293" width="0.0122%" height="15" fill="rgb(205,101,16)" fg:x="285" fg:w="1"/><text x="3.7269%" y="303.50"></text></g><g><title>__vsscanf (1 samples, 0.01%)</title><rect x="3.4769%" y="277" width="0.0122%" height="15" fill="rgb(246,168,33)" fg:x="285" fg:w="1"/><text x="3.7269%" y="287.50"></text></g><g><title>sscanf (1 samples, 0.01%)</title><rect x="3.4891%" y="309" width="0.0122%" height="15" fill="rgb(231,114,1)" fg:x="286" fg:w="1"/><text x="3.7391%" y="319.50"></text></g><g><title>__vsscanf (1 samples, 0.01%)</title><rect x="3.4891%" y="293" width="0.0122%" height="15" fill="rgb(207,184,53)" fg:x="286" fg:w="1"/><text x="3.7391%" y="303.50"></text></g><g><title>_IO_vfscanf (1 samples, 0.01%)</title><rect x="3.4891%" y="277" width="0.0122%" height="15" fill="rgb(224,95,51)" fg:x="286" fg:w="1"/><text x="3.7391%" y="287.50"></text></g><g><title>_IO_default_uflow (1 samples, 0.01%)</title><rect x="3.4891%" y="261" width="0.0122%" height="15" fill="rgb(212,188,45)" fg:x="286" fg:w="1"/><text x="3.7391%" y="271.50"></text></g><g><title>ucs_config_sscanf_enum (1 samples, 0.01%)</title><rect x="3.5013%" y="293" width="0.0122%" height="15" fill="rgb(223,154,38)" fg:x="287" fg:w="1"/><text x="3.7513%" y="303.50"></text></g><g><title>ucs_string_find_in_list (1 samples, 0.01%)</title><rect x="3.5013%" y="277" width="0.0122%" height="15" fill="rgb(251,22,52)" fg:x="287" fg:w="1"/><text x="3.7513%" y="287.50"></text></g><g><title>[libucp.so.0.0.0] (38 samples, 0.46%)</title><rect x="3.0621%" y="469" width="0.4636%" height="15" fill="rgb(229,209,22)" fg:x="251" fg:w="38"/><text x="3.3121%" y="479.50"></text></g><g><title>ucp_worker_iface_open (29 samples, 0.35%)</title><rect x="3.1719%" y="453" width="0.3538%" height="15" fill="rgb(234,138,34)" fg:x="260" fg:w="29"/><text x="3.4219%" y="463.50"></text></g><g><title>uct_md_iface_config_read (7 samples, 0.09%)</title><rect x="3.4403%" y="437" width="0.0854%" height="15" fill="rgb(212,95,11)" fg:x="282" fg:w="7"/><text x="3.6903%" y="447.50"></text></g><g><title>uct_config_read (7 samples, 0.09%)</title><rect x="3.4403%" y="421" width="0.0854%" height="15" fill="rgb(240,179,47)" fg:x="282" fg:w="7"/><text x="3.6903%" y="431.50"></text></g><g><title>ucs_config_parser_fill_opts (7 samples, 0.09%)</title><rect x="3.4403%" y="405" width="0.0854%" height="15" fill="rgb(240,163,11)" fg:x="282" fg:w="7"/><text x="3.6903%" y="415.50"></text></g><g><title>ucs_config_parser_set_default_values (7 samples, 0.09%)</title><rect x="3.4403%" y="389" width="0.0854%" height="15" fill="rgb(236,37,12)" fg:x="282" fg:w="7"/><text x="3.6903%" y="399.50"></text></g><g><title>ucs_config_parser_set_default_values (7 samples, 0.09%)</title><rect x="3.4403%" y="373" width="0.0854%" height="15" fill="rgb(232,164,16)" fg:x="282" fg:w="7"/><text x="3.6903%" y="383.50"></text></g><g><title>ucs_config_parser_set_default_values (7 samples, 0.09%)</title><rect x="3.4403%" y="357" width="0.0854%" height="15" fill="rgb(244,205,15)" fg:x="282" fg:w="7"/><text x="3.6903%" y="367.50"></text></g><g><title>ucs_config_parser_set_default_values (3 samples, 0.04%)</title><rect x="3.4891%" y="341" width="0.0366%" height="15" fill="rgb(223,117,47)" fg:x="286" fg:w="3"/><text x="3.7391%" y="351.50"></text></g><g><title>[libucs.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.4891%" y="325" width="0.0366%" height="15" fill="rgb(244,107,35)" fg:x="286" fg:w="3"/><text x="3.7391%" y="335.50"></text></g><g><title>ucs_config_sscanf_array (2 samples, 0.02%)</title><rect x="3.5013%" y="309" width="0.0244%" height="15" fill="rgb(205,140,8)" fg:x="287" fg:w="2"/><text x="3.7513%" y="319.50"></text></g><g><title>ucs_strdup (1 samples, 0.01%)</title><rect x="3.5135%" y="293" width="0.0122%" height="15" fill="rgb(228,84,46)" fg:x="288" fg:w="1"/><text x="3.7635%" y="303.50"></text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="3.5135%" y="277" width="0.0122%" height="15" fill="rgb(254,188,9)" fg:x="288" fg:w="1"/><text x="3.7635%" y="287.50"></text></g><g><title>ucs_config_parser_print_env_vars_once (1 samples, 0.01%)</title><rect x="3.5257%" y="469" width="0.0122%" height="15" fill="rgb(206,112,54)" fg:x="289" fg:w="1"/><text x="3.7757%" y="479.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.5257%" y="453" width="0.0122%" height="15" fill="rgb(216,84,49)" fg:x="289" fg:w="1"/><text x="3.7757%" y="463.50"></text></g><g><title>ucs_strdup (1 samples, 0.01%)</title><rect x="3.5257%" y="437" width="0.0122%" height="15" fill="rgb(214,194,35)" fg:x="289" fg:w="1"/><text x="3.7757%" y="447.50"></text></g><g><title>__strdup (1 samples, 0.01%)</title><rect x="3.5257%" y="421" width="0.0122%" height="15" fill="rgb(249,28,3)" fg:x="289" fg:w="1"/><text x="3.7757%" y="431.50"></text></g><g><title>strlen (1 samples, 0.01%)</title><rect x="3.5257%" y="405" width="0.0122%" height="15" fill="rgb(222,56,52)" fg:x="289" fg:w="1"/><text x="3.7757%" y="415.50"></text></g><g><title>ucs_malloc (1 samples, 0.01%)</title><rect x="3.5379%" y="437" width="0.0122%" height="15" fill="rgb(245,217,50)" fg:x="290" fg:w="1"/><text x="3.7879%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="3.5379%" y="421" width="0.0122%" height="15" fill="rgb(213,201,24)" fg:x="290" fg:w="1"/><text x="3.7879%" y="431.50"></text></g><g><title>ucs_mpool_set_init (2 samples, 0.02%)</title><rect x="3.5379%" y="469" width="0.0244%" height="15" fill="rgb(248,116,28)" fg:x="290" fg:w="2"/><text x="3.7879%" y="479.50"></text></g><g><title>ucs_mpool_init (2 samples, 0.02%)</title><rect x="3.5379%" y="453" width="0.0244%" height="15" fill="rgb(219,72,43)" fg:x="290" fg:w="2"/><text x="3.7879%" y="463.50"></text></g><g><title>ucs_strdup (1 samples, 0.01%)</title><rect x="3.5501%" y="437" width="0.0122%" height="15" fill="rgb(209,138,14)" fg:x="291" fg:w="1"/><text x="3.8001%" y="447.50"></text></g><g><title>nl_send_auto (1 samples, 0.01%)</title><rect x="3.5623%" y="389" width="0.0122%" height="15" fill="rgb(222,18,33)" fg:x="292" fg:w="1"/><text x="3.8123%" y="399.50"></text></g><g><title>nl_complete_msg (1 samples, 0.01%)</title><rect x="3.5623%" y="373" width="0.0122%" height="15" fill="rgb(213,199,7)" fg:x="292" fg:w="1"/><text x="3.8123%" y="383.50"></text></g><g><title>nl_socket_get_local_port (1 samples, 0.01%)</title><rect x="3.5623%" y="357" width="0.0122%" height="15" fill="rgb(250,110,10)" fg:x="292" fg:w="1"/><text x="3.8123%" y="367.50"></text></g><g><title>nl_socket_alloc (1 samples, 0.01%)</title><rect x="3.5745%" y="389" width="0.0122%" height="15" fill="rgb(248,123,6)" fg:x="293" fg:w="1"/><text x="3.8245%" y="399.50"></text></g><g><title>[libnl-3.so.200.26.0] (1 samples, 0.01%)</title><rect x="3.5745%" y="373" width="0.0122%" height="15" fill="rgb(206,91,31)" fg:x="293" fg:w="1"/><text x="3.8245%" y="383.50"></text></g><g><title>calloc (1 samples, 0.01%)</title><rect x="3.5745%" y="357" width="0.0122%" height="15" fill="rgb(211,154,13)" fg:x="293" fg:w="1"/><text x="3.8245%" y="367.50"></text></g><g><title>__GI_memset (2 samples, 0.02%)</title><rect x="3.5867%" y="325" width="0.0244%" height="15" fill="rgb(225,148,7)" fg:x="294" fg:w="2"/><text x="3.8367%" y="335.50"></text></g><g><title>mpicd::init (90 samples, 1.10%)</title><rect x="2.5253%" y="501" width="1.0980%" height="15" fill="rgb(220,160,43)" fg:x="207" fg:w="90"/><text x="2.7753%" y="511.50"></text></g><g><title>ucp_worker_create (46 samples, 0.56%)</title><rect x="3.0621%" y="485" width="0.5612%" height="15" fill="rgb(213,52,39)" fg:x="251" fg:w="46"/><text x="3.3121%" y="495.50"></text></g><g><title>uct_rdmacm_cm_t_new (5 samples, 0.06%)</title><rect x="3.5623%" y="469" width="0.0610%" height="15" fill="rgb(243,137,7)" fg:x="292" fg:w="5"/><text x="3.8123%" y="479.50"></text></g><g><title>uct_rdmacm_cm_t_init (5 samples, 0.06%)</title><rect x="3.5623%" y="453" width="0.0610%" height="15" fill="rgb(230,79,13)" fg:x="292" fg:w="5"/><text x="3.8123%" y="463.50"></text></g><g><title>rdma_create_event_channel (5 samples, 0.06%)</title><rect x="3.5623%" y="437" width="0.0610%" height="15" fill="rgb(247,105,23)" fg:x="292" fg:w="5"/><text x="3.8123%" y="447.50"></text></g><g><title>[librdmacm.so.1.3.43.0] (5 samples, 0.06%)</title><rect x="3.5623%" y="421" width="0.0610%" height="15" fill="rgb(223,179,41)" fg:x="292" fg:w="5"/><text x="3.8123%" y="431.50"></text></g><g><title>[librdmacm.so.1.3.43.0] (5 samples, 0.06%)</title><rect x="3.5623%" y="405" width="0.0610%" height="15" fill="rgb(218,9,34)" fg:x="292" fg:w="5"/><text x="3.8123%" y="415.50"></text></g><g><title>nlmsg_alloc_simple (3 samples, 0.04%)</title><rect x="3.5867%" y="389" width="0.0366%" height="15" fill="rgb(222,106,8)" fg:x="294" fg:w="3"/><text x="3.8367%" y="399.50"></text></g><g><title>nlmsg_inherit (3 samples, 0.04%)</title><rect x="3.5867%" y="373" width="0.0366%" height="15" fill="rgb(211,220,0)" fg:x="294" fg:w="3"/><text x="3.8367%" y="383.50"></text></g><g><title>[libnl-3.so.200.26.0] (3 samples, 0.04%)</title><rect x="3.5867%" y="357" width="0.0366%" height="15" fill="rgb(229,52,16)" fg:x="294" fg:w="3"/><text x="3.8367%" y="367.50"></text></g><g><title>calloc (3 samples, 0.04%)</title><rect x="3.5867%" y="341" width="0.0366%" height="15" fill="rgb(212,155,18)" fg:x="294" fg:w="3"/><text x="3.8367%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="3.6111%" y="325" width="0.0122%" height="15" fill="rgb(242,21,14)" fg:x="296" fg:w="1"/><text x="3.8611%" y="335.50"></text></g><g><title>ucs_mpool_cleanup (1 samples, 0.01%)</title><rect x="3.6233%" y="341" width="0.0122%" height="15" fill="rgb(222,19,48)" fg:x="297" fg:w="1"/><text x="3.8733%" y="351.50"></text></g><g><title>ucp_worker_iface_cleanup (2 samples, 0.02%)</title><rect x="3.6233%" y="405" width="0.0244%" height="15" fill="rgb(232,45,27)" fg:x="297" fg:w="2"/><text x="3.8733%" y="415.50"></text></g><g><title>[libuct_ib.so.0.0.0] (2 samples, 0.02%)</title><rect x="3.6233%" y="389" width="0.0244%" height="15" fill="rgb(249,103,42)" fg:x="297" fg:w="2"/><text x="3.8733%" y="399.50"></text></g><g><title>ucs_class_call_cleanup_chain (2 samples, 0.02%)</title><rect x="3.6233%" y="373" width="0.0244%" height="15" fill="rgb(246,81,33)" fg:x="297" fg:w="2"/><text x="3.8733%" y="383.50"></text></g><g><title>[libuct_ib.so.0.0.0] (2 samples, 0.02%)</title><rect x="3.6233%" y="357" width="0.0244%" height="15" fill="rgb(252,33,42)" fg:x="297" fg:w="2"/><text x="3.8733%" y="367.50"></text></g><g><title>uct_ib_verbs_destroy_cq (1 samples, 0.01%)</title><rect x="3.6355%" y="341" width="0.0122%" height="15" fill="rgb(209,212,41)" fg:x="298" fg:w="1"/><text x="3.8855%" y="351.50"></text></g><g><title>ibv_destroy_cq (1 samples, 0.01%)</title><rect x="3.6355%" y="325" width="0.0122%" height="15" fill="rgb(207,154,6)" fg:x="298" fg:w="1"/><text x="3.8855%" y="335.50"></text></g><g><title>[libmlx5.so.1.24.43.0] (1 samples, 0.01%)</title><rect x="3.6355%" y="309" width="0.0122%" height="15" fill="rgb(223,64,47)" fg:x="298" fg:w="1"/><text x="3.8855%" y="319.50"></text></g><g><title>ibv_cmd_destroy_cq (1 samples, 0.01%)</title><rect x="3.6355%" y="293" width="0.0122%" height="15" fill="rgb(211,161,38)" fg:x="298" fg:w="1"/><text x="3.8855%" y="303.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.01%)</title><rect x="3.6355%" y="277" width="0.0122%" height="15" fill="rgb(219,138,40)" fg:x="298" fg:w="1"/><text x="3.8855%" y="287.50"></text></g><g><title>&lt;mpicd::System as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="3.6233%" y="453" width="0.0366%" height="15" fill="rgb(241,228,46)" fg:x="297" fg:w="3"/><text x="3.8733%" y="463.50"></text></g><g><title>ucp_worker_destroy (3 samples, 0.04%)</title><rect x="3.6233%" y="437" width="0.0366%" height="15" fill="rgb(223,209,38)" fg:x="297" fg:w="3"/><text x="3.8733%" y="447.50"></text></g><g><title>[libucp.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.6233%" y="421" width="0.0366%" height="15" fill="rgb(236,164,45)" fg:x="297" fg:w="3"/><text x="3.8733%" y="431.50"></text></g><g><title>ucs_mpool_set_cleanup (1 samples, 0.01%)</title><rect x="3.6477%" y="405" width="0.0122%" height="15" fill="rgb(231,15,5)" fg:x="299" fg:w="1"/><text x="3.8977%" y="415.50"></text></g><g><title>ucs_mpool_cleanup (1 samples, 0.01%)</title><rect x="3.6477%" y="389" width="0.0122%" height="15" fill="rgb(252,35,15)" fg:x="299" fg:w="1"/><text x="3.8977%" y="399.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.6477%" y="373" width="0.0122%" height="15" fill="rgb(248,181,18)" fg:x="299" fg:w="1"/><text x="3.8977%" y="383.50"></text></g><g><title>pmix_mca_base_close (1 samples, 0.01%)</title><rect x="3.6599%" y="421" width="0.0122%" height="15" fill="rgb(233,39,42)" fg:x="300" fg:w="1"/><text x="3.9099%" y="431.50"></text></g><g><title>pmix_mca_base_component_repository_finalize (1 samples, 0.01%)</title><rect x="3.6599%" y="405" width="0.0122%" height="15" fill="rgb(238,110,33)" fg:x="300" fg:w="1"/><text x="3.9099%" y="415.50"></text></g><g><title>pmix_mca_base_component_repository_finalize (1 samples, 0.01%)</title><rect x="3.6599%" y="389" width="0.0122%" height="15" fill="rgb(233,195,10)" fg:x="300" fg:w="1"/><text x="3.9099%" y="399.50"></text></g><g><title>_dl_runtime_resolve (1 samples, 0.01%)</title><rect x="3.6599%" y="373" width="0.0122%" height="15" fill="rgb(254,105,3)" fg:x="300" fg:w="1"/><text x="3.9099%" y="383.50"></text></g><g><title>_dl_fixup (1 samples, 0.01%)</title><rect x="3.6599%" y="357" width="0.0122%" height="15" fill="rgb(221,225,9)" fg:x="300" fg:w="1"/><text x="3.9099%" y="367.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="3.6599%" y="341" width="0.0122%" height="15" fill="rgb(224,227,45)" fg:x="300" fg:w="1"/><text x="3.9099%" y="351.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="3.6599%" y="325" width="0.0122%" height="15" fill="rgb(229,198,43)" fg:x="300" fg:w="1"/><text x="3.9099%" y="335.50"></text></g><g><title>check_match (1 samples, 0.01%)</title><rect x="3.6599%" y="309" width="0.0122%" height="15" fill="rgb(206,209,35)" fg:x="300" fg:w="1"/><text x="3.9099%" y="319.50"></text></g><g><title>pmix_bfrop_close (1 samples, 0.01%)</title><rect x="3.6721%" y="389" width="0.0122%" height="15" fill="rgb(245,195,53)" fg:x="301" fg:w="1"/><text x="3.9221%" y="399.50"></text></g><g><title>finalize (1 samples, 0.01%)</title><rect x="3.6721%" y="373" width="0.0122%" height="15" fill="rgb(240,92,26)" fg:x="301" fg:w="1"/><text x="3.9221%" y="383.50"></text></g><g><title>pmix_pointer_array_set_item (1 samples, 0.01%)</title><rect x="3.6721%" y="357" width="0.0122%" height="15" fill="rgb(207,40,23)" fg:x="301" fg:w="1"/><text x="3.9221%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="3.6843%" y="69" width="0.0122%" height="15" fill="rgb(223,111,35)" fg:x="302" fg:w="1"/><text x="3.9343%" y="79.50"></text></g><g><title>&lt;mpicd::pmi::PMI as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="3.6599%" y="453" width="0.0488%" height="15" fill="rgb(229,147,28)" fg:x="300" fg:w="4"/><text x="3.9099%" y="463.50"></text></g><g><title>PMIx_Finalize (4 samples, 0.05%)</title><rect x="3.6599%" y="437" width="0.0488%" height="15" fill="rgb(211,29,28)" fg:x="300" fg:w="4"/><text x="3.9099%" y="447.50"></text></g><g><title>pmix_rte_finalize (3 samples, 0.04%)</title><rect x="3.6721%" y="421" width="0.0366%" height="15" fill="rgb(228,72,33)" fg:x="301" fg:w="3"/><text x="3.9221%" y="431.50"></text></g><g><title>pmix_mca_base_framework_close (3 samples, 0.04%)</title><rect x="3.6721%" y="405" width="0.0366%" height="15" fill="rgb(205,214,31)" fg:x="301" fg:w="3"/><text x="3.9221%" y="415.50"></text></g><g><title>pmix_gds_close (2 samples, 0.02%)</title><rect x="3.6843%" y="389" width="0.0244%" height="15" fill="rgb(224,111,15)" fg:x="302" fg:w="2"/><text x="3.9343%" y="399.50"></text></g><g><title>hash_finalize (2 samples, 0.02%)</title><rect x="3.6843%" y="373" width="0.0244%" height="15" fill="rgb(253,21,26)" fg:x="302" fg:w="2"/><text x="3.9343%" y="383.50"></text></g><g><title>htdes (2 samples, 0.02%)</title><rect x="3.6843%" y="357" width="0.0244%" height="15" fill="rgb(245,139,43)" fg:x="302" fg:w="2"/><text x="3.9343%" y="367.50"></text></g><g><title>pmix_hash_remove_data (2 samples, 0.02%)</title><rect x="3.6843%" y="341" width="0.0244%" height="15" fill="rgb(252,170,7)" fg:x="302" fg:w="2"/><text x="3.9343%" y="351.50"></text></g><g><title>pddes (2 samples, 0.02%)</title><rect x="3.6843%" y="325" width="0.0244%" height="15" fill="rgb(231,118,14)" fg:x="302" fg:w="2"/><text x="3.9343%" y="335.50"></text></g><g><title>pmix_dstor_release_tma (2 samples, 0.02%)</title><rect x="3.6843%" y="309" width="0.0244%" height="15" fill="rgb(238,83,0)" fg:x="302" fg:w="2"/><text x="3.9343%" y="319.50"></text></g><g><title>pmix_bfrops_base_tma_value_destruct (2 samples, 0.02%)</title><rect x="3.6843%" y="293" width="0.0244%" height="15" fill="rgb(221,39,39)" fg:x="302" fg:w="2"/><text x="3.9343%" y="303.50"></text></g><g><title>pmix_hwloc_release_topology (2 samples, 0.02%)</title><rect x="3.6843%" y="277" width="0.0244%" height="15" fill="rgb(222,119,46)" fg:x="302" fg:w="2"/><text x="3.9343%" y="287.50"></text></g><g><title>pmix_hwloc_destruct_topology (2 samples, 0.02%)</title><rect x="3.6843%" y="261" width="0.0244%" height="15" fill="rgb(222,165,49)" fg:x="302" fg:w="2"/><text x="3.9343%" y="271.50"></text></g><g><title>hwloc_topology_destroy (2 samples, 0.02%)</title><rect x="3.6843%" y="245" width="0.0244%" height="15" fill="rgb(219,113,52)" fg:x="302" fg:w="2"/><text x="3.9343%" y="255.50"></text></g><g><title>hwloc_topology_destroy (2 samples, 0.02%)</title><rect x="3.6843%" y="229" width="0.0244%" height="15" fill="rgb(214,7,15)" fg:x="302" fg:w="2"/><text x="3.9343%" y="239.50"></text></g><g><title>hwloc_topology_clear (2 samples, 0.02%)</title><rect x="3.6843%" y="213" width="0.0244%" height="15" fill="rgb(235,32,4)" fg:x="302" fg:w="2"/><text x="3.9343%" y="223.50"></text></g><g><title>hwloc_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="197" width="0.0244%" height="15" fill="rgb(238,90,54)" fg:x="302" fg:w="2"/><text x="3.9343%" y="207.50"></text></g><g><title>unlink_and_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="181" width="0.0244%" height="15" fill="rgb(213,208,19)" fg:x="302" fg:w="2"/><text x="3.9343%" y="191.50"></text></g><g><title>unlink_and_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="165" width="0.0244%" height="15" fill="rgb(233,156,4)" fg:x="302" fg:w="2"/><text x="3.9343%" y="175.50"></text></g><g><title>unlink_and_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="149" width="0.0244%" height="15" fill="rgb(207,194,5)" fg:x="302" fg:w="2"/><text x="3.9343%" y="159.50"></text></g><g><title>unlink_and_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="133" width="0.0244%" height="15" fill="rgb(206,111,30)" fg:x="302" fg:w="2"/><text x="3.9343%" y="143.50"></text></g><g><title>unlink_and_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="117" width="0.0244%" height="15" fill="rgb(243,70,54)" fg:x="302" fg:w="2"/><text x="3.9343%" y="127.50"></text></g><g><title>unlink_and_free_object_and_children (2 samples, 0.02%)</title><rect x="3.6843%" y="101" width="0.0244%" height="15" fill="rgb(242,28,8)" fg:x="302" fg:w="2"/><text x="3.9343%" y="111.50"></text></g><g><title>hwloc_free_unlinked_object (2 samples, 0.02%)</title><rect x="3.6843%" y="85" width="0.0244%" height="15" fill="rgb(219,106,18)" fg:x="302" fg:w="2"/><text x="3.9343%" y="95.50"></text></g><g><title>hwloc__free_object_contents (1 samples, 0.01%)</title><rect x="3.6965%" y="69" width="0.0122%" height="15" fill="rgb(244,222,10)" fg:x="303" fg:w="1"/><text x="3.9465%" y="79.50"></text></g><g><title>hwloc__free_infos (1 samples, 0.01%)</title><rect x="3.6965%" y="53" width="0.0122%" height="15" fill="rgb(236,179,52)" fg:x="303" fg:w="1"/><text x="3.9465%" y="63.50"></text></g><g><title>free (1 samples, 0.01%)</title><rect x="3.6965%" y="37" width="0.0122%" height="15" fill="rgb(213,23,39)" fg:x="303" fg:w="1"/><text x="3.9465%" y="47.50"></text></g><g><title>[libucp.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.7087%" y="421" width="0.0122%" height="15" fill="rgb(238,48,10)" fg:x="304" fg:w="1"/><text x="3.9587%" y="431.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.7209%" y="341" width="0.0122%" height="15" fill="rgb(251,196,23)" fg:x="305" fg:w="1"/><text x="3.9709%" y="351.50"></text></g><g><title>ucs_mem_region_destroy_internal (1 samples, 0.01%)</title><rect x="3.7209%" y="325" width="0.0122%" height="15" fill="rgb(250,152,24)" fg:x="305" fg:w="1"/><text x="3.9709%" y="335.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.7209%" y="309" width="0.0122%" height="15" fill="rgb(209,150,17)" fg:x="305" fg:w="1"/><text x="3.9709%" y="319.50"></text></g><g><title>uct_ib_dereg_mr (1 samples, 0.01%)</title><rect x="3.7209%" y="293" width="0.0122%" height="15" fill="rgb(234,202,34)" fg:x="305" fg:w="1"/><text x="3.9709%" y="303.50"></text></g><g><title>ibv_dereg_mr (1 samples, 0.01%)</title><rect x="3.7209%" y="277" width="0.0122%" height="15" fill="rgb(253,148,53)" fg:x="305" fg:w="1"/><text x="3.9709%" y="287.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1 samples, 0.01%)</title><rect x="3.7209%" y="261" width="0.0122%" height="15" fill="rgb(218,129,16)" fg:x="305" fg:w="1"/><text x="3.9709%" y="271.50"></text></g><g><title>[libibverbs.so.1.14.43.0] (1 samples, 0.01%)</title><rect x="3.7209%" y="245" width="0.0122%" height="15" fill="rgb(216,85,19)" fg:x="305" fg:w="1"/><text x="3.9709%" y="255.50"></text></g><g><title>ucm_madvise (1 samples, 0.01%)</title><rect x="3.7209%" y="229" width="0.0122%" height="15" fill="rgb(235,228,7)" fg:x="305" fg:w="1"/><text x="3.9709%" y="239.50"></text></g><g><title>ucm_event_dispatch (1 samples, 0.01%)</title><rect x="3.7209%" y="213" width="0.0122%" height="15" fill="rgb(245,175,0)" fg:x="305" fg:w="1"/><text x="3.9709%" y="223.50"></text></g><g><title>[libucm.so.0.0.0] (1 samples, 0.01%)</title><rect x="3.7209%" y="197" width="0.0122%" height="15" fill="rgb(208,168,36)" fg:x="305" fg:w="1"/><text x="3.9709%" y="207.50"></text></g><g><title>ucm_orig_madvise_syscall (1 samples, 0.01%)</title><rect x="3.7209%" y="181" width="0.0122%" height="15" fill="rgb(246,171,24)" fg:x="305" fg:w="1"/><text x="3.9709%" y="191.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="3.7209%" y="165" width="0.0122%" height="15" fill="rgb(215,142,24)" fg:x="305" fg:w="1"/><text x="3.9709%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.7209%" y="149" width="0.0122%" height="15" fill="rgb(250,187,7)" fg:x="305" fg:w="1"/><text x="3.9709%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.7209%" y="133" width="0.0122%" height="15" fill="rgb(228,66,33)" fg:x="305" fg:w="1"/><text x="3.9709%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="3.7209%" y="117" width="0.0122%" height="15" fill="rgb(234,215,21)" fg:x="305" fg:w="1"/><text x="3.9709%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="3.6233%" y="485" width="0.1220%" height="15" fill="rgb(222,191,20)" fg:x="297" fg:w="10"/><text x="3.8733%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::System&gt; (10 samples, 0.12%)</title><rect x="3.6233%" y="469" width="0.1220%" height="15" fill="rgb(245,79,54)" fg:x="297" fg:w="10"/><text x="3.8733%" y="479.50"></text></g><g><title>ucp_cleanup (3 samples, 0.04%)</title><rect x="3.7087%" y="453" width="0.0366%" height="15" fill="rgb(240,10,37)" fg:x="304" fg:w="3"/><text x="3.9587%" y="463.50"></text></g><g><title>[libucp.so.0.0.0] (3 samples, 0.04%)</title><rect x="3.7087%" y="437" width="0.0366%" height="15" fill="rgb(214,192,32)" fg:x="304" fg:w="3"/><text x="3.9587%" y="447.50"></text></g><g><title>uct_ib_md_cleanup (2 samples, 0.02%)</title><rect x="3.7209%" y="421" width="0.0244%" height="15" fill="rgb(209,36,54)" fg:x="305" fg:w="2"/><text x="3.9709%" y="431.50"></text></g><g><title>uct_ib_md_close_common (2 samples, 0.02%)</title><rect x="3.7209%" y="405" width="0.0244%" height="15" fill="rgb(220,10,11)" fg:x="305" fg:w="2"/><text x="3.9709%" y="415.50"></text></g><g><title>ucs_rcache_destroy (2 samples, 0.02%)</title><rect x="3.7209%" y="389" width="0.0244%" height="15" fill="rgb(221,106,17)" fg:x="305" fg:w="2"/><text x="3.9709%" y="399.50"></text></g><g><title>ucs_class_call_cleanup_chain (2 samples, 0.02%)</title><rect x="3.7209%" y="373" width="0.0244%" height="15" fill="rgb(251,142,44)" fg:x="305" fg:w="2"/><text x="3.9709%" y="383.50"></text></g><g><title>[libucs.so.0.0.0] (2 samples, 0.02%)</title><rect x="3.7209%" y="357" width="0.0244%" height="15" fill="rgb(238,13,15)" fg:x="305" fg:w="2"/><text x="3.9709%" y="367.50"></text></g><g><title>ucs_mem_region_destroy_internal (1 samples, 0.01%)</title><rect x="3.7331%" y="341" width="0.0122%" height="15" fill="rgb(208,107,27)" fg:x="306" fg:w="1"/><text x="3.9831%" y="351.50"></text></g><g><title>pthread_spin_lock (1 samples, 0.01%)</title><rect x="3.7331%" y="325" width="0.0122%" height="15" fill="rgb(205,136,37)" fg:x="306" fg:w="1"/><text x="3.9831%" y="335.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.01%)</title><rect x="3.7941%" y="469" width="0.0122%" height="15" fill="rgb(250,205,27)" fg:x="311" fg:w="1"/><text x="4.0441%" y="479.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::ComplexVec as mpicd::datatype::MessageBuffer&gt;::unpack (2 samples, 0.02%)</title><rect x="3.8185%" y="453" width="0.0244%" height="15" fill="rgb(210,80,43)" fg:x="313" fg:w="2"/><text x="4.0685%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="3.8307%" y="437" width="0.0122%" height="15" fill="rgb(247,160,36)" fg:x="314" fg:w="1"/><text x="4.0807%" y="447.50"></text></g><g><title>mpicd::Handle::add_message (1 samples, 0.01%)</title><rect x="3.8429%" y="453" width="0.0122%" height="15" fill="rgb(234,13,49)" fg:x="315" fg:w="1"/><text x="4.0929%" y="463.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::irecv (6 samples, 0.07%)</title><rect x="3.8063%" y="469" width="0.0732%" height="15" fill="rgb(234,122,0)" fg:x="312" fg:w="6"/><text x="4.0563%" y="479.50"></text></g><g><title>mpicd::message::PackRecvMessage::new (2 samples, 0.02%)</title><rect x="3.8551%" y="453" width="0.0244%" height="15" fill="rgb(207,146,38)" fg:x="316" fg:w="2"/><text x="4.1051%" y="463.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecArray as mpicd::datatype::MessageBuffer&gt;::pack (44 samples, 0.54%)</title><rect x="4.0137%" y="453" width="0.5368%" height="15" fill="rgb(207,177,25)" fg:x="329" fg:w="44"/><text x="4.2637%" y="463.50"></text></g><g><title>__libc_malloc (40 samples, 0.49%)</title><rect x="4.0625%" y="437" width="0.4880%" height="15" fill="rgb(211,178,42)" fg:x="333" fg:w="40"/><text x="4.3125%" y="447.50"></text></g><g><title>_int_malloc (23 samples, 0.28%)</title><rect x="4.2699%" y="421" width="0.2806%" height="15" fill="rgb(230,69,54)" fg:x="350" fg:w="23"/><text x="4.5199%" y="431.50"></text></g><g><title>__aarch64_cas8_acq (1 samples, 0.01%)</title><rect x="4.5382%" y="405" width="0.0122%" height="15" fill="rgb(214,135,41)" fg:x="372" fg:w="1"/><text x="4.7882%" y="415.50"></text></g><g><title>__libc_malloc (29 samples, 0.35%)</title><rect x="4.6602%" y="437" width="0.3538%" height="15" fill="rgb(237,67,25)" fg:x="382" fg:w="29"/><text x="4.9102%" y="447.50"></text></g><g><title>_int_malloc (16 samples, 0.20%)</title><rect x="4.8188%" y="421" width="0.1952%" height="15" fill="rgb(222,189,50)" fg:x="395" fg:w="16"/><text x="5.0688%" y="431.50"></text></g><g><title>mpicd::Handle::add_message (40 samples, 0.49%)</title><rect x="4.5504%" y="453" width="0.4880%" height="15" fill="rgb(245,148,34)" fg:x="373" fg:w="40"/><text x="4.8004%" y="463.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="5.0140%" y="437" width="0.0244%" height="15" fill="rgb(222,29,6)" fg:x="411" fg:w="2"/><text x="5.2640%" y="447.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::PackedSize&gt;::packed_size (2 samples, 0.02%)</title><rect x="5.0872%" y="437" width="0.0244%" height="15" fill="rgb(221,189,43)" fg:x="417" fg:w="2"/><text x="5.3372%" y="447.50"></text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.04%)</title><rect x="5.1116%" y="437" width="0.0366%" height="15" fill="rgb(207,36,27)" fg:x="419" fg:w="3"/><text x="5.3616%" y="447.50"></text></g><g><title>__GI_memset (2 samples, 0.02%)</title><rect x="5.8314%" y="421" width="0.0244%" height="15" fill="rgb(217,90,24)" fg:x="478" fg:w="2"/><text x="6.0814%" y="431.50"></text></g><g><title>__aarch64_swp4_rel (3 samples, 0.04%)</title><rect x="5.8558%" y="421" width="0.0366%" height="15" fill="rgb(224,66,35)" fg:x="480" fg:w="3"/><text x="6.1058%" y="431.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::isend (183 samples, 2.23%)</title><rect x="3.8795%" y="469" width="2.2325%" height="15" fill="rgb(221,13,50)" fg:x="318" fg:w="183"/><text x="4.1295%" y="479.50">&lt;..</text></g><g><title>mpicd::message::PackSendMessage::new (88 samples, 1.07%)</title><rect x="5.0384%" y="453" width="1.0736%" height="15" fill="rgb(236,68,49)" fg:x="413" fg:w="88"/><text x="5.2884%" y="463.50"></text></g><g><title>calloc (79 samples, 0.96%)</title><rect x="5.1482%" y="437" width="0.9638%" height="15" fill="rgb(229,146,28)" fg:x="422" fg:w="79"/><text x="5.3982%" y="447.50"></text></g><g><title>_int_malloc (18 samples, 0.22%)</title><rect x="5.8924%" y="421" width="0.2196%" height="15" fill="rgb(225,31,38)" fg:x="483" fg:w="18"/><text x="6.1424%" y="431.50"></text></g><g><title>__aarch64_cas8_acq (1 samples, 0.01%)</title><rect x="6.0998%" y="405" width="0.0122%" height="15" fill="rgb(250,208,3)" fg:x="500" fg:w="1"/><text x="6.3498%" y="415.50"></text></g><g><title>malloc_consolidate (15 samples, 0.18%)</title><rect x="6.7098%" y="405" width="0.1830%" height="15" fill="rgb(246,54,23)" fg:x="550" fg:w="15"/><text x="6.9598%" y="415.50"></text></g><g><title>__libc_malloc (32 samples, 0.39%)</title><rect x="6.5146%" y="437" width="0.3904%" height="15" fill="rgb(243,76,11)" fg:x="534" fg:w="32"/><text x="6.7646%" y="447.50"></text></g><g><title>_int_malloc (30 samples, 0.37%)</title><rect x="6.5390%" y="421" width="0.3660%" height="15" fill="rgb(245,21,50)" fg:x="536" fg:w="30"/><text x="6.7890%" y="431.50"></text></g><g><title>unlink_chunk.isra.2 (1 samples, 0.01%)</title><rect x="6.8928%" y="405" width="0.0122%" height="15" fill="rgb(228,9,43)" fg:x="565" fg:w="1"/><text x="7.1428%" y="415.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (35 samples, 0.43%)</title><rect x="6.5146%" y="453" width="0.4270%" height="15" fill="rgb(208,100,47)" fg:x="534" fg:w="35"/><text x="6.7646%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.04%)</title><rect x="6.9050%" y="437" width="0.0366%" height="15" fill="rgb(232,26,8)" fg:x="566" fg:w="3"/><text x="7.1550%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="6.9904%" y="437" width="0.0122%" height="15" fill="rgb(216,166,38)" fg:x="573" fg:w="1"/><text x="7.2404%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="7.0026%" y="437" width="0.0122%" height="15" fill="rgb(251,202,51)" fg:x="574" fg:w="1"/><text x="7.2526%" y="447.50"></text></g><g><title>free (1 samples, 0.01%)</title><rect x="7.0148%" y="437" width="0.0122%" height="15" fill="rgb(254,216,34)" fg:x="575" fg:w="1"/><text x="7.2648%" y="447.50"></text></g><g><title>ucp_tag_recv_nbx (5 samples, 0.06%)</title><rect x="7.0270%" y="437" width="0.0610%" height="15" fill="rgb(251,32,27)" fg:x="576" fg:w="5"/><text x="7.2770%" y="447.50"></text></g><g><title>ucp_dt_iov_scatter (1 samples, 0.01%)</title><rect x="7.0758%" y="421" width="0.0122%" height="15" fill="rgb(208,127,28)" fg:x="580" fg:w="1"/><text x="7.3258%" y="431.50"></text></g><g><title>&lt;mpicd::message::PackRecvMessage as mpicd::message::Message&gt;::progress (30 samples, 0.37%)</title><rect x="6.9416%" y="453" width="0.3660%" height="15" fill="rgb(224,137,22)" fg:x="569" fg:w="30"/><text x="7.1916%" y="463.50"></text></g><g><title>ucp_worker_progress (18 samples, 0.22%)</title><rect x="7.0880%" y="437" width="0.2196%" height="15" fill="rgb(254,70,32)" fg:x="581" fg:w="18"/><text x="7.3380%" y="447.50"></text></g><g><title>[libuct_ib.so.0.0.0] (16 samples, 0.20%)</title><rect x="7.1124%" y="421" width="0.1952%" height="15" fill="rgb(229,75,37)" fg:x="583" fg:w="16"/><text x="7.3624%" y="431.50"></text></g><g><title>pthread_spin_lock (4 samples, 0.05%)</title><rect x="7.2588%" y="405" width="0.0488%" height="15" fill="rgb(252,64,23)" fg:x="595" fg:w="4"/><text x="7.5088%" y="415.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::PackMethod&gt;::pack (40 samples, 0.49%)</title><rect x="8.5275%" y="437" width="0.4880%" height="15" fill="rgb(232,162,48)" fg:x="699" fg:w="40"/><text x="8.7775%" y="447.50"></text></g><g><title>__libc_malloc (26 samples, 0.32%)</title><rect x="9.4059%" y="421" width="0.3172%" height="15" fill="rgb(246,160,12)" fg:x="771" fg:w="26"/><text x="9.6559%" y="431.50"></text></g><g><title>&lt;mpicd_rust_benchmarks::datatype::StructVecState as mpicd::datatype::UnpackMethod&gt;::memory_regions (61 samples, 0.74%)</title><rect x="9.0155%" y="437" width="0.7442%" height="15" fill="rgb(247,166,0)" fg:x="739" fg:w="61"/><text x="9.2655%" y="447.50"></text></g><g><title>__rdl_alloc (3 samples, 0.04%)</title><rect x="9.7231%" y="421" width="0.0366%" height="15" fill="rgb(249,219,21)" fg:x="797" fg:w="3"/><text x="9.9731%" y="431.50"></text></g><g><title>&lt;mpicd_ucx_sys::ucp_request_param_t as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="9.7597%" y="437" width="0.0244%" height="15" fill="rgb(205,209,3)" fg:x="800" fg:w="2"/><text x="10.0097%" y="447.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.01%)</title><rect x="10.2477%" y="421" width="0.0122%" height="15" fill="rgb(243,44,1)" fg:x="840" fg:w="1"/><text x="10.4977%" y="431.50"></text></g><g><title>__libc_malloc (69 samples, 0.84%)</title><rect x="9.7841%" y="437" width="0.8418%" height="15" fill="rgb(206,159,16)" fg:x="802" fg:w="69"/><text x="10.0341%" y="447.50"></text></g><g><title>_int_malloc (30 samples, 0.37%)</title><rect x="10.2599%" y="421" width="0.3660%" height="15" fill="rgb(244,77,30)" fg:x="841" fg:w="30"/><text x="10.5099%" y="431.50"></text></g><g><title>unlink_chunk.isra.2 (6 samples, 0.07%)</title><rect x="10.5526%" y="405" width="0.0732%" height="15" fill="rgb(218,69,12)" fg:x="865" fg:w="6"/><text x="10.8026%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="10.6258%" y="437" width="0.0122%" height="15" fill="rgb(212,87,7)" fg:x="871" fg:w="1"/><text x="10.8758%" y="447.50"></text></g><g><title>_int_free (16 samples, 0.20%)</title><rect x="10.6380%" y="437" width="0.1952%" height="15" fill="rgb(245,114,25)" fg:x="872" fg:w="16"/><text x="10.8880%" y="447.50"></text></g><g><title>__libc_malloc (6 samples, 0.07%)</title><rect x="11.1626%" y="405" width="0.0732%" height="15" fill="rgb(210,61,42)" fg:x="915" fg:w="6"/><text x="11.4126%" y="415.50"></text></g><g><title>__aarch64_cas4_acq (3 samples, 0.04%)</title><rect x="11.9800%" y="389" width="0.0366%" height="15" fill="rgb(211,52,33)" fg:x="982" fg:w="3"/><text x="12.2300%" y="399.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.01%)</title><rect x="12.0166%" y="389" width="0.0122%" height="15" fill="rgb(234,58,33)" fg:x="985" fg:w="1"/><text x="12.2666%" y="399.50"></text></g><g><title>__memcpy_generic (5 samples, 0.06%)</title><rect x="12.1142%" y="373" width="0.0610%" height="15" fill="rgb(220,115,36)" fg:x="993" fg:w="5"/><text x="12.3642%" y="383.50"></text></g><g><title>_int_free (12 samples, 0.15%)</title><rect x="12.1752%" y="373" width="0.1464%" height="15" fill="rgb(243,153,54)" fg:x="998" fg:w="12"/><text x="12.4252%" y="383.50"></text></g><g><title>__libc_realloc (160 samples, 1.95%)</title><rect x="11.2358%" y="405" width="1.9519%" height="15" fill="rgb(251,47,18)" fg:x="921" fg:w="160"/><text x="11.4858%" y="415.50">_..</text></g><g><title>_int_realloc (95 samples, 1.16%)</title><rect x="12.0288%" y="389" width="1.1590%" height="15" fill="rgb(242,102,42)" fg:x="986" fg:w="95"/><text x="12.2788%" y="399.50"></text></g><g><title>_int_malloc (71 samples, 0.87%)</title><rect x="12.3216%" y="373" width="0.8662%" height="15" fill="rgb(234,31,38)" fg:x="1010" fg:w="71"/><text x="12.5716%" y="383.50"></text></g><g><title>unlink_chunk.isra.2 (5 samples, 0.06%)</title><rect x="13.1268%" y="357" width="0.0610%" height="15" fill="rgb(221,117,51)" fg:x="1076" fg:w="5"/><text x="13.3768%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (195 samples, 2.38%)</title><rect x="10.8332%" y="437" width="2.3789%" height="15" fill="rgb(212,20,18)" fg:x="888" fg:w="195"/><text x="11.0832%" y="447.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (176 samples, 2.15%)</title><rect x="11.0650%" y="421" width="2.1471%" height="15" fill="rgb(245,133,36)" fg:x="907" fg:w="176"/><text x="11.3150%" y="431.50">a..</text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="13.1878%" y="405" width="0.0244%" height="15" fill="rgb(212,6,19)" fg:x="1081" fg:w="2"/><text x="13.4378%" y="415.50"></text></g><g><title>free (4 samples, 0.05%)</title><rect x="13.2122%" y="437" width="0.0488%" height="15" fill="rgb(218,1,36)" fg:x="1083" fg:w="4"/><text x="13.4622%" y="447.50"></text></g><g><title>rust_ucp_dt_make_iov (1 samples, 0.01%)</title><rect x="13.2609%" y="437" width="0.0122%" height="15" fill="rgb(246,84,54)" fg:x="1087" fg:w="1"/><text x="13.5109%" y="447.50"></text></g><g><title>[libucp.so.0.0.0] (3 samples, 0.04%)</title><rect x="39.7950%" y="341" width="0.0366%" height="15" fill="rgb(242,110,6)" fg:x="3262" fg:w="3"/><text x="40.0450%" y="351.50"></text></g><g><title>[libucp.so.0.0.0] (4,133 samples, 50.42%)</title><rect x="37.2209%" y="389" width="50.4209%" height="15" fill="rgb(214,47,5)" fg:x="3051" fg:w="4133"/><text x="37.4709%" y="399.50">[libucp.so.0.0.0]</text></g><g><title>ucp_dt_pack (4,026 samples, 49.12%)</title><rect x="38.5263%" y="373" width="49.1155%" height="15" fill="rgb(218,159,25)" fg:x="3158" fg:w="4026"/><text x="38.7763%" y="383.50">ucp_dt_pack</text></g><g><title>ucp_dt_iov_gather (4,009 samples, 48.91%)</title><rect x="38.7337%" y="357" width="48.9081%" height="15" fill="rgb(215,211,28)" fg:x="3175" fg:w="4009"/><text x="38.9837%" y="367.50">ucp_dt_iov_gather</text></g><g><title>__memcpy_thunderx2 (3,919 samples, 47.81%)</title><rect x="39.8316%" y="341" width="47.8102%" height="15" fill="rgb(238,59,32)" fg:x="3265" fg:w="3919"/><text x="40.0816%" y="351.50">__memcpy_thunderx2</text></g><g><title>pthread_spin_lock (56 samples, 0.68%)</title><rect x="87.6418%" y="389" width="0.6832%" height="15" fill="rgb(226,82,3)" fg:x="7184" fg:w="56"/><text x="87.8918%" y="399.50"></text></g><g><title>[libucp.so.0.0.0] (6,113 samples, 74.58%)</title><rect x="13.7733%" y="421" width="74.5761%" height="15" fill="rgb(240,164,32)" fg:x="1129" fg:w="6113"/><text x="14.0233%" y="431.50">[libucp.so.0.0.0]</text></g><g><title>uct_rc_mlx5_ep_am_bcopy (6,036 samples, 73.64%)</title><rect x="14.7127%" y="405" width="73.6367%" height="15" fill="rgb(232,46,7)" fg:x="1206" fg:w="6036"/><text x="14.9627%" y="415.50">uct_rc_mlx5_ep_am_bcopy</text></g><g><title>pthread_spin_unlock (2 samples, 0.02%)</title><rect x="88.3250%" y="389" width="0.0244%" height="15" fill="rgb(229,129,53)" fg:x="7240" fg:w="2"/><text x="88.5750%" y="399.50"></text></g><g><title>ucp_tag_send_nbx (6,164 samples, 75.20%)</title><rect x="13.2731%" y="437" width="75.1982%" height="15" fill="rgb(234,188,29)" fg:x="1088" fg:w="6164"/><text x="13.5231%" y="447.50">ucp_tag_send_nbx</text></g><g><title>ucp_request_send_start (10 samples, 0.12%)</title><rect x="88.3494%" y="421" width="0.1220%" height="15" fill="rgb(246,141,4)" fg:x="7242" fg:w="10"/><text x="88.5994%" y="431.50"></text></g><g><title>[libucp.so.0.0.0] (4 samples, 0.05%)</title><rect x="88.5690%" y="421" width="0.0488%" height="15" fill="rgb(229,23,39)" fg:x="7260" fg:w="4"/><text x="88.8190%" y="431.50"></text></g><g><title>pthread_spin_lock (8 samples, 0.10%)</title><rect x="89.3864%" y="405" width="0.0976%" height="15" fill="rgb(206,12,3)" fg:x="7327" fg:w="8"/><text x="89.6364%" y="415.50"></text></g><g><title>&lt;mpicd::message::PackSendMessage as mpicd::message::Message&gt;::progress (6,737 samples, 82.19%)</title><rect x="7.3076%" y="453" width="82.1886%" height="15" fill="rgb(252,226,20)" fg:x="599" fg:w="6737"/><text x="7.5576%" y="463.50">&lt;mpicd::message::PackSendMessage as mpicd::message::Message&gt;::progress</text></g><g><title>ucp_worker_progress (84 samples, 1.02%)</title><rect x="88.4714%" y="437" width="1.0248%" height="15" fill="rgb(216,123,35)" fg:x="7252" fg:w="84"/><text x="88.7214%" y="447.50"></text></g><g><title>[libuct_ib.so.0.0.0] (72 samples, 0.88%)</title><rect x="88.6178%" y="421" width="0.8784%" height="15" fill="rgb(212,68,40)" fg:x="7264" fg:w="72"/><text x="88.8678%" y="431.50"></text></g><g><title>ucs_mpool_put (1 samples, 0.01%)</title><rect x="89.4840%" y="405" width="0.0122%" height="15" fill="rgb(254,125,32)" fg:x="7335" fg:w="1"/><text x="89.7340%" y="415.50"></text></g><g><title>&lt;mpicd::request::Request as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="89.6060%" y="437" width="0.0366%" height="15" fill="rgb(253,97,22)" fg:x="7345" fg:w="3"/><text x="89.8560%" y="447.50"></text></g><g><title>ucp_request_free (2 samples, 0.02%)</title><rect x="89.6182%" y="421" width="0.0244%" height="15" fill="rgb(241,101,14)" fg:x="7346" fg:w="2"/><text x="89.8682%" y="431.50"></text></g><g><title>_int_free (67 samples, 0.82%)</title><rect x="89.6426%" y="437" width="0.8174%" height="15" fill="rgb(238,103,29)" fg:x="7348" fg:w="67"/><text x="89.8926%" y="447.50"></text></g><g><title>__aarch64_cas8_rel (1 samples, 0.01%)</title><rect x="90.4477%" y="421" width="0.0122%" height="15" fill="rgb(233,195,47)" fg:x="7414" fg:w="1"/><text x="90.6977%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.4599%" y="421" width="0.0122%" height="15" fill="rgb(246,218,30)" fg:x="7415" fg:w="1"/><text x="90.7099%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::message::PackRecvMessage&gt; (2 samples, 0.02%)</title><rect x="90.4599%" y="437" width="0.0244%" height="15" fill="rgb(219,145,47)" fg:x="7415" fg:w="2"/><text x="90.7099%" y="447.50"></text></g><g><title>free (1 samples, 0.01%)</title><rect x="90.4721%" y="421" width="0.0122%" height="15" fill="rgb(243,12,26)" fg:x="7416" fg:w="1"/><text x="90.7221%" y="431.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="90.5697%" y="421" width="0.0122%" height="15" fill="rgb(214,87,16)" fg:x="7424" fg:w="1"/><text x="90.8197%" y="431.50"></text></g><g><title>__aarch64_cas8_rel (1 samples, 0.01%)</title><rect x="92.1801%" y="405" width="0.0122%" height="15" fill="rgb(208,99,42)" fg:x="7556" fg:w="1"/><text x="92.4301%" y="415.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 0.01%)</title><rect x="92.1923%" y="405" width="0.0122%" height="15" fill="rgb(253,99,2)" fg:x="7557" fg:w="1"/><text x="92.4423%" y="415.50"></text></g><g><title>_int_free (136 samples, 1.66%)</title><rect x="90.5819%" y="421" width="1.6591%" height="15" fill="rgb(220,168,23)" fg:x="7425" fg:w="136"/><text x="90.8319%" y="431.50"></text></g><g><title>unlink_chunk.isra.2 (3 samples, 0.04%)</title><rect x="92.2045%" y="405" width="0.0366%" height="15" fill="rgb(242,38,24)" fg:x="7558" fg:w="3"/><text x="92.4545%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;mpicd::message::PackSendMessage&gt; (167 samples, 2.04%)</title><rect x="90.4843%" y="437" width="2.0373%" height="15" fill="rgb(225,182,9)" fg:x="7417" fg:w="167"/><text x="90.7343%" y="447.50">c..</text></g><g><title>free (23 samples, 0.28%)</title><rect x="92.2411%" y="421" width="0.2806%" height="15" fill="rgb(243,178,37)" fg:x="7561" fg:w="23"/><text x="92.4911%" y="431.50"></text></g><g><title>mpicd::Handle::remove_message (256 samples, 3.12%)</title><rect x="89.4962%" y="453" width="3.1231%" height="15" fill="rgb(232,139,19)" fg:x="7336" fg:w="256"/><text x="89.7462%" y="463.50">mpi..</text></g><g><title>free (8 samples, 0.10%)</title><rect x="92.5217%" y="437" width="0.0976%" height="15" fill="rgb(225,201,24)" fg:x="7584" fg:w="8"/><text x="92.7717%" y="447.50"></text></g><g><title>mpicd::request::Request::status (1 samples, 0.01%)</title><rect x="92.6193%" y="453" width="0.0122%" height="15" fill="rgb(221,47,46)" fg:x="7592" fg:w="1"/><text x="92.8693%" y="463.50"></text></g><g><title>[libucp.so.0.0.0] (17 samples, 0.21%)</title><rect x="92.9486%" y="437" width="0.2074%" height="15" fill="rgb(249,23,13)" fg:x="7619" fg:w="17"/><text x="93.1986%" y="447.50"></text></g><g><title>pthread_self@GLIBC_2.17 (1 samples, 0.01%)</title><rect x="97.8895%" y="421" width="0.0122%" height="15" fill="rgb(219,9,5)" fg:x="8024" fg:w="1"/><text x="98.1395%" y="431.50"></text></g><g><title>pthread_spin_lock (69 samples, 0.84%)</title><rect x="97.9017%" y="421" width="0.8418%" height="15" fill="rgb(254,171,16)" fg:x="8025" fg:w="69"/><text x="98.1517%" y="431.50"></text></g><g><title>__aarch64_swp4_acq (1 samples, 0.01%)</title><rect x="98.7312%" y="405" width="0.0122%" height="15" fill="rgb(230,171,20)" fg:x="8093" fg:w="1"/><text x="98.9812%" y="415.50"></text></g><g><title>ucp_eager_only_handler (1 samples, 0.01%)</title><rect x="98.7434%" y="421" width="0.0122%" height="15" fill="rgb(210,71,41)" fg:x="8094" fg:w="1"/><text x="98.9934%" y="431.50"></text></g><g><title>ucs_mpool_put (8 samples, 0.10%)</title><rect x="98.7556%" y="421" width="0.0976%" height="15" fill="rgb(206,173,20)" fg:x="8095" fg:w="8"/><text x="99.0056%" y="431.50"></text></g><g><title>[libuct_ib.so.0.0.0] (468 samples, 5.71%)</title><rect x="93.1560%" y="437" width="5.7094%" height="15" fill="rgb(233,88,34)" fg:x="7636" fg:w="468"/><text x="93.4060%" y="447.50">[libuct..</text></g><g><title>uct_rc_iface_fc_handler (1 samples, 0.01%)</title><rect x="98.8532%" y="421" width="0.0122%" height="15" fill="rgb(223,209,46)" fg:x="8103" fg:w="1"/><text x="99.1032%" y="431.50"></text></g><g><title>&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::waitall (7,604 samples, 92.77%)</title><rect x="6.1120%" y="469" width="92.7656%" height="15" fill="rgb(250,43,18)" fg:x="501" fg:w="7604"/><text x="6.3620%" y="479.50">&lt;mpicd::context::Context as mpicd::communicator::Communicator&gt;::waitall</text></g><g><title>ucp_worker_progress (512 samples, 6.25%)</title><rect x="92.6315%" y="453" width="6.2462%" height="15" fill="rgb(208,13,10)" fg:x="7593" fg:w="512"/><text x="92.8815%" y="463.50">ucp_work..</text></g><g><title>__ucs_async_poll_missed (1 samples, 0.01%)</title><rect x="98.8654%" y="437" width="0.0122%" height="15" fill="rgb(212,200,36)" fg:x="8104" fg:w="1"/><text x="99.1154%" y="447.50"></text></g><g><title>[libucs.so.0.0.0] (1 samples, 0.01%)</title><rect x="98.8654%" y="421" width="0.0122%" height="15" fill="rgb(225,90,30)" fg:x="8104" fg:w="1"/><text x="99.1154%" y="431.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="98.8654%" y="405" width="0.0122%" height="15" fill="rgb(236,182,39)" fg:x="8104" fg:w="1"/><text x="99.1154%" y="415.50"></text></g><g><title>[libuct_ib.so.0.0.0] (1 samples, 0.01%)</title><rect x="98.8654%" y="389" width="0.0122%" height="15" fill="rgb(212,144,35)" fg:x="8104" fg:w="1"/><text x="99.1154%" y="399.50"></text></g><g><title>uct_ud_ep_process_rx (1 samples, 0.01%)</title><rect x="98.8654%" y="373" width="0.0122%" height="15" fill="rgb(228,63,44)" fg:x="8104" fg:w="1"/><text x="99.1154%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="98.8776%" y="469" width="0.0122%" height="15" fill="rgb(228,109,6)" fg:x="8105" fg:w="1"/><text x="99.1276%" y="479.50"></text></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="98.8898%" y="469" width="0.0488%" height="15" fill="rgb(238,117,24)" fg:x="8106" fg:w="4"/><text x="99.1398%" y="479.50"></text></g><g><title>__memcpy_generic (2 samples, 0.02%)</title><rect x="99.0118%" y="405" width="0.0244%" height="15" fill="rgb(242,26,26)" fg:x="8116" fg:w="2"/><text x="99.2618%" y="415.50"></text></g><g><title>__libc_realloc (21 samples, 0.26%)</title><rect x="98.9508%" y="437" width="0.2562%" height="15" fill="rgb(221,92,48)" fg:x="8111" fg:w="21"/><text x="99.2008%" y="447.50"></text></g><g><title>_int_realloc (17 samples, 0.21%)</title><rect x="98.9996%" y="421" width="0.2074%" height="15" fill="rgb(209,209,32)" fg:x="8115" fg:w="17"/><text x="99.2496%" y="431.50"></text></g><g><title>_int_malloc (14 samples, 0.17%)</title><rect x="99.0362%" y="405" width="0.1708%" height="15" fill="rgb(221,70,22)" fg:x="8118" fg:w="14"/><text x="99.2862%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.28%)</title><rect x="98.9386%" y="469" width="0.2806%" height="15" fill="rgb(248,145,5)" fg:x="8110" fg:w="23"/><text x="99.1886%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.27%)</title><rect x="98.9508%" y="453" width="0.2684%" height="15" fill="rgb(226,116,26)" fg:x="8111" fg:w="22"/><text x="99.2008%" y="463.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="99.2070%" y="437" width="0.0122%" height="15" fill="rgb(244,5,17)" fg:x="8132" fg:w="1"/><text x="99.4570%" y="447.50"></text></g><g><title>&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::body (7,827 samples, 95.49%)</title><rect x="3.7453%" y="485" width="95.4862%" height="15" fill="rgb(252,159,33)" fg:x="307" fg:w="7827"/><text x="3.9953%" y="495.50">&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::body</text></g><g><title>free (1 samples, 0.01%)</title><rect x="99.2192%" y="469" width="0.0122%" height="15" fill="rgb(206,71,0)" fg:x="8133" fg:w="1"/><text x="99.4692%" y="479.50"></text></g><g><title>&lt;mpicd_bw::Benchmark&lt;R,C&gt; as mpicd_rust_benchmarks::bw::BandwidthBenchmark&gt;::init (1 samples, 0.01%)</title><rect x="99.2314%" y="485" width="0.0122%" height="15" fill="rgb(233,118,54)" fg:x="8134" fg:w="1"/><text x="99.4814%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="99.2314%" y="469" width="0.0122%" height="15" fill="rgb(234,83,48)" fg:x="8134" fg:w="1"/><text x="99.4814%" y="479.50"></text></g><g><title>mpicd_rust_benchmarks::datatype::StructVecArray::new (1 samples, 0.01%)</title><rect x="99.2314%" y="453" width="0.0122%" height="15" fill="rgb(228,3,54)" fg:x="8134" fg:w="1"/><text x="99.4814%" y="463.50"></text></g><g><title>__libc_start_main (7,930 samples, 96.74%)</title><rect x="2.5253%" y="597" width="96.7427%" height="15" fill="rgb(226,155,13)" fg:x="207" fg:w="7930"/><text x="2.7753%" y="607.50">__libc_start_main</text></g><g><title>main (7,930 samples, 96.74%)</title><rect x="2.5253%" y="581" width="96.7427%" height="15" fill="rgb(241,28,37)" fg:x="207" fg:w="7930"/><text x="2.7753%" y="591.50">main</text></g><g><title>std::rt::lang_start_internal (7,930 samples, 96.74%)</title><rect x="2.5253%" y="565" width="96.7427%" height="15" fill="rgb(233,93,10)" fg:x="207" fg:w="7930"/><text x="2.7753%" y="575.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (7,930 samples, 96.74%)</title><rect x="2.5253%" y="549" width="96.7427%" height="15" fill="rgb(225,113,19)" fg:x="207" fg:w="7930"/><text x="2.7753%" y="559.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7,930 samples, 96.74%)</title><rect x="2.5253%" y="533" width="96.7427%" height="15" fill="rgb(241,2,18)" fg:x="207" fg:w="7930"/><text x="2.7753%" y="543.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>mpicd_bw::main (7,930 samples, 96.74%)</title><rect x="2.5253%" y="517" width="96.7427%" height="15" fill="rgb(228,207,21)" fg:x="207" fg:w="7930"/><text x="2.7753%" y="527.50">mpicd_bw::main</text></g><g><title>mpicd_rust_benchmarks::bw::bw (7,840 samples, 95.64%)</title><rect x="3.6233%" y="501" width="95.6447%" height="15" fill="rgb(213,211,35)" fg:x="297" fg:w="7840"/><text x="3.8733%" y="511.50">mpicd_rust_benchmarks::bw::bw</text></g><g><title>std::sys::pal::unix::time::Timespec::now (2 samples, 0.02%)</title><rect x="99.2436%" y="485" width="0.0244%" height="15" fill="rgb(209,83,10)" fg:x="8135" fg:w="2"/><text x="99.4936%" y="495.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (2 samples, 0.02%)</title><rect x="99.2436%" y="469" width="0.0244%" height="15" fill="rgb(209,164,1)" fg:x="8135" fg:w="2"/><text x="99.4936%" y="479.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="99.3046%" y="533" width="0.0122%" height="15" fill="rgb(213,184,43)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="543.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="99.3046%" y="517" width="0.0122%" height="15" fill="rgb(231,61,34)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="527.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="99.3046%" y="501" width="0.0122%" height="15" fill="rgb(235,75,3)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="511.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="99.3046%" y="485" width="0.0122%" height="15" fill="rgb(220,106,47)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="495.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.01%)</title><rect x="99.3046%" y="469" width="0.0122%" height="15" fill="rgb(210,196,33)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="479.50"></text></g><g><title>_dl_get_file_id (1 samples, 0.01%)</title><rect x="99.3046%" y="453" width="0.0122%" height="15" fill="rgb(229,154,42)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="463.50"></text></g><g><title>__GI___fxstat (1 samples, 0.01%)</title><rect x="99.3046%" y="437" width="0.0122%" height="15" fill="rgb(228,114,26)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3046%" y="421" width="0.0122%" height="15" fill="rgb(208,144,1)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3046%" y="405" width="0.0122%" height="15" fill="rgb(239,112,37)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3046%" y="389" width="0.0122%" height="15" fill="rgb(210,96,50)" fg:x="8140" fg:w="1"/><text x="99.5546%" y="399.50"></text></g><g><title>_dl_start_final (5 samples, 0.06%)</title><rect x="99.2924%" y="581" width="0.0610%" height="15" fill="rgb(222,178,2)" fg:x="8139" fg:w="5"/><text x="99.5424%" y="591.50"></text></g><g><title>_dl_sysdep_start (5 samples, 0.06%)</title><rect x="99.2924%" y="565" width="0.0610%" height="15" fill="rgb(226,74,18)" fg:x="8139" fg:w="5"/><text x="99.5424%" y="575.50"></text></g><g><title>dl_main (4 samples, 0.05%)</title><rect x="99.3046%" y="549" width="0.0488%" height="15" fill="rgb(225,67,54)" fg:x="8140" fg:w="4"/><text x="99.5546%" y="559.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.04%)</title><rect x="99.3168%" y="533" width="0.0366%" height="15" fill="rgb(251,92,32)" fg:x="8141" fg:w="3"/><text x="99.5668%" y="543.50"></text></g><g><title>elf_dynamic_do_Rela (3 samples, 0.04%)</title><rect x="99.3168%" y="517" width="0.0366%" height="15" fill="rgb(228,149,22)" fg:x="8141" fg:w="3"/><text x="99.5668%" y="527.50"></text></g><g><title>elf_machine_rela (3 samples, 0.04%)</title><rect x="99.3168%" y="501" width="0.0366%" height="15" fill="rgb(243,54,13)" fg:x="8141" fg:w="3"/><text x="99.5668%" y="511.50"></text></g><g><title>_dl_lookup_symbol_x (2 samples, 0.02%)</title><rect x="99.3290%" y="485" width="0.0244%" height="15" fill="rgb(243,180,28)" fg:x="8142" fg:w="2"/><text x="99.5790%" y="495.50"></text></g><g><title>do_lookup_x (2 samples, 0.02%)</title><rect x="99.3290%" y="469" width="0.0244%" height="15" fill="rgb(208,167,24)" fg:x="8142" fg:w="2"/><text x="99.5790%" y="479.50"></text></g><g><title>check_match (1 samples, 0.01%)</title><rect x="99.3412%" y="453" width="0.0122%" height="15" fill="rgb(245,73,45)" fg:x="8143" fg:w="1"/><text x="99.5912%" y="463.50"></text></g><g><title>_start (7,940 samples, 96.86%)</title><rect x="2.5009%" y="629" width="96.8647%" height="15" fill="rgb(237,203,48)" fg:x="205" fg:w="7940"/><text x="2.7509%" y="639.50">_start</text></g><g><title>_start (7,938 samples, 96.84%)</title><rect x="2.5253%" y="613" width="96.8403%" height="15" fill="rgb(211,197,16)" fg:x="207" fg:w="7938"/><text x="2.7753%" y="623.50">_start</text></g><g><title>_dl_start (8 samples, 0.10%)</title><rect x="99.2680%" y="597" width="0.0976%" height="15" fill="rgb(243,99,51)" fg:x="8137" fg:w="8"/><text x="99.5180%" y="607.50"></text></g><g><title>elf_machine_load_address (1 samples, 0.01%)</title><rect x="99.3534%" y="581" width="0.0122%" height="15" fill="rgb(215,123,29)" fg:x="8144" fg:w="1"/><text x="99.6034%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3534%" y="565" width="0.0122%" height="15" fill="rgb(239,186,37)" fg:x="8144" fg:w="1"/><text x="99.6034%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3534%" y="549" width="0.0122%" height="15" fill="rgb(252,136,39)" fg:x="8144" fg:w="1"/><text x="99.6034%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.3534%" y="533" width="0.0122%" height="15" fill="rgb(223,213,32)" fg:x="8144" fg:w="1"/><text x="99.6034%" y="543.50"></text></g><g><title>calloc@plt (1 samples, 0.01%)</title><rect x="99.3656%" y="629" width="0.0122%" height="15" fill="rgb(233,115,5)" fg:x="8145" fg:w="1"/><text x="99.6156%" y="639.50"></text></g><g><title>create_thread (2 samples, 0.02%)</title><rect x="99.3778%" y="629" width="0.0244%" height="15" fill="rgb(207,226,44)" fg:x="8146" fg:w="2"/><text x="99.6278%" y="639.50"></text></g><g><title>clone (2 samples, 0.02%)</title><rect x="99.3778%" y="613" width="0.0244%" height="15" fill="rgb(208,126,0)" fg:x="8146" fg:w="2"/><text x="99.6278%" y="623.50"></text></g><g><title>free@plt (4 samples, 0.05%)</title><rect x="99.4022%" y="629" width="0.0488%" height="15" fill="rgb(244,66,21)" fg:x="8148" fg:w="4"/><text x="99.6522%" y="639.50"></text></g><g><title>malloc@plt (2 samples, 0.02%)</title><rect x="99.4510%" y="629" width="0.0244%" height="15" fill="rgb(222,97,12)" fg:x="8152" fg:w="2"/><text x="99.7010%" y="639.50"></text></g><g><title>on_load (1 samples, 0.01%)</title><rect x="99.4754%" y="629" width="0.0122%" height="15" fill="rgb(219,213,19)" fg:x="8154" fg:w="1"/><text x="99.7254%" y="639.50"></text></g><g><title>on_load (1 samples, 0.01%)</title><rect x="99.4754%" y="613" width="0.0122%" height="15" fill="rgb(252,169,30)" fg:x="8154" fg:w="1"/><text x="99.7254%" y="623.50"></text></g><g><title>_dl_runtime_resolve (1 samples, 0.01%)</title><rect x="99.4754%" y="597" width="0.0122%" height="15" fill="rgb(206,32,51)" fg:x="8154" fg:w="1"/><text x="99.7254%" y="607.50"></text></g><g><title>_dl_fixup (1 samples, 0.01%)</title><rect x="99.4754%" y="581" width="0.0122%" height="15" fill="rgb(250,172,42)" fg:x="8154" fg:w="1"/><text x="99.7254%" y="591.50"></text></g><g><title>progress_engine (1 samples, 0.01%)</title><rect x="99.4876%" y="629" width="0.0122%" height="15" fill="rgb(209,34,43)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="639.50"></text></g><g><title>progress_engine (1 samples, 0.01%)</title><rect x="99.4876%" y="613" width="0.0122%" height="15" fill="rgb(223,11,35)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="623.50"></text></g><g><title>_dl_runtime_resolve (1 samples, 0.01%)</title><rect x="99.4876%" y="597" width="0.0122%" height="15" fill="rgb(251,219,26)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="607.50"></text></g><g><title>_dl_fixup (1 samples, 0.01%)</title><rect x="99.4876%" y="581" width="0.0122%" height="15" fill="rgb(231,119,3)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="591.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="99.4876%" y="565" width="0.0122%" height="15" fill="rgb(216,97,11)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="575.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="99.4876%" y="549" width="0.0122%" height="15" fill="rgb(223,59,9)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="559.50"></text></g><g><title>check_match (1 samples, 0.01%)</title><rect x="99.4876%" y="533" width="0.0122%" height="15" fill="rgb(233,93,31)" fg:x="8155" fg:w="1"/><text x="99.7376%" y="543.50"></text></g><g><title>realloc@plt (1 samples, 0.01%)</title><rect x="99.4998%" y="629" width="0.0122%" height="15" fill="rgb(239,81,33)" fg:x="8156" fg:w="1"/><text x="99.7498%" y="639.50"></text></g><g><title>start_thread (1 samples, 0.01%)</title><rect x="99.5120%" y="629" width="0.0122%" height="15" fill="rgb(213,120,34)" fg:x="8157" fg:w="1"/><text x="99.7620%" y="639.50"></text></g><g><title>__ctype_init@plt (1 samples, 0.01%)</title><rect x="99.5120%" y="613" width="0.0122%" height="15" fill="rgb(243,49,53)" fg:x="8157" fg:w="1"/><text x="99.7620%" y="623.50"></text></g><g><title>__ctype_init (1 samples, 0.01%)</title><rect x="99.5730%" y="597" width="0.0122%" height="15" fill="rgb(247,216,33)" fg:x="8162" fg:w="1"/><text x="99.8230%" y="607.50"></text></g><g><title>thread_start (6 samples, 0.07%)</title><rect x="99.5242%" y="629" width="0.0732%" height="15" fill="rgb(226,26,14)" fg:x="8158" fg:w="6"/><text x="99.7742%" y="639.50"></text></g><g><title>start_thread (6 samples, 0.07%)</title><rect x="99.5242%" y="613" width="0.0732%" height="15" fill="rgb(215,49,53)" fg:x="8158" fg:w="6"/><text x="99.7742%" y="623.50"></text></g><g><title>progress_engine (1 samples, 0.01%)</title><rect x="99.5852%" y="597" width="0.0122%" height="15" fill="rgb(245,162,40)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="607.50"></text></g><g><title>event_base_loop (1 samples, 0.01%)</title><rect x="99.5852%" y="581" width="0.0122%" height="15" fill="rgb(229,68,17)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="591.50"></text></g><g><title>event_process_active (1 samples, 0.01%)</title><rect x="99.5852%" y="565" width="0.0122%" height="15" fill="rgb(213,182,10)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="575.50"></text></g><g><title>event_process_active_single_queue (1 samples, 0.01%)</title><rect x="99.5852%" y="549" width="0.0122%" height="15" fill="rgb(245,125,30)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="559.50"></text></g><g><title>pmix_ptl_base_process_msg (1 samples, 0.01%)</title><rect x="99.5852%" y="533" width="0.0122%" height="15" fill="rgb(232,202,2)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="543.50"></text></g><g><title>job_data (1 samples, 0.01%)</title><rect x="99.5852%" y="517" width="0.0122%" height="15" fill="rgb(237,140,51)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="527.50"></text></g><g><title>client_connect_to_shmem_from_buffi (1 samples, 0.01%)</title><rect x="99.5852%" y="501" width="0.0122%" height="15" fill="rgb(236,157,25)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="511.50"></text></g><g><title>pmix_gds_shmem_get_job_tracker (1 samples, 0.01%)</title><rect x="99.5852%" y="485" width="0.0122%" height="15" fill="rgb(219,209,0)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="495.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="99.5852%" y="469" width="0.0122%" height="15" fill="rgb(240,116,54)" fg:x="8163" fg:w="1"/><text x="99.8352%" y="479.50"></text></g><g><title>ucp_dt_pack (4 samples, 0.05%)</title><rect x="99.5974%" y="629" width="0.0488%" height="15" fill="rgb(216,10,36)" fg:x="8164" fg:w="4"/><text x="99.8474%" y="639.50"></text></g><g><title>ucp_dt_iov_gather@plt (4 samples, 0.05%)</title><rect x="99.5974%" y="613" width="0.0488%" height="15" fill="rgb(222,72,44)" fg:x="8164" fg:w="4"/><text x="99.8474%" y="623.50"></text></g><g><title>ucp_tag_send_nbx@plt (3 samples, 0.04%)</title><rect x="99.6462%" y="629" width="0.0366%" height="15" fill="rgb(232,159,9)" fg:x="8168" fg:w="3"/><text x="99.8962%" y="639.50"></text></g><g><title>ucp_worker_iface_progress_ep (1 samples, 0.01%)</title><rect x="99.6828%" y="629" width="0.0122%" height="15" fill="rgb(210,39,32)" fg:x="8171" fg:w="1"/><text x="99.9328%" y="639.50"></text></g><g><title>uct_base_iface_progress_enable@plt (1 samples, 0.01%)</title><rect x="99.6828%" y="613" width="0.0122%" height="15" fill="rgb(216,194,45)" fg:x="8171" fg:w="1"/><text x="99.9328%" y="623.50"></text></g><g><title>ucp_worker_progress@plt (8 samples, 0.10%)</title><rect x="99.6950%" y="629" width="0.0976%" height="15" fill="rgb(218,18,35)" fg:x="8172" fg:w="8"/><text x="99.9450%" y="639.50"></text></g><g><title>[libucp.so.0.0.0] (6 samples, 0.07%)</title><rect x="99.7926%" y="613" width="0.0732%" height="15" fill="rgb(207,83,51)" fg:x="8180" fg:w="6"/><text x="100.0426%" y="623.50"></text></g><g><title>ucp_dt_pack@plt (6 samples, 0.07%)</title><rect x="99.7926%" y="597" width="0.0732%" height="15" fill="rgb(225,63,43)" fg:x="8180" fg:w="6"/><text x="100.0426%" y="607.50"></text></g><g><title>pthread_spin_lock@plt (5 samples, 0.06%)</title><rect x="99.8658%" y="613" width="0.0610%" height="15" fill="rgb(207,57,36)" fg:x="8186" fg:w="5"/><text x="100.1158%" y="623.50"></text></g><g><title>uct_rc_mlx5_ep_am_bcopy (16 samples, 0.20%)</title><rect x="99.7926%" y="629" width="0.1952%" height="15" fill="rgb(216,99,33)" fg:x="8180" fg:w="16"/><text x="100.0426%" y="639.50"></text></g><g><title>pthread_spin_unlock@plt (5 samples, 0.06%)</title><rect x="99.9268%" y="613" width="0.0610%" height="15" fill="rgb(225,42,16)" fg:x="8191" fg:w="5"/><text x="100.1768%" y="623.50"></text></g><g><title>all (8,197 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(220,201,45)" fg:x="0" fg:w="8197"/><text x="0.2500%" y="671.50"></text></g><g><title>mpicd_bw (8,005 samples, 97.66%)</title><rect x="2.3423%" y="645" width="97.6577%" height="15" fill="rgb(225,33,4)" fg:x="192" fg:w="8005"/><text x="2.5923%" y="655.50">mpicd_bw</text></g><g><title>uct_tcp_cm_conn_match_ops (1 samples, 0.01%)</title><rect x="99.9878%" y="629" width="0.0122%" height="15" fill="rgb(224,33,50)" fg:x="8196" fg:w="1"/><text x="100.2378%" y="639.50"></text></g><g><title>[libuct.so.0.0.0] (1 samples, 0.01%)</title><rect x="99.9878%" y="613" width="0.0122%" height="15" fill="rgb(246,198,51)" fg:x="8196" fg:w="1"/><text x="100.2378%" y="623.50"></text></g><g><title>ucs_sockaddr_inet_addr_size@plt (1 samples, 0.01%)</title><rect x="99.9878%" y="597" width="0.0122%" height="15" fill="rgb(205,22,4)" fg:x="8196" fg:w="1"/><text x="100.2378%" y="607.50"></text></g></svg></svg>