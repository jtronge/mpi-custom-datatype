#!/usr/bin/env python3
"""mpicd cc wrapper script."""
import sys
import subprocess
import sys
from pathlib import Path


def run_w_stdout(args):
    """Run commands and return stdout."""
    cp = subprocess.run(args.split(), stdout=subprocess.PIPE, check=True)
    return cp.stdout.strip()


if __name__ == '__main__':
    if 'mpiCC' in sys.argv[0] or 'mpicxx' in sys.argv[0]:
        compiler = '@CMAKE_CXX_COMPILER@'.split()
    else:
        compiler = '@CMAKE_C_COMPILER@'.split()
    prefix = '@CMAKE_INSTALL_PREFIX@'

    mpicc_args = sys.argv[1:]

    real_args = compiler[:]
    real_args.extend(mpicc_args)
    real_args.append(f'-Wl,-rpath,{prefix}/lib')
    real_args.append(f'{prefix}/lib/libmpi.so')
    real_args.append(f'-I{prefix}/include')
    # real_args.extend(pmix_libs)
    # real_args.extend(pmix_cflags)
    # real_args.extend(ucx_libs)
    # real_args.extend(ucx_cflags)
    # real_args.extend(['-lm', '-ldl', '-lc'])

    cp = subprocess.run(real_args)
    sys.exit(cp.returncode)
